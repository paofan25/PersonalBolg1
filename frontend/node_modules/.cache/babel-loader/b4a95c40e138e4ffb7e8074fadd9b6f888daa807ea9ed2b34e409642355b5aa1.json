{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { xfyunService } from '@/services/xfyun';\nimport { weatherService } from '@/services/weather';\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion,\n  weatherInfo: state => state.weatherInfo,\n  soundEnabled: state => state.soundEnabled\n};\nconst mutations = {\n  addMessage(state, message) {\n    console.log('[Chat Store] 添加消息:', message);\n    if (message && typeof message.text === 'string' && message.type) {\n      state.messages.push(message);\n    } else {\n      console.error('[Chat Store] 无效的消息格式:', message);\n    }\n  },\n  setTyping(state, status) {\n    state.isTyping = status;\n  },\n  updateEmotion(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  setWeatherInfo(state, info) {\n    state.weatherInfo = info;\n  },\n  toggleSound(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  clearMessages(state) {\n    state.messages = [];\n  }\n};\n\n// 城市别名映射\nconst cityAliases = {\n  '南京': ['宁', '建康', '金陵'],\n  '北京': ['京', '北平', '帝都'],\n  '上海': ['沪', '魔都']\n};\n\n// 模糊匹配城市名\nfunction fuzzyMatchCity(text) {\n  console.log('[Chat Store] 开始城市匹配:', text);\n\n  // 1. 完整城市名匹配\n  const cities = ['南京', '北京', '上海'];\n  for (const city of cities) {\n    if (text.includes(city)) {\n      console.log('[Chat Store] 完整匹配到城市:', city);\n      return city;\n    }\n  }\n\n  // 2. 别名匹配\n  for (const [city, aliases] of Object.entries(cityAliases)) {\n    if (aliases.some(alias => text.includes(alias))) {\n      console.log('[Chat Store] 别名匹配到城市:', city);\n      return city;\n    }\n  }\n\n  // 3. 提取可能的城市名（包含\"市\"字的）\n  const cityMatch = text.match(/([^市]+)市/);\n  if (cityMatch && cities.includes(cityMatch[1])) {\n    console.log('[Chat Store] 提取到城市名:', cityMatch[1]);\n    return cityMatch[1];\n  }\n\n  // 4. 部分匹配（作为最后的尝试）\n  for (const city of cities) {\n    if (text.includes(city.slice(0, 1))) {\n      console.log('[Chat Store] 部分匹配到城市:', city);\n      return city;\n    }\n  }\n  console.log('[Chat Store] 未匹配到任何城市');\n  return null;\n}\nconst actions = {\n  async sendMessage({\n    commit,\n    state\n  }, {\n    text,\n    type\n  }) {\n    console.log('[Chat Store] 开始处理消息:', {\n      text,\n      type\n    });\n    if (!text || typeof text !== 'string') {\n      console.error('[Chat Store] 消息内容为空或格式错误');\n      return;\n    }\n    try {\n      // 添加用户消息\n      commit('addMessage', {\n        text,\n        type\n      });\n\n      // 设置正在输入状态\n      commit('setTyping', true);\n\n      // 分析情感\n      try {\n        const emotion = await xfyunService.analyzeEmotion(text);\n        console.log('[Chat Store] 情感分析结果:', emotion);\n        commit('updateEmotion', emotion);\n      } catch (error) {\n        console.error('[Chat Store] 情感分析失败:', error);\n        commit('updateEmotion', 'neutral');\n      }\n\n      // 检查是否是天气查询\n      const weatherKeywords = ['天气', '温度', '下雨', '阴天', '晴天'];\n      const isWeatherQuery = weatherKeywords.some(keyword => text.includes(keyword));\n      let response = '';\n      if (isWeatherQuery) {\n        console.log('[Chat Store] 检测到天气查询');\n        const city = fuzzyMatchCity(text);\n        if (city) {\n          try {\n            const weatherData = await weatherService.getCurrentWeather(city);\n            console.log('[Chat Store] 获取到天气数据:', weatherData);\n            commit('setWeatherInfo', weatherData);\n            response = `${city}今天${weatherData.text}，温度${weatherData.temp}℃，${weatherService.generateWeatherDescription(weatherData)}`;\n          } catch (error) {\n            console.error('[Chat Store] 获取天气失败:', error);\n            response = `抱歉，我获取${city}的天气信息时遇到了问题，请稍后再试。`;\n          }\n        } else {\n          response = '抱歉，我目前只知道南京、北京和上海的天气信息哦。你想查询哪个城市的天气呢？';\n        }\n      } else {\n        // 根据情感生成回复\n        response = generateResponse(text, state.currentEmotion);\n      }\n\n      // 添加助手回复\n      setTimeout(() => {\n        commit('addMessage', {\n          text: response,\n          type: 'assistant'\n        });\n        commit('setTyping', false);\n      }, 1000);\n    } catch (error) {\n      console.error('[Chat Store] 处理消息时出错:', error);\n      commit('setTyping', false);\n\n      // 添加错误提示消息\n      commit('addMessage', {\n        text: '抱歉，我处理消息时遇到了问题，请稍后再试。',\n        type: 'assistant'\n      });\n    }\n  },\n  clearChat({\n    commit\n  }) {\n    console.log('[Chat Store] 清空消息');\n    commit('clearMessages');\n  }\n};\n\n// 根据情感生成回复\nfunction generateResponse(text, emotion) {\n  console.log('[Chat Store] 生成回复:', {\n    text,\n    emotion\n  });\n  const responses = {\n    positive: ['真好啊！我也很开心！', '你的心情真不错呢！', '继续保持这种好心情吧！'],\n    neutral: ['嗯，我明白你的意思。', '确实是这样呢。', '让我们继续聊下去吧！'],\n    negative: ['别担心，事情总会变好的。', '我在这里陪着你。', '要不要聊点开心的事情？']\n  };\n  const responseList = responses[emotion] || responses.neutral;\n  const randomIndex = Math.floor(Math.random() * responseList.length);\n  return responseList[randomIndex];\n}\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["xfyunService","weatherService","state","messages","isTyping","currentEmotion","weatherInfo","soundEnabled","getters","mutations","addMessage","message","console","log","text","type","push","error","setTyping","status","updateEmotion","emotion","setWeatherInfo","info","toggleSound","clearMessages","cityAliases","fuzzyMatchCity","cities","city","includes","aliases","Object","entries","some","alias","cityMatch","match","slice","actions","sendMessage","commit","analyzeEmotion","weatherKeywords","isWeatherQuery","keyword","response","weatherData","getCurrentWeather","temp","generateWeatherDescription","generateResponse","setTimeout","clearChat","responses","positive","neutral","negative","responseList","randomIndex","Math","floor","random","length","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import { xfyunService } from '@/services/xfyun';\nimport { weatherService } from '@/services/weather';\n\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\n\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion,\n  weatherInfo: state => state.weatherInfo,\n  soundEnabled: state => state.soundEnabled\n};\n\nconst mutations = {\n  addMessage(state, message) {\n    console.log('[Chat Store] 添加消息:', message);\n    if (message && typeof message.text === 'string' && message.type) {\n      state.messages.push(message);\n    } else {\n      console.error('[Chat Store] 无效的消息格式:', message);\n    }\n  },\n  setTyping(state, status) {\n    state.isTyping = status;\n  },\n  updateEmotion(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  setWeatherInfo(state, info) {\n    state.weatherInfo = info;\n  },\n  toggleSound(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  clearMessages(state) {\n    state.messages = [];\n  }\n};\n\n// 城市别名映射\nconst cityAliases = {\n  '南京': ['宁', '建康', '金陵'],\n  '北京': ['京', '北平', '帝都'],\n  '上海': ['沪', '魔都']\n};\n\n// 模糊匹配城市名\nfunction fuzzyMatchCity(text) {\n  console.log('[Chat Store] 开始城市匹配:', text);\n  \n  // 1. 完整城市名匹配\n  const cities = ['南京', '北京', '上海'];\n  for (const city of cities) {\n    if (text.includes(city)) {\n      console.log('[Chat Store] 完整匹配到城市:', city);\n      return city;\n    }\n  }\n\n  // 2. 别名匹配\n  for (const [city, aliases] of Object.entries(cityAliases)) {\n    if (aliases.some(alias => text.includes(alias))) {\n      console.log('[Chat Store] 别名匹配到城市:', city);\n      return city;\n    }\n  }\n\n  // 3. 提取可能的城市名（包含\"市\"字的）\n  const cityMatch = text.match(/([^市]+)市/);\n  if (cityMatch && cities.includes(cityMatch[1])) {\n    console.log('[Chat Store] 提取到城市名:', cityMatch[1]);\n    return cityMatch[1];\n  }\n\n  // 4. 部分匹配（作为最后的尝试）\n  for (const city of cities) {\n    if (text.includes(city.slice(0, 1))) {\n      console.log('[Chat Store] 部分匹配到城市:', city);\n      return city;\n    }\n  }\n\n  console.log('[Chat Store] 未匹配到任何城市');\n  return null;\n}\n\nconst actions = {\n  async sendMessage({ commit, state }, { text, type }) {\n    console.log('[Chat Store] 开始处理消息:', { text, type });\n    \n    if (!text || typeof text !== 'string') {\n      console.error('[Chat Store] 消息内容为空或格式错误');\n      return;\n    }\n\n    try {\n      // 添加用户消息\n      commit('addMessage', { text, type });\n\n      // 设置正在输入状态\n      commit('setTyping', true);\n\n      // 分析情感\n      try {\n        const emotion = await xfyunService.analyzeEmotion(text);\n        console.log('[Chat Store] 情感分析结果:', emotion);\n        commit('updateEmotion', emotion);\n      } catch (error) {\n        console.error('[Chat Store] 情感分析失败:', error);\n        commit('updateEmotion', 'neutral');\n      }\n\n      // 检查是否是天气查询\n      const weatherKeywords = ['天气', '温度', '下雨', '阴天', '晴天'];\n      const isWeatherQuery = weatherKeywords.some(keyword => text.includes(keyword));\n\n      let response = '';\n      if (isWeatherQuery) {\n        console.log('[Chat Store] 检测到天气查询');\n        const city = fuzzyMatchCity(text);\n        \n        if (city) {\n          try {\n            const weatherData = await weatherService.getCurrentWeather(city);\n            console.log('[Chat Store] 获取到天气数据:', weatherData);\n            commit('setWeatherInfo', weatherData);\n            \n            response = `${city}今天${weatherData.text}，温度${weatherData.temp}℃，${weatherService.generateWeatherDescription(weatherData)}`;\n          } catch (error) {\n            console.error('[Chat Store] 获取天气失败:', error);\n            response = `抱歉，我获取${city}的天气信息时遇到了问题，请稍后再试。`;\n          }\n        } else {\n          response = '抱歉，我目前只知道南京、北京和上海的天气信息哦。你想查询哪个城市的天气呢？';\n        }\n      } else {\n        // 根据情感生成回复\n        response = generateResponse(text, state.currentEmotion);\n      }\n\n      // 添加助手回复\n      setTimeout(() => {\n        commit('addMessage', {\n          text: response,\n          type: 'assistant'\n        });\n        commit('setTyping', false);\n      }, 1000);\n\n    } catch (error) {\n      console.error('[Chat Store] 处理消息时出错:', error);\n      commit('setTyping', false);\n      \n      // 添加错误提示消息\n      commit('addMessage', {\n        text: '抱歉，我处理消息时遇到了问题，请稍后再试。',\n        type: 'assistant'\n      });\n    }\n  },\n\n  clearChat({ commit }) {\n    console.log('[Chat Store] 清空消息');\n    commit('clearMessages');\n  }\n};\n\n// 根据情感生成回复\nfunction generateResponse(text, emotion) {\n  console.log('[Chat Store] 生成回复:', { text, emotion });\n  \n  const responses = {\n    positive: [\n      '真好啊！我也很开心！',\n      '你的心情真不错呢！',\n      '继续保持这种好心情吧！'\n    ],\n    neutral: [\n      '嗯，我明白你的意思。',\n      '确实是这样呢。',\n      '让我们继续聊下去吧！'\n    ],\n    negative: [\n      '别担心，事情总会变好的。',\n      '我在这里陪着你。',\n      '要不要聊点开心的事情？'\n    ]\n  };\n\n  const responseList = responses[emotion] || responses.neutral;\n  const randomIndex = Math.floor(Math.random() * responseList.length);\n  return responseList[randomIndex];\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}