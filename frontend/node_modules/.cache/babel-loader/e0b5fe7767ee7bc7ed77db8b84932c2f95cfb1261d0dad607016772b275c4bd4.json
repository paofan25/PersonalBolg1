{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  timeout: 5000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 从 store 获取 token\n  const token = store.state.auth.token;\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n\n  // 如果响应状态码不是 200，说明有错误\n  if (response.status !== 200) {\n    ElMessage({\n      message: res.message || '错误',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 处理特定错误码\n    if (response.status === 401) {\n      // token 过期或无效\n      store.dispatch('auth/logout');\n    }\n    return Promise.reject(new Error(res.message || '错误'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('响应错误:', error);\n  ElMessage({\n    message: error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","state","auth","headers","error","console","Promise","reject","response","res","data","status","message","type","duration","dispatch","Error"],"sources":["E:/code/PersonalBolg1/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\n\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\r\n  timeout: 5000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 从 store 获取 token\r\n    const token = store.state.auth.token\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求错误:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n    \r\n    // 如果响应状态码不是 200，说明有错误\r\n    if (response.status !== 200) {\r\n      ElMessage({\r\n        message: res.message || '错误',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 处理特定错误码\r\n      if (response.status === 401) {\r\n        // token 过期或无效\r\n        store.dispatch('auth/logout')\r\n      }\r\n      return Promise.reject(new Error(res.message || '错误'))\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.error('响应错误:', error)\r\n    ElMessage({\r\n      message: error.message || '请求失败',\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,MAAM;EAC/CC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGZ,KAAK,CAACa,KAAK,CAACC,IAAI,CAACF,KAAK;EACpC,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACO,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/BU,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;;EAEzB;EACA,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAC3BxB,SAAS,CAAC;MACRyB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,IAAI;MAC5BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIN,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAC3B;MACAvB,KAAK,CAAC2B,QAAQ,CAAC,aAAa,CAAC;IAC/B;IACA,OAAOT,OAAO,CAACC,MAAM,CAAC,IAAIS,KAAK,CAACP,GAAG,CAACG,OAAO,IAAI,IAAI,CAAC,CAAC;EACvD,CAAC,MAAM;IACL,OAAOH,GAAG;EACZ;AACF,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7BjB,SAAS,CAAC;IACRyB,OAAO,EAAER,KAAK,CAACQ,OAAO,IAAI,MAAM;IAChCC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}