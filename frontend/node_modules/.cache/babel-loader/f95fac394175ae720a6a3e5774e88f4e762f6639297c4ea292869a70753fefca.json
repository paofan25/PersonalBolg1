{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport router from '@/router';\nimport { getToken } from '@/utils/auth';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || 'http://localhost:5000/api',\n  timeout: parseInt(process.env.VUE_APP_API_TIMEOUT) || 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 优先从 localStorage 获取 token\n  const localToken = getToken();\n  console.log('Token from localStorage:', localToken);\n\n  // 如果 localStorage 中没有token，则从store获取\n  const storeToken = store.getters.token;\n  console.log('Token from store:', storeToken);\n  const token = localToken || storeToken;\n  console.log('Final token used:', token);\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  console.log('Request config:', config);\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n\n  // 如果响应成功但业务状态码不是 200，说明有错误\n  if (res.code && res.code !== 200) {\n    ElMessage({\n      message: res.message || '错误',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 处理特定错误码\n    if (res.code === 401) {\n      // token 过期或无效，清除用户状态并跳转到登录页\n      store.dispatch('auth/resetToken');\n      router.push('/login');\n    }\n    return Promise.reject(new Error(res.message || '错误'));\n  }\n  return response;\n}, error => {\n  console.error('响应错误:', error);\n  const message = error.response?.data?.message || error.message || '请求失败';\n  ElMessage({\n    message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n\n  // 处理 401 错误\n  if (error.response?.status === 401) {\n    store.dispatch('auth/resetToken');\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","store","router","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","parseInt","VUE_APP_API_TIMEOUT","headers","interceptors","request","use","config","localToken","console","log","storeToken","getters","token","error","Promise","reject","response","res","data","code","message","type","duration","dispatch","push","Error","status"],"sources":["E:/code/PersonalBolg1/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport store from '@/store'\r\nimport router from '@/router'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API || 'http://localhost:5000/api',\r\n  timeout: parseInt(process.env.VUE_APP_API_TIMEOUT) || 5000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 优先从 localStorage 获取 token\r\n    const localToken = getToken()\r\n    console.log('Token from localStorage:', localToken)\r\n\r\n    // 如果 localStorage 中没有token，则从store获取\r\n    const storeToken = store.getters.token\r\n    console.log('Token from store:', storeToken)\r\n\r\n    const token = localToken || storeToken\r\n    console.log('Final token used:', token)\r\n\r\n    if (token) {\r\n      config.headers['Authorization'] = 'Bearer ' + token\r\n    }\r\n    console.log('Request config:', config)\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('请求错误:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n\r\n    // 如果响应成功但业务状态码不是 200，说明有错误\r\n    if (res.code && res.code !== 200) {\r\n      ElMessage({\r\n        message: res.message || '错误',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 处理特定错误码\r\n      if (res.code === 401) {\r\n        // token 过期或无效，清除用户状态并跳转到登录页\r\n        store.dispatch('auth/resetToken')\r\n        router.push('/login')\r\n      }\r\n      return Promise.reject(new Error(res.message || '错误'))\r\n    }\r\n\r\n    return response\r\n  },\r\n  error => {\r\n    console.error('响应错误:', error)\r\n    const message = error.response?.data?.message || error.message || '请求失败'\r\n\r\n    ElMessage({\r\n      message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n\r\n    // 处理 401 错误\r\n    if (error.response?.status === 401) {\r\n      store.dispatch('auth/resetToken')\r\n      router.push('/login')\r\n    }\r\n\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}