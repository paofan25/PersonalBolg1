{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xfyun from '@/services/xfyun';\nimport weather from '@/services/weather';\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\nconst getters = {\n  getAllMessages: state => state.messages,\n  getIsTyping: state => state.isTyping,\n  getCurrentEmotion: state => state.currentEmotion,\n  getWeatherInfo: state => state.weatherInfo,\n  getSoundEnabled: state => state.soundEnabled\n};\nconst mutations = {\n  ADD_MESSAGE(state, message) {\n    state.messages.push({\n      id: Date.now(),\n      timestamp: new Date(),\n      ...message\n    });\n  },\n  SET_TYPING(state, status) {\n    state.isTyping = status;\n  },\n  SET_EMOTION(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  SET_WEATHER_INFO(state, info) {\n    state.weatherInfo = info;\n  },\n  TOGGLE_SOUND(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  CLEAR_MESSAGES(state) {\n    state.messages = [];\n  }\n};\nconst actions = {\n  async sendMessage({\n    commit\n  }, text) {\n    // 添加用户消息\n    commit('ADD_MESSAGE', {\n      type: 'user',\n      text\n    });\n\n    // 设置正在输入状态\n    commit('SET_TYPING', true);\n    try {\n      // 分析情绪\n      const emotion = await xfyun.analyzeEmotion(text);\n      commit('SET_EMOTION', emotion);\n\n      // 检查是否是天气相关问题\n      const weatherKeywords = ['天气', '下雨', '温度', '气温', '热', '冷'];\n      const isWeatherQuestion = weatherKeywords.some(keyword => text.includes(keyword));\n      let response;\n      let weatherInfo = null;\n      if (isWeatherQuestion) {\n        // 获取天气信息\n        weatherInfo = await weather.getNowWeather();\n        const weatherDescription = weather.generateWeatherDescription(weatherInfo);\n        response = weatherDescription;\n      } else {\n        // 使用讯飞服务获取回复\n        response = await xfyun.chat([{\n          role: 'system',\n          content: '你是一个可爱的AI助手糖球，性格活泼开朗，说话方式可爱温暖。你会用emoji表情，会关心用户的情绪状态。'\n        }, {\n          role: 'user',\n          content: text\n        }]);\n      }\n\n      // 添加助手回复\n      commit('ADD_MESSAGE', {\n        type: 'assistant',\n        text: response,\n        weather: weatherInfo,\n        actions: generateActions(text, emotion)\n      });\n    } catch (error) {\n      console.error('发送消息失败:', error);\n      commit('ADD_MESSAGE', {\n        type: 'assistant',\n        text: '抱歉，我现在有点累了，待会再聊吧~ 😴'\n      });\n    } finally {\n      commit('SET_TYPING', false);\n    }\n  },\n  clearChat({\n    commit\n  }) {\n    commit('CLEAR_MESSAGES');\n  }\n};\n\n// 根据用户输入和情绪生成互动动作\nfunction generateActions(text, emotion) {\n  const actions = [];\n\n  // 根据情绪添加安抚动作\n  if (emotion === 'sad' || emotion === 'worried') {\n    actions.push({\n      type: 'sound',\n      sound: 'purr'\n    });\n    actions.push({\n      type: 'animation',\n      name: 'bounce'\n    });\n  }\n\n  // 根据关键词添加特定动作\n  if (text.includes('跳舞')) {\n    actions.push({\n      type: 'animation',\n      name: 'bounce'\n    });\n  }\n  if (text.includes('音乐') || text.includes('听歌')) {\n    actions.push({\n      type: 'sound',\n      sound: 'music'\n    });\n  }\n  if (text.includes('下雨')) {\n    actions.push({\n      type: 'sound',\n      sound: 'rain'\n    });\n  }\n  return actions.length > 0 ? actions : null;\n}\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["xfyun","weather","state","messages","isTyping","currentEmotion","weatherInfo","soundEnabled","getters","getAllMessages","getIsTyping","getCurrentEmotion","getWeatherInfo","getSoundEnabled","mutations","ADD_MESSAGE","message","push","id","Date","now","timestamp","SET_TYPING","status","SET_EMOTION","emotion","SET_WEATHER_INFO","info","TOGGLE_SOUND","CLEAR_MESSAGES","actions","sendMessage","commit","text","type","analyzeEmotion","weatherKeywords","isWeatherQuestion","some","keyword","includes","response","getNowWeather","weatherDescription","generateWeatherDescription","chat","role","content","generateActions","error","console","clearChat","sound","name","length","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import xfyun from '@/services/xfyun';\nimport weather from '@/services/weather';\n\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\n\nconst getters = {\n  getAllMessages: state => state.messages,\n  getIsTyping: state => state.isTyping,\n  getCurrentEmotion: state => state.currentEmotion,\n  getWeatherInfo: state => state.weatherInfo,\n  getSoundEnabled: state => state.soundEnabled\n};\n\nconst mutations = {\n  ADD_MESSAGE(state, message) {\n    state.messages.push({\n      id: Date.now(),\n      timestamp: new Date(),\n      ...message\n    });\n  },\n  SET_TYPING(state, status) {\n    state.isTyping = status;\n  },\n  SET_EMOTION(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  SET_WEATHER_INFO(state, info) {\n    state.weatherInfo = info;\n  },\n  TOGGLE_SOUND(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  CLEAR_MESSAGES(state) {\n    state.messages = [];\n  }\n};\n\nconst actions = {\n  async sendMessage({ commit }, text) {\n    // 添加用户消息\n    commit('ADD_MESSAGE', {\n      type: 'user',\n      text\n    });\n\n    // 设置正在输入状态\n    commit('SET_TYPING', true);\n\n    try {\n      // 分析情绪\n      const emotion = await xfyun.analyzeEmotion(text);\n      commit('SET_EMOTION', emotion);\n\n      // 检查是否是天气相关问题\n      const weatherKeywords = ['天气', '下雨', '温度', '气温', '热', '冷'];\n      const isWeatherQuestion = weatherKeywords.some(keyword => text.includes(keyword));\n\n      let response;\n      let weatherInfo = null;\n\n      if (isWeatherQuestion) {\n        // 获取天气信息\n        weatherInfo = await weather.getNowWeather();\n        const weatherDescription = weather.generateWeatherDescription(weatherInfo);\n        response = weatherDescription;\n      } else {\n        // 使用讯飞服务获取回复\n        response = await xfyun.chat([\n          { role: 'system', content: '你是一个可爱的AI助手糖球，性格活泼开朗，说话方式可爱温暖。你会用emoji表情，会关心用户的情绪状态。' },\n          { role: 'user', content: text }\n        ]);\n      }\n\n      // 添加助手回复\n      commit('ADD_MESSAGE', {\n        type: 'assistant',\n        text: response,\n        weather: weatherInfo,\n        actions: generateActions(text, emotion)\n      });\n\n    } catch (error) {\n      console.error('发送消息失败:', error);\n      commit('ADD_MESSAGE', {\n        type: 'assistant',\n        text: '抱歉，我现在有点累了，待会再聊吧~ 😴'\n      });\n    } finally {\n      commit('SET_TYPING', false);\n    }\n  },\n\n  clearChat({ commit }) {\n    commit('CLEAR_MESSAGES');\n  }\n};\n\n// 根据用户输入和情绪生成互动动作\nfunction generateActions(text, emotion) {\n  const actions = [];\n\n  // 根据情绪添加安抚动作\n  if (emotion === 'sad' || emotion === 'worried') {\n    actions.push({ type: 'sound', sound: 'purr' });\n    actions.push({ type: 'animation', name: 'bounce' });\n  }\n\n  // 根据关键词添加特定动作\n  if (text.includes('跳舞')) {\n    actions.push({ type: 'animation', name: 'bounce' });\n  }\n  if (text.includes('音乐') || text.includes('听歌')) {\n    actions.push({ type: 'sound', sound: 'music' });\n  }\n  if (text.includes('下雨')) {\n    actions.push({ type: 'sound', sound: 'rain' });\n  }\n\n  return actions.length > 0 ? actions : null;\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}