{"ast":null,"code":"import { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      userInput: '',\n      messageAudio: null,\n      typingAudio: null\n    };\n  },\n  computed: {\n    ...mapState('chat', ['isTyping', 'weatherInfo', 'soundEnabled']),\n    ...mapGetters('chat', ['messages', 'currentEmotion'])\n  },\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'clearMessages']),\n    ...mapMutations('chat', ['toggleSoundEffects']),\n    formatMessage(text) {\n      if (typeof text !== 'string') return '';\n\n      // 替换表情符号\n      return text.replace(/\\(=\\^･ω･\\^\\)=/g, '<span class=\"emoji\">(=^･ω･^)=</span>').replace(/\\(✧ω✧\\)/g, '<span class=\"emoji\">(✧ω✧)</span>').replace(/~\\(=\\^･ω･\\^\\)~/g, '<span class=\"emoji\">~(=^･ω･^)~</span>').replace(/\\(●ˇ∀ˇ●\\)/g, '<span class=\"emoji\">(●ˇ∀ˇ●)</span>').replace(/\\(〃\\'▽\\'〃\\)/g, '<span class=\"emoji\">(〃\\'▽\\'〃)</span>').replace(/ヾ\\(\\^▽\\^\\*\\)\\)\\)/g, '<span class=\"emoji\">ヾ(^▽^*))</span>').replace(/\\(´;︵;`\\)/g, '<span class=\"emoji\">(´;︵;`)</span>');\n    },\n    getEmotionText() {\n      const emotions = {\n        happy: '开心 😊',\n        sad: '难过 😢',\n        angry: '生气 😠',\n        surprised: '惊讶 😲',\n        confused: '困惑 🤔',\n        tired: '疲倦 😴',\n        excited: '兴奋 😃',\n        neutral: '平静 😌'\n      };\n      return emotions[this.currentEmotion] || '平静 😌';\n    },\n    getWeatherEmoji() {\n      if (!this.weatherInfo) return '🌈';\n      const condition = this.weatherInfo.condition && typeof this.weatherInfo.condition === 'string' ? this.weatherInfo.condition.toLowerCase() : '';\n      if (condition.includes('晴')) return '☀️';\n      if (condition.includes('云') || condition.includes('阴')) return '☁️';\n      if (condition.includes('雨')) return '🌧️';\n      if (condition.includes('雪')) return '❄️';\n      if (condition.includes('雷') || condition.includes('电')) return '⛈️';\n      if (condition.includes('雾')) return '🌫️';\n      return '🌈';\n    },\n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    handleSendMessage() {\n      if (!this.userInput.trim() || this.isTyping) return;\n      this.sendMessage(this.userInput);\n      this.playSound('message');\n      this.userInput = '';\n      if (this.isTyping) {\n        this.playSound('typing');\n      }\n    },\n    sendSuggestion(text) {\n      this.userInput = text;\n      this.handleSendMessage();\n    },\n    playSound(type) {\n      if (!this.soundEnabled) return;\n\n      // 在真实环境中，这里应该播放音频\n      console.log(`Playing ${type} sound`);\n    },\n    toggleSound() {\n      this.toggleSoundEffects();\n    },\n    clearChat() {\n      if (confirm('确定要清除所有聊天记录吗？')) {\n        this.clearMessages();\n      }\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        if (this.$refs.messagesContainer) {\n          this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n        }\n      });\n    }\n  },\n  watch: {\n    messages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    },\n    isTyping(newVal) {\n      if (newVal && this.soundEnabled) {\n        this.playSound('typing');\n      }\n    }\n  },\n  mounted() {\n    this.scrollToBottom();\n  },\n  beforeUnmount() {\n    // 清理资源\n    if (this.messageAudio) {\n      this.messageAudio = null;\n    }\n    if (this.typingAudio) {\n      this.typingAudio = null;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","mapMutations","name","data","userInput","messageAudio","typingAudio","computed","methods","formatMessage","text","replace","getEmotionText","emotions","happy","sad","angry","surprised","confused","tired","excited","neutral","currentEmotion","getWeatherEmoji","weatherInfo","condition","toLowerCase","includes","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","handleSendMessage","trim","isTyping","sendMessage","playSound","sendSuggestion","type","soundEnabled","console","log","toggleSound","toggleSoundEffects","clearChat","confirm","clearMessages","scrollToBottom","$nextTick","$refs","messagesContainer","scrollTop","scrollHeight","watch","messages","handler","deep","newVal","mounted","beforeUnmount"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\components\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-assistant-container\">\n    <div class=\"chat-header\">\n      <div class=\"assistant-info\">\n        <div class=\"avatar\">\n          <div class=\"avatar-face\" :class=\"currentEmotion\">\n            <div class=\"eyes\">\n              <div class=\"eye left\"></div>\n              <div class=\"eye right\"></div>\n            </div>\n            <div class=\"mouth\" :class=\"currentEmotion\"></div>\n          </div>\n        </div>\n        <div class=\"status\">\n          <h3>糖球助手</h3>\n          <p>{{ getEmotionText() }}</p>\n        </div>\n      </div>\n      <div class=\"weather-box\" v-if=\"weatherInfo\">\n        <div class=\"weather-icon\">{{ getWeatherEmoji() }}</div>\n        <div class=\"weather-text\">\n          <p>{{ weatherInfo.city }}</p>\n          <p>{{ weatherInfo.temp }}°C {{ weatherInfo.condition }}</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"messages-container\" ref=\"messagesContainer\">\n      <div v-if=\"messages.length === 0\" class=\"welcome-message\">\n        <h3>欢迎来到甜梦星球！</h3>\n        <p>我是你的糖球助手，有什么我能帮你的吗？</p>\n        <div class=\"suggestion-chips\">\n          <button @click=\"sendSuggestion('介绍一下甜梦星球')\">介绍一下甜梦星球</button>\n          <button @click=\"sendSuggestion('今天天气怎么样')\">天气怎么样</button>\n          <button @click=\"sendSuggestion('有什么游戏可以玩')\">有什么游戏可以玩</button>\n        </div>\n      </div>\n      \n      <div \n        v-for=\"(message, index) in messages\" \n        :key=\"index\" \n        :class=\"['message', message.isUser ? 'user-message' : 'assistant-message']\"\n      >\n        <div class=\"message-avatar\" v-if=\"!message.isUser\">\n          <div class=\"mini-sugar-ball\" :class=\"message.emotion || currentEmotion\"></div>\n        </div>\n        <div class=\"message-content\">\n          <p v-html=\"formatMessage(message.text)\"></p>\n          <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\n        </div>\n        <div class=\"message-avatar user\" v-if=\"message.isUser\">\n          <div class=\"user-icon\">👤</div>\n        </div>\n      </div>\n      \n      <div class=\"typing-indicator\" v-if=\"isTyping\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    \n    <div class=\"input-container\">\n      <input \n        type=\"text\" \n        v-model=\"userInput\" \n        @keyup.enter=\"handleSendMessage\" \n        placeholder=\"和糖球聊聊吧...\" \n        :disabled=\"isTyping\"\n      />\n      <button @click=\"handleSendMessage\" :disabled=\"!userInput.trim() || isTyping\">\n        发送\n      </button>\n      <button class=\"sound-toggle\" @click=\"toggleSound\" :class=\"{active: soundEnabled}\">\n        {{ soundEnabled ? '🔊' : '🔇' }}\n      </button>\n      <button class=\"clear-chat\" @click=\"clearChat\">\n        🗑️\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\n\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      userInput: '',\n      messageAudio: null,\n      typingAudio: null\n    };\n  },\n  computed: {\n    ...mapState('chat', ['isTyping', 'weatherInfo', 'soundEnabled']),\n    ...mapGetters('chat', ['messages', 'currentEmotion'])\n  },\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'clearMessages']),\n    ...mapMutations('chat', ['toggleSoundEffects']),\n    \n    formatMessage(text) {\n      if (typeof text !== 'string') return '';\n      \n      // 替换表情符号\n      return text\n        .replace(/\\(=\\^･ω･\\^\\)=/g, '<span class=\"emoji\">(=^･ω･^)=</span>')\n        .replace(/\\(✧ω✧\\)/g, '<span class=\"emoji\">(✧ω✧)</span>')\n        .replace(/~\\(=\\^･ω･\\^\\)~/g, '<span class=\"emoji\">~(=^･ω･^)~</span>')\n        .replace(/\\(●ˇ∀ˇ●\\)/g, '<span class=\"emoji\">(●ˇ∀ˇ●)</span>')\n        .replace(/\\(〃\\'▽\\'〃\\)/g, '<span class=\"emoji\">(〃\\'▽\\'〃)</span>')\n        .replace(/ヾ\\(\\^▽\\^\\*\\)\\)\\)/g, '<span class=\"emoji\">ヾ(^▽^*))</span>')\n        .replace(/\\(´;︵;`\\)/g, '<span class=\"emoji\">(´;︵;`)</span>');\n    },\n    \n    getEmotionText() {\n      const emotions = {\n        happy: '开心 😊',\n        sad: '难过 😢',\n        angry: '生气 😠',\n        surprised: '惊讶 😲',\n        confused: '困惑 🤔',\n        tired: '疲倦 😴',\n        excited: '兴奋 😃',\n        neutral: '平静 😌'\n      };\n      return emotions[this.currentEmotion] || '平静 😌';\n    },\n    \n    getWeatherEmoji() {\n      if (!this.weatherInfo) return '🌈';\n      \n      const condition = this.weatherInfo.condition && typeof this.weatherInfo.condition === 'string' \n        ? this.weatherInfo.condition.toLowerCase() \n        : '';\n      \n      if (condition.includes('晴')) return '☀️';\n      if (condition.includes('云') || condition.includes('阴')) return '☁️';\n      if (condition.includes('雨')) return '🌧️';\n      if (condition.includes('雪')) return '❄️';\n      if (condition.includes('雷') || condition.includes('电')) return '⛈️';\n      if (condition.includes('雾')) return '🌫️';\n      \n      return '🌈';\n    },\n    \n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    },\n    \n    handleSendMessage() {\n      if (!this.userInput.trim() || this.isTyping) return;\n      \n      this.sendMessage(this.userInput);\n      this.playSound('message');\n      this.userInput = '';\n      \n      if (this.isTyping) {\n        this.playSound('typing');\n      }\n    },\n    \n    sendSuggestion(text) {\n      this.userInput = text;\n      this.handleSendMessage();\n    },\n    \n    playSound(type) {\n      if (!this.soundEnabled) return;\n      \n      // 在真实环境中，这里应该播放音频\n      console.log(`Playing ${type} sound`);\n    },\n    \n    toggleSound() {\n      this.toggleSoundEffects();\n    },\n    \n    clearChat() {\n      if (confirm('确定要清除所有聊天记录吗？')) {\n        this.clearMessages();\n      }\n    },\n    \n    scrollToBottom() {\n      this.$nextTick(() => {\n        if (this.$refs.messagesContainer) {\n          this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n        }\n      });\n    }\n  },\n  watch: {\n    messages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    },\n    isTyping(newVal) {\n      if (newVal && this.soundEnabled) {\n        this.playSound('typing');\n      }\n    }\n  },\n  mounted() {\n    this.scrollToBottom();\n  },\n  beforeUnmount() {\n    // 清理资源\n    if (this.messageAudio) {\n      this.messageAudio = null;\n    }\n    if (this.typingAudio) {\n      this.typingAudio = null;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-assistant-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 120px);\n  max-width: 1000px;\n  margin: 0 auto;\n  background-color: #fff9fc;\n  border-radius: 20px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%);\n  color: #fff;\n}\n\n.assistant-info {\n  display: flex;\n  align-items: center;\n}\n\n.avatar {\n  width: 60px;\n  height: 60px;\n  margin-right: 15px;\n  position: relative;\n}\n\n.avatar-face {\n  width: 100%;\n  height: 100%;\n  background-color: #ffcaf2;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.avatar-face.happy {\n  background-color: #ffcaf2;\n}\n\n.avatar-face.sad {\n  background-color: #c4b0ff;\n}\n\n.avatar-face.angry {\n  background-color: #ffb7b7;\n}\n\n.avatar-face.confused {\n  background-color: #b8e4ff;\n}\n\n.eyes {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.eye {\n  width: 10px;\n  height: 10px;\n  background-color: #333;\n  border-radius: 50%;\n  margin: 0 5px;\n}\n\n.mouth {\n  width: 20px;\n  height: 10px;\n  border-radius: 0 0 10px 10px;\n  background-color: #333;\n  transition: all 0.3s ease;\n}\n\n.mouth.happy {\n  border-radius: 0 0 10px 10px;\n}\n\n.mouth.sad {\n  border-radius: 10px 10px 0 0;\n  transform: translateY(5px);\n}\n\n.mouth.angry {\n  border-radius: 0;\n  transform: scaleY(0.5);\n}\n\n.mouth.confused {\n  width: 10px;\n  border-radius: 50%;\n}\n\n.status h3 {\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n\n.status p {\n  margin: 5px 0 0;\n  font-size: 0.9rem;\n  opacity: 0.8;\n}\n\n.weather-box {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 8px 15px;\n  border-radius: 30px;\n}\n\n.weather-icon {\n  font-size: 2rem;\n  margin-right: 10px;\n}\n\n.weather-text p {\n  margin: 0;\n  font-size: 0.9rem;\n  line-height: 1.2;\n}\n\n.messages-container {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background-color: #fff9fc;\n}\n\n.welcome-message {\n  text-align: center;\n  padding: 40px 20px;\n  background-color: rgba(255, 255, 255, 0.7);\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n}\n\n.welcome-message h3 {\n  color: #c4b0ff;\n  margin-top: 0;\n}\n\n.suggestion-chips {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.suggestion-chips button {\n  background-color: #c4b0ff;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  color: white;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.suggestion-chips button:hover {\n  background-color: #ffcaf2;\n  transform: translateY(-2px);\n}\n\n.message {\n  display: flex;\n  margin-bottom: 20px;\n  align-items: flex-start;\n}\n\n.user-message {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.mini-sugar-ball {\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: #ffcaf2;\n  position: relative;\n}\n\n.mini-sugar-ball:after {\n  content: '';\n  position: absolute;\n  top: 10px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  width: 15px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #333;\n}\n\n.mini-sugar-ball.happy {\n  background-color: #ffcaf2;\n}\n\n.mini-sugar-ball.sad {\n  background-color: #c4b0ff;\n}\n\n.mini-sugar-ball.angry {\n  background-color: #ffb7b7;\n}\n\n.user-icon {\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n}\n\n.message-content {\n  max-width: 70%;\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n  margin: 0 10px;\n}\n\n.user-message .message-content {\n  background-color: #c4b0ff;\n  color: white;\n  border-bottom-right-radius: 5px;\n}\n\n.assistant-message .message-content {\n  background-color: white;\n  color: #333;\n  border-bottom-left-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.message-content p {\n  margin: 0;\n  line-height: 1.4;\n}\n\n.timestamp {\n  font-size: 0.7rem;\n  opacity: 0.7;\n  position: absolute;\n  bottom: -18px;\n  right: 5px;\n}\n\n.user-message .timestamp {\n  left: 5px;\n}\n\n.typing-indicator {\n  padding: 12px 15px;\n  background-color: white;\n  border-radius: 18px;\n  width: 60px;\n  display: flex;\n  justify-content: center;\n  margin-left: 50px;\n  border-bottom-left-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.typing-indicator span {\n  width: 8px;\n  height: 8px;\n  margin: 0 2px;\n  background-color: #c4b0ff;\n  border-radius: 50%;\n  display: inline-block;\n  animation: bounce 1.3s infinite ease-in-out;\n}\n\n.typing-indicator span:nth-child(1) {\n  animation-delay: 0s;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.15s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.3s;\n}\n\n@keyframes bounce {\n  0%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-8px);\n  }\n}\n\n.input-container {\n  display: flex;\n  padding: 15px;\n  background-color: white;\n  border-top: 1px solid #f0f0f0;\n}\n\n.input-container input {\n  flex: 1;\n  padding: 12px 20px;\n  border: 2px solid #f0f0f0;\n  border-radius: 25px;\n  font-size: 1rem;\n  transition: all 0.3s;\n}\n\n.input-container input:focus {\n  outline: none;\n  border-color: #c4b0ff;\n}\n\n.input-container button {\n  margin-left: 10px;\n  padding: 10px 20px;\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%);\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.3s;\n}\n\n.input-container button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.input-container button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.sound-toggle, .clear-chat {\n  width: 40px;\n  height: 40px;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem !important;\n  background: #f5f5f5 !important;\n  color: #666 !important;\n}\n\n.sound-toggle.active {\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%) !important;\n  color: white !important;\n}\n\n.emoji {\n  color: #c4b0ff;\n  font-weight: 500;\n}\n\n@media (max-width: 768px) {\n  .chat-assistant-container {\n    height: calc(100vh - 80px);\n    border-radius: 0;\n  }\n  \n  .message-content {\n    max-width: 80%;\n  }\n  \n  .weather-text {\n    display: none;\n  }\n}\n\n@media (max-width: 480px) {\n  .chat-header {\n    padding: 10px;\n  }\n  \n  .avatar {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .status h3 {\n    font-size: 1rem;\n  }\n  \n  .input-container {\n    padding: 10px;\n  }\n  \n  .input-container input {\n    padding: 10px 15px;\n  }\n  \n  .sound-toggle, .clear-chat {\n    width: 36px;\n    height: 36px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}