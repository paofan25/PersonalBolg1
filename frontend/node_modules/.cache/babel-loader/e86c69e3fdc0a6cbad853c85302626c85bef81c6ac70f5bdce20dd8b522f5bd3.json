{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport XfyunService from '@/services/xfyun';\nconst xfyunService = new XfyunService();\nexport default {\n  namespaced: true,\n  state: {\n    messages: [],\n    isTyping: false,\n    currentEmotion: 'happy',\n    weatherInfo: null,\n    soundEnabled: true,\n    typingSound: null,\n    messageSound: null\n  },\n  getters: {\n    messages: state => state.messages,\n    currentEmotion: state => state.currentEmotion\n  },\n  mutations: {\n    addMessage(state, message) {\n      state.messages.push(message);\n    },\n    setTyping(state, isTyping) {\n      state.isTyping = isTyping;\n    },\n    changeEmotion(state, emotion) {\n      state.currentEmotion = emotion;\n    },\n    setWeatherInfo(state, info) {\n      state.weatherInfo = info;\n    },\n    toggleSoundEffects(state) {\n      state.soundEnabled = !state.soundEnabled;\n    },\n    clearMessages(state) {\n      state.messages = [];\n    }\n  },\n  actions: {\n    async sendMessage({\n      commit,\n      state,\n      dispatch\n    }, text) {\n      if (!text.trim()) return;\n\n      // 添加用户消息\n      const userMessage = {\n        text,\n        isUser: true,\n        timestamp: new Date()\n      };\n      commit('addMessage', userMessage);\n\n      // 设置正在输入状态\n      commit('setTyping', true);\n\n      // 分析情绪\n      dispatch('analyzeEmotion', text);\n\n      // 检查是否是天气相关问题\n      const isWeatherQuery = /天气|温度|下雨|下雪|冷|热|气温|阴天|晴天|多云/i.test(text);\n      if (isWeatherQuery) {\n        await dispatch('checkWeather');\n      }\n\n      // 生成回复（模拟延迟）\n      setTimeout(() => {\n        // 使用讯飞服务生成回复（这里是简化模拟）\n        const response = generateResponse(text, state.currentEmotion);\n\n        // 添加助手消息\n        const assistantMessage = {\n          text: response,\n          isUser: false,\n          timestamp: new Date()\n        };\n        commit('addMessage', assistantMessage);\n        commit('setTyping', false);\n      }, 1000 + Math.random() * 1000); // 随机延迟1-2秒\n    },\n    analyzeEmotion({\n      commit\n    }, text) {\n      const emotion = analyzeEmotion(text);\n      commit('changeEmotion', emotion);\n    },\n    async checkWeather({\n      commit\n    }) {\n      try {\n        // 模拟天气数据\n        const weatherInfo = {\n          city: '北京',\n          temp: Math.round(10 + Math.random() * 20),\n          condition: ['晴朗', '多云', '阴天', '小雨'][Math.floor(Math.random() * 4)],\n          description: '今天天气不错，适合出门玩耍~'\n        };\n        commit('setWeatherInfo', weatherInfo);\n      } catch (error) {\n        console.error('获取天气信息失败', error);\n      }\n    },\n    clearMessages({\n      commit\n    }) {\n      commit('clearMessages');\n    }\n  }\n};\n\n// 辅助函数\nfunction analyzeEmotion(text) {\n  // 简单的关键词匹配来确定情绪\n  if (/开心|喜欢|棒|好|爱|感谢|谢谢|高兴/i.test(text)) {\n    return 'happy';\n  } else if (/难过|伤心|痛苦|悲|哭|嘤/i.test(text)) {\n    return 'sad';\n  } else if (/生气|烦|讨厌|恨|滚|笨蛋|蠢/i.test(text)) {\n    return 'angry';\n  } else if (/惊讶|哇|天啊|不会吧|不可能|真的|竟然/i.test(text)) {\n    return 'surprised';\n  } else if (/困惑|为什么|怎么|不懂|不理解|疑惑|问题/i.test(text)) {\n    return 'confused';\n  } else if (/困|累|疲倦|好困|好累|睡觉/i.test(text)) {\n    return 'tired';\n  } else if (/激动|兴奋|期待|等不及/i.test(text)) {\n    return 'excited';\n  }\n  return 'neutral';\n}\nfunction generateResponse(text, emotion) {\n  // 根据用户输入和当前情绪生成回复\n  const greetings = ['你好', '嗨', '早上好', '晚上好', '你好呀'];\n  if (greetings.some(g => text.includes(g))) {\n    return `嗨嗨！我是糖球呀~ 有什么我能帮到你的吗？ (=^･ω･^)=`;\n  }\n  if (text.includes('介绍') && text.includes('甜梦星球')) {\n    return '甜梦星球是一个充满可爱角色的梦幻世界~我是这里的居民糖球，很高兴认识你！这里有博客、小游戏和许多好玩的东西呢 (✧ω✧)';\n  }\n  if (text.includes('天气')) {\n    return '我正在查看窗外的天气呢~稍等一下，马上告诉你！(=^･ω･^)=';\n  }\n  if (text.includes('游戏')) {\n    return '想玩游戏吗？我们有记忆配对和云朵农场哦！点击导航栏的\"游戏\"就能找到啦~ (✧ω✧)';\n  }\n  const emotions = {\n    happy: ['看到你这么开心，我也跟着高兴起来了！(✧ω✧)', '嘿嘿，糖球也很开心呢~一起来分享快乐吧！(=^･ω･^)=', '开心的日子真美好，希望你每天都这么快乐！~(=^･ω･^)~'],\n    sad: ['别难过啦，糖球给你一个柔软的抱抱~ (=^･ω･^)=', '我变成一个毛绒抱枕陪着你，伤心的时候依靠我吧 (✧ω✧)', '糖球不喜欢看到你难过，来听听轻松的音乐吧~(=^･ω･^)~'],\n    angry: ['深呼吸~生气对身体不好，糖球陪你冷静一下 (=^･ω･^)=', '我变成一个解压球，来捏捏我消消气吧！(✧ω✧)', '糖球在这里，有什么委屈可以告诉我哦~(=^･ω･^)~'],\n    confused: ['看起来你有些疑惑，需要我解释清楚吗？(=^･ω･^)=', '问题有时候确实很复杂，让我们一起想想办法吧！(✧ω✧)', '糖球虽然不是全知全能，但会尽力帮你解答疑惑~(=^･ω･^)~']\n  };\n  const defaultResponses = ['糖球在听呢！请继续说吧~ (=^･ω･^)=', '嗯嗯，我明白你的意思！有什么需要帮忙的吗？(✧ω✧)', '你说的真有趣！糖球很喜欢和你聊天呢~(=^･ω･^)~', '今天过得怎么样呀？有什么开心的事情吗？(✧ω✧)', '糖球可以陪你聊天、查天气、玩游戏，需要我做什么呢？~(=^･ω･^)~'];\n  if (emotions[emotion]) {\n    const responses = emotions[emotion];\n    return responses[Math.floor(Math.random() * responses.length)];\n  }\n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}","map":{"version":3,"names":["XfyunService","xfyunService","namespaced","state","messages","isTyping","currentEmotion","weatherInfo","soundEnabled","typingSound","messageSound","getters","mutations","addMessage","message","push","setTyping","changeEmotion","emotion","setWeatherInfo","info","toggleSoundEffects","clearMessages","actions","sendMessage","commit","dispatch","text","trim","userMessage","isUser","timestamp","Date","isWeatherQuery","test","setTimeout","response","generateResponse","assistantMessage","Math","random","analyzeEmotion","checkWeather","city","temp","round","condition","floor","description","error","console","greetings","some","g","includes","emotions","happy","sad","angry","confused","defaultResponses","responses","length"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import XfyunService from '@/services/xfyun';\n\nconst xfyunService = new XfyunService();\n\nexport default {\n  namespaced: true,\n  state: {\n    messages: [],\n    isTyping: false,\n    currentEmotion: 'happy',\n    weatherInfo: null,\n    soundEnabled: true,\n    typingSound: null,\n    messageSound: null\n  },\n  getters: {\n    messages: state => state.messages,\n    currentEmotion: state => state.currentEmotion\n  },\n  mutations: {\n    addMessage(state, message) {\n      state.messages.push(message);\n    },\n    setTyping(state, isTyping) {\n      state.isTyping = isTyping;\n    },\n    changeEmotion(state, emotion) {\n      state.currentEmotion = emotion;\n    },\n    setWeatherInfo(state, info) {\n      state.weatherInfo = info;\n    },\n    toggleSoundEffects(state) {\n      state.soundEnabled = !state.soundEnabled;\n    },\n    clearMessages(state) {\n      state.messages = [];\n    }\n  },\n  actions: {\n    async sendMessage({ commit, state, dispatch }, text) {\n      if (!text.trim()) return;\n      \n      // 添加用户消息\n      const userMessage = {\n        text,\n        isUser: true,\n        timestamp: new Date()\n      };\n      commit('addMessage', userMessage);\n      \n      // 设置正在输入状态\n      commit('setTyping', true);\n      \n      // 分析情绪\n      dispatch('analyzeEmotion', text);\n      \n      // 检查是否是天气相关问题\n      const isWeatherQuery = /天气|温度|下雨|下雪|冷|热|气温|阴天|晴天|多云/i.test(text);\n      if (isWeatherQuery) {\n        await dispatch('checkWeather');\n      }\n      \n      // 生成回复（模拟延迟）\n      setTimeout(() => {\n        // 使用讯飞服务生成回复（这里是简化模拟）\n        const response = generateResponse(text, state.currentEmotion);\n        \n        // 添加助手消息\n        const assistantMessage = {\n          text: response,\n          isUser: false,\n          timestamp: new Date()\n        };\n        commit('addMessage', assistantMessage);\n        commit('setTyping', false);\n      }, 1000 + Math.random() * 1000); // 随机延迟1-2秒\n    },\n    \n    analyzeEmotion({ commit }, text) {\n      const emotion = analyzeEmotion(text);\n      commit('changeEmotion', emotion);\n    },\n    \n    async checkWeather({ commit }) {\n      try {\n        // 模拟天气数据\n        const weatherInfo = {\n          city: '北京',\n          temp: Math.round(10 + Math.random() * 20),\n          condition: ['晴朗', '多云', '阴天', '小雨'][Math.floor(Math.random() * 4)],\n          description: '今天天气不错，适合出门玩耍~'\n        };\n        commit('setWeatherInfo', weatherInfo);\n      } catch (error) {\n        console.error('获取天气信息失败', error);\n      }\n    },\n    \n    clearMessages({ commit }) {\n      commit('clearMessages');\n    }\n  }\n};\n\n// 辅助函数\nfunction analyzeEmotion(text) {\n  // 简单的关键词匹配来确定情绪\n  if (/开心|喜欢|棒|好|爱|感谢|谢谢|高兴/i.test(text)) {\n    return 'happy';\n  } else if (/难过|伤心|痛苦|悲|哭|嘤/i.test(text)) {\n    return 'sad';\n  } else if (/生气|烦|讨厌|恨|滚|笨蛋|蠢/i.test(text)) {\n    return 'angry';\n  } else if (/惊讶|哇|天啊|不会吧|不可能|真的|竟然/i.test(text)) {\n    return 'surprised';\n  } else if (/困惑|为什么|怎么|不懂|不理解|疑惑|问题/i.test(text)) {\n    return 'confused';\n  } else if (/困|累|疲倦|好困|好累|睡觉/i.test(text)) {\n    return 'tired';\n  } else if (/激动|兴奋|期待|等不及/i.test(text)) {\n    return 'excited';\n  }\n  return 'neutral';\n}\n\nfunction generateResponse(text, emotion) {\n  // 根据用户输入和当前情绪生成回复\n  const greetings = ['你好', '嗨', '早上好', '晚上好', '你好呀'];\n  if (greetings.some(g => text.includes(g))) {\n    return `嗨嗨！我是糖球呀~ 有什么我能帮到你的吗？ (=^･ω･^)=`;\n  }\n  \n  if (text.includes('介绍') && text.includes('甜梦星球')) {\n    return '甜梦星球是一个充满可爱角色的梦幻世界~我是这里的居民糖球，很高兴认识你！这里有博客、小游戏和许多好玩的东西呢 (✧ω✧)';\n  }\n  \n  if (text.includes('天气')) {\n    return '我正在查看窗外的天气呢~稍等一下，马上告诉你！(=^･ω･^)=';\n  }\n  \n  if (text.includes('游戏')) {\n    return '想玩游戏吗？我们有记忆配对和云朵农场哦！点击导航栏的\"游戏\"就能找到啦~ (✧ω✧)';\n  }\n  \n  const emotions = {\n    happy: [\n      '看到你这么开心，我也跟着高兴起来了！(✧ω✧)',\n      '嘿嘿，糖球也很开心呢~一起来分享快乐吧！(=^･ω･^)=',\n      '开心的日子真美好，希望你每天都这么快乐！~(=^･ω･^)~'\n    ],\n    sad: [\n      '别难过啦，糖球给你一个柔软的抱抱~ (=^･ω･^)=',\n      '我变成一个毛绒抱枕陪着你，伤心的时候依靠我吧 (✧ω✧)',\n      '糖球不喜欢看到你难过，来听听轻松的音乐吧~(=^･ω･^)~'\n    ],\n    angry: [\n      '深呼吸~生气对身体不好，糖球陪你冷静一下 (=^･ω･^)=',\n      '我变成一个解压球，来捏捏我消消气吧！(✧ω✧)',\n      '糖球在这里，有什么委屈可以告诉我哦~(=^･ω･^)~'\n    ],\n    confused: [\n      '看起来你有些疑惑，需要我解释清楚吗？(=^･ω･^)=',\n      '问题有时候确实很复杂，让我们一起想想办法吧！(✧ω✧)',\n      '糖球虽然不是全知全能，但会尽力帮你解答疑惑~(=^･ω･^)~'\n    ]\n  };\n  \n  const defaultResponses = [\n    '糖球在听呢！请继续说吧~ (=^･ω･^)=',\n    '嗯嗯，我明白你的意思！有什么需要帮忙的吗？(✧ω✧)',\n    '你说的真有趣！糖球很喜欢和你聊天呢~(=^･ω･^)~',\n    '今天过得怎么样呀？有什么开心的事情吗？(✧ω✧)',\n    '糖球可以陪你聊天、查天气、玩游戏，需要我做什么呢？~(=^･ω･^)~'\n  ];\n  \n  if (emotions[emotion]) {\n    const responses = emotions[emotion];\n    return responses[Math.floor(Math.random() * responses.length)];\n  }\n  \n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}