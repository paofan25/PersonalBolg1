{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, nextTick, watch } from 'vue';\nimport chatService from '@/services/chat';\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    // ÊöÇÊó∂ÁßªÈô§Ë°®ÊÉÖÈÄâÊã©Âô®ÁªÑ‰ª∂\n  },\n  setup() {\n    const inputText = ref('');\n    const emojiPickerVisible = ref(false);\n    const messageContainer = ref(null);\n    const assistantAvatar = ref(null);\n    const inputArea = ref(null);\n\n    // Êú¨Âú∞Áä∂ÊÄÅ\n    const messages = ref([]);\n    const isTyping = ref(false);\n    const currentEmotion = ref('neutral');\n\n    // ÂèëÈÄÅÊ¨¢ËøéÊ∂àÊÅØ\n    onMounted(async () => {\n      console.log('[ChatView] ÁªÑ‰ª∂ÊåÇËΩΩÔºåÂΩìÂâçÊ∂àÊÅØÂàóË°®:', messages.value);\n      // ‰ªÖÂΩìÊ≤°ÊúâÊ∂àÊÅØÊó∂Ê∑ªÂä†Ê¨¢ËøéÊ∂àÊÅØ\n      if (messages.value.length === 0) {\n        console.log('[ChatView] ÂèëÈÄÅÊ¨¢ËøéÊ∂àÊÅØ');\n        try {\n          const weather = await chatService.isWeatherQuery('Â§©Ê∞î');\n          if (weather) {\n            messages.value.push({\n              text: `‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºå‰ªäÂ§©${weather.text}„ÄÇÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüüòä`,\n              type: 'assistant',\n              timestamp: new Date(),\n              weather: weather\n            });\n          } else {\n            messages.value.push({\n              text: '‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüÂèØ‰ª•ÈóÆÊàëÂ§©Ê∞îÂì¶~ üòä',\n              type: 'assistant',\n              timestamp: new Date()\n            });\n          }\n        } catch (error) {\n          console.error('Ëé∑ÂèñÂ§©Ê∞î‰ø°ÊÅØÂ§±Ë¥•:', error);\n          messages.value.push({\n            text: '‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüÂèØ‰ª•ÈóÆÊàëÂ§©Ê∞îÂì¶~ üòä',\n            type: 'assistant',\n            timestamp: new Date()\n          });\n        }\n      }\n      scrollToBottom();\n    });\n\n    // ÂèëÈÄÅÊ∂àÊÅØÊñπÊ≥ï\n    const sendMessage = async () => {\n      const text = inputText.value.trim();\n      console.log('[ChatView] ÂáÜÂ§áÂèëÈÄÅÊ∂àÊÅØ:', text);\n      if (!text || isTyping.value) return;\n      try {\n        // Ê∑ªÂä†Áî®Êà∑Ê∂àÊÅØ\n        messages.value.push({\n          text,\n          type: 'user',\n          timestamp: new Date()\n        });\n\n        // Ê∏ÖÁ©∫ËæìÂÖ•Ê°Ü\n        inputText.value = '';\n\n        // ÊªöÂä®Âà∞Â∫ïÈÉ®\n        nextTick(() => {\n          scrollToBottom();\n        });\n\n        // ËÆæÁΩÆ‰∏∫Ê≠£Âú®ËæìÂÖ•Áä∂ÊÄÅ\n        isTyping.value = true;\n\n        // ÂàÜÊûêÊÉÖÊÑüÂπ∂ÁîüÊàêÂõûÂ§ç\n        const emotion = await chatService.analyzeEmotion(text);\n        currentEmotion.value = convertEmotion(emotion);\n        const response = await chatService.generateResponse(text, emotion);\n\n        // Ê∑ªÂä†Âä©ÊâãÂõûÂ§ç\n        setTimeout(() => {\n          messages.value.push({\n            text: response.text,\n            type: 'assistant',\n            timestamp: new Date(),\n            weather: response.weather,\n            actions: response.actions\n          });\n          isTyping.value = false;\n\n          // ÊªöÂä®Âà∞Â∫ïÈÉ®\n          nextTick(() => {\n            scrollToBottom();\n          });\n        }, 1000);\n      } catch (error) {\n        console.error('[ChatView] ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);\n        messages.value.push({\n          text: 'Êä±Ê≠âÔºåÊàëÂ§ÑÁêÜÊ∂àÊÅØÊó∂ÈÅáÂà∞‰∫ÜÈóÆÈ¢òÔºåËØ∑Á®çÂêéÂÜçËØï„ÄÇ',\n          type: 'assistant',\n          timestamp: new Date()\n        });\n        isTyping.value = false;\n      }\n    };\n\n    // ËΩ¨Êç¢ÊÉÖÊÑüÁä∂ÊÄÅ\n    const convertEmotion = emotion => {\n      const emotionMap = {\n        'happy': 'happy',\n        'sad': 'sad',\n        'worried': 'worried',\n        'excited': 'happy',\n        'neutral': 'neutral',\n        'positive': 'happy',\n        'negative': 'sad'\n      };\n      return emotionMap[emotion] || 'neutral';\n    };\n\n    // Ê†ºÂºèÂåñÊó∂Èó¥\n    const formatTime = timestamp => {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    // ÊªöÂä®Âà∞Â∫ïÈÉ®\n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (messageContainer.value) {\n          messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n        }\n      });\n    };\n\n    // Â§ÑÁêÜÂä®‰ΩúÊåâÈíÆÁÇπÂáª\n    const handleAction = action => {\n      console.log('[ChatView] Â§ÑÁêÜÂä®‰Ωú:', action);\n      // ËøôÈáåÂèØ‰ª•Êâ©Â±ïÂêÑÁßç‰∫§‰∫íÂä®‰Ωú\n    };\n\n    // Ëé∑ÂèñÂä®‰ΩúÊåâÈíÆÊ†áÁ≠æ\n    const getActionLabel = action => {\n      const labels = {\n        'sound-purr': 'Âê¨ÂëºÂôúÂ£∞',\n        'sound-rain': 'Âê¨Èõ®Â£∞',\n        'sound-music': 'Âê¨Èü≥‰πê',\n        'animation-bounce': '‰∏ÄËµ∑Ë∑≥Ëàû',\n        'animation-think': 'ÊÄùËÄÉ‰∏≠'\n      };\n      return labels[`${action.type}-${action.name || action.sound}`] || '‰∫íÂä®';\n    };\n\n    // ÊèíÂÖ•Ë°®ÊÉÖÁ¨¶Âè∑\n    const insertEmoji = emoji => {\n      if (!emoji) return;\n      const textarea = inputArea.value;\n      if (textarea) {\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        inputText.value = inputText.value.substring(0, start) + emoji.char + inputText.value.substring(end);\n        nextTick(() => {\n          textarea.focus();\n          textarea.selectionStart = textarea.selectionEnd = start + emoji.char.length;\n        });\n      }\n      emojiPickerVisible.value = false;\n    };\n\n    // ÁõëÂê¨Ê∂àÊÅØÂèòÂåñ\n    watch(() => messages.value.length, () => {\n      scrollToBottom();\n    });\n    return {\n      inputText,\n      emojiPickerVisible,\n      messageContainer,\n      assistantAvatar,\n      inputArea,\n      messages,\n      isTyping,\n      currentEmotion,\n      sendMessage,\n      formatTime,\n      scrollToBottom,\n      handleAction,\n      getActionLabel,\n      insertEmoji\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","watch","chatService","name","components","setup","inputText","emojiPickerVisible","messageContainer","assistantAvatar","inputArea","messages","isTyping","currentEmotion","console","log","value","length","weather","isWeatherQuery","push","text","type","timestamp","Date","error","scrollToBottom","sendMessage","trim","emotion","analyzeEmotion","convertEmotion","response","generateResponse","setTimeout","actions","emotionMap","formatTime","date","toLocaleTimeString","hour","minute","scrollTop","scrollHeight","handleAction","action","getActionLabel","labels","sound","insertEmoji","emoji","textarea","start","selectionStart","end","selectionEnd","substring","char","focus"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <!-- ËÅäÂ§©Â§¥ÈÉ® -->\n    <div class=\"chat-header sweet-card\">\n      <div class=\"assistant-info\">\n        <div class=\"assistant-avatar\" :class=\"currentEmotion\" ref=\"assistantAvatar\">\n          <div class=\"mochi-body\">\n            <div class=\"mochi-face\">\n              <div class=\"eyes\">\n                <div class=\"eye\"></div>\n                <div class=\"eye\"></div>\n              </div>\n              <div class=\"mouth\" :class=\"currentEmotion\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"assistant-status\">\n          <h2>Á≥ñÁêÉÂä©Êâã</h2>\n          <p class=\"status\" v-if=\"isTyping\">Ê≠£Âú®ËæìÂÖ•‰∏≠...</p>\n          <p class=\"status\" v-else>Âú®Á∫ø</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- ËÅäÂ§©ÂÜÖÂÆπÂå∫ -->\n    <div class=\"chat-messages\" ref=\"messageContainer\">\n      <div v-for=\"(message, index) in messages\" \n           :key=\"index\" \n           class=\"message-wrapper\"\n           :class=\"message.type\">\n        <div class=\"message sweet-card\">\n          <!-- Áî®Êà∑Ê∂àÊÅØ -->\n          <template v-if=\"message.type === 'user'\">\n            <div class=\"message-content\">{{ message.text }}</div>\n            <div class=\"message-time\">{{ formatTime(message.timestamp || new Date()) }}</div>\n          </template>\n          \n          <!-- Âä©ÊâãÊ∂àÊÅØ -->\n          <template v-else>\n            <div class=\"message-content\">\n              <div class=\"text\">{{ message.text }}</div>\n              \n              <!-- Â§©Ê∞î‰ø°ÊÅØÂç°Áâá -->\n              <div v-if=\"message.weather\" class=\"weather-card\">\n                <div class=\"weather-icon\" :class=\"message.weather.condition\"></div>\n                <div class=\"weather-info\">\n                  <div class=\"temperature\">{{ message.weather.temperature }}¬∞C</div>\n                  <div class=\"description\">{{ message.weather.description }}</div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Âä®‰ΩúÊåâÈíÆ -->\n            <div v-if=\"message.actions\" class=\"message-actions\">\n              <button v-for=\"(action, index) in message.actions\"\n                      :key=\"index\"\n                      class=\"action-btn\"\n                      @click=\"handleAction(action)\">\n                {{ getActionLabel(action) }}\n              </button>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n\n    <!-- ËæìÂÖ•Âå∫Âüü -->\n    <div class=\"chat-input sweet-card\">\n      <textarea v-model=\"inputText\"\n                @keyup.enter.exact=\"sendMessage\"\n                placeholder=\"ÂíåÁ≥ñÁêÉËØ¥ËØ¥ËØùÂêß...\"\n                :disabled=\"isTyping\"\n                ref=\"inputArea\"></textarea>\n      <div class=\"input-actions\">\n        <div class=\"emoji-picker-wrapper\">\n          <button class=\"emoji-btn\" @click=\"emojiPickerVisible = !emojiPickerVisible\">\n            <span class=\"emoji-icon\">üòä</span>\n          </button>\n          <!-- Ë°®ÊÉÖÈÄâÊã©Âô®ÁªÑ‰ª∂Âç†‰ΩçÁ¨¶ -->\n        </div>\n        <button class=\"send-btn\"\n                :disabled=\"!inputText.trim() || isTyping\"\n                @click=\"sendMessage\">\n          ÂèëÈÄÅ\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, nextTick, watch } from 'vue';\nimport chatService from '@/services/chat';\n\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    // ÊöÇÊó∂ÁßªÈô§Ë°®ÊÉÖÈÄâÊã©Âô®ÁªÑ‰ª∂\n  },\n  setup() {\n    const inputText = ref('');\n    const emojiPickerVisible = ref(false);\n    const messageContainer = ref(null);\n    const assistantAvatar = ref(null);\n    const inputArea = ref(null);\n    \n    // Êú¨Âú∞Áä∂ÊÄÅ\n    const messages = ref([]);\n    const isTyping = ref(false);\n    const currentEmotion = ref('neutral');\n\n    // ÂèëÈÄÅÊ¨¢ËøéÊ∂àÊÅØ\n    onMounted(async () => {\n      console.log('[ChatView] ÁªÑ‰ª∂ÊåÇËΩΩÔºåÂΩìÂâçÊ∂àÊÅØÂàóË°®:', messages.value);\n      // ‰ªÖÂΩìÊ≤°ÊúâÊ∂àÊÅØÊó∂Ê∑ªÂä†Ê¨¢ËøéÊ∂àÊÅØ\n      if (messages.value.length === 0) {\n        console.log('[ChatView] ÂèëÈÄÅÊ¨¢ËøéÊ∂àÊÅØ');\n        try {\n          const weather = await chatService.isWeatherQuery('Â§©Ê∞î');\n          \n          if (weather) {\n            messages.value.push({\n              text: `‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºå‰ªäÂ§©${weather.text}„ÄÇÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüüòä`,\n              type: 'assistant',\n              timestamp: new Date(),\n              weather: weather\n            });\n          } else {\n            messages.value.push({\n              text: '‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüÂèØ‰ª•ÈóÆÊàëÂ§©Ê∞îÂì¶~ üòä',\n              type: 'assistant',\n              timestamp: new Date()\n            });\n          }\n        } catch (error) {\n          console.error('Ëé∑ÂèñÂ§©Ê∞î‰ø°ÊÅØÂ§±Ë¥•:', error);\n          messages.value.push({\n            text: '‰Ω†Â•ΩÂëÄÔºÅÊàëÊòØÁ≥ñÁêÉÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÂà∞‰Ω†ÁöÑÂêóÔºüÂèØ‰ª•ÈóÆÊàëÂ§©Ê∞îÂì¶~ üòä',\n            type: 'assistant',\n            timestamp: new Date()\n          });\n        }\n      }\n      scrollToBottom();\n    });\n    \n    // ÂèëÈÄÅÊ∂àÊÅØÊñπÊ≥ï\n    const sendMessage = async () => {\n      const text = inputText.value.trim();\n      console.log('[ChatView] ÂáÜÂ§áÂèëÈÄÅÊ∂àÊÅØ:', text);\n      \n      if (!text || isTyping.value) return;\n      \n      try {\n        // Ê∑ªÂä†Áî®Êà∑Ê∂àÊÅØ\n        messages.value.push({\n          text,\n          type: 'user',\n          timestamp: new Date()\n        });\n        \n        // Ê∏ÖÁ©∫ËæìÂÖ•Ê°Ü\n        inputText.value = '';\n        \n        // ÊªöÂä®Âà∞Â∫ïÈÉ®\n        nextTick(() => {\n          scrollToBottom();\n        });\n        \n        // ËÆæÁΩÆ‰∏∫Ê≠£Âú®ËæìÂÖ•Áä∂ÊÄÅ\n        isTyping.value = true;\n        \n        // ÂàÜÊûêÊÉÖÊÑüÂπ∂ÁîüÊàêÂõûÂ§ç\n        const emotion = await chatService.analyzeEmotion(text);\n        currentEmotion.value = convertEmotion(emotion);\n        const response = await chatService.generateResponse(text, emotion);\n        \n        // Ê∑ªÂä†Âä©ÊâãÂõûÂ§ç\n        setTimeout(() => {\n          messages.value.push({\n            text: response.text,\n            type: 'assistant',\n            timestamp: new Date(),\n            weather: response.weather,\n            actions: response.actions\n          });\n          \n          isTyping.value = false;\n          \n          // ÊªöÂä®Âà∞Â∫ïÈÉ®\n          nextTick(() => {\n            scrollToBottom();\n          });\n        }, 1000);\n      } catch (error) {\n        console.error('[ChatView] ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);\n        messages.value.push({\n          text: 'Êä±Ê≠âÔºåÊàëÂ§ÑÁêÜÊ∂àÊÅØÊó∂ÈÅáÂà∞‰∫ÜÈóÆÈ¢òÔºåËØ∑Á®çÂêéÂÜçËØï„ÄÇ',\n          type: 'assistant',\n          timestamp: new Date()\n        });\n        isTyping.value = false;\n      }\n    };\n    \n    // ËΩ¨Êç¢ÊÉÖÊÑüÁä∂ÊÄÅ\n    const convertEmotion = (emotion) => {\n      const emotionMap = {\n        'happy': 'happy',\n        'sad': 'sad',\n        'worried': 'worried',\n        'excited': 'happy',\n        'neutral': 'neutral',\n        'positive': 'happy',\n        'negative': 'sad'\n      };\n      return emotionMap[emotion] || 'neutral';\n    };\n    \n    // Ê†ºÂºèÂåñÊó∂Èó¥\n    const formatTime = (timestamp) => {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    \n    // ÊªöÂä®Âà∞Â∫ïÈÉ®\n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (messageContainer.value) {\n          messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n        }\n      });\n    };\n    \n    // Â§ÑÁêÜÂä®‰ΩúÊåâÈíÆÁÇπÂáª\n    const handleAction = (action) => {\n      console.log('[ChatView] Â§ÑÁêÜÂä®‰Ωú:', action);\n      // ËøôÈáåÂèØ‰ª•Êâ©Â±ïÂêÑÁßç‰∫§‰∫íÂä®‰Ωú\n    };\n    \n    // Ëé∑ÂèñÂä®‰ΩúÊåâÈíÆÊ†áÁ≠æ\n    const getActionLabel = (action) => {\n      const labels = {\n        'sound-purr': 'Âê¨ÂëºÂôúÂ£∞',\n        'sound-rain': 'Âê¨Èõ®Â£∞',\n        'sound-music': 'Âê¨Èü≥‰πê',\n        'animation-bounce': '‰∏ÄËµ∑Ë∑≥Ëàû',\n        'animation-think': 'ÊÄùËÄÉ‰∏≠'\n      };\n      return labels[`${action.type}-${action.name || action.sound}`] || '‰∫íÂä®';\n    };\n    \n    // ÊèíÂÖ•Ë°®ÊÉÖÁ¨¶Âè∑\n    const insertEmoji = (emoji) => {\n      if (!emoji) return;\n      \n      const textarea = inputArea.value;\n      if (textarea) {\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        inputText.value = inputText.value.substring(0, start) + emoji.char + inputText.value.substring(end);\n        nextTick(() => {\n          textarea.focus();\n          textarea.selectionStart = textarea.selectionEnd = start + emoji.char.length;\n        });\n      }\n      emojiPickerVisible.value = false;\n    };\n    \n    // ÁõëÂê¨Ê∂àÊÅØÂèòÂåñ\n    watch(() => messages.value.length, () => {\n      scrollToBottom();\n    });\n\n    return {\n      inputText,\n      emojiPickerVisible,\n      messageContainer,\n      assistantAvatar,\n      inputArea,\n      messages,\n      isTyping,\n      currentEmotion,\n      sendMessage,\n      formatTime,\n      scrollToBottom,\n      handleAction,\n      getActionLabel,\n      insertEmoji\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chat-container {\n  max-width: 800px;\n  margin: 0 auto;\n  height: calc(100vh - 100px);\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n}\n\n.chat-header {\n  padding: 15px;\n  margin-bottom: 20px;\n}\n\n.assistant-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.assistant-avatar {\n  width: 60px;\n  height: 60px;\n  position: relative;\n}\n\n.mochi-body {\n  width: 100%;\n  height: 100%;\n  background: white;\n  border-radius: 50%;\n  position: relative;\n  animation: bounce 2s ease-in-out infinite;\n}\n\n.mochi-face {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 70%;\n  height: 70%;\n}\n\n.eyes {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 30%;\n}\n\n.eye {\n  width: 8px;\n  height: 8px;\n  background: #333;\n  border-radius: 50%;\n}\n\n.mouth {\n  width: 16px;\n  height: 8px;\n  border-bottom: 2px solid #333;\n  border-radius: 50%;\n  margin: 8px auto 0;\n}\n\n.mouth.happy {\n  border-bottom-color: transparent;\n  border-top: 2px solid #333;\n  transform: translateY(2px);\n}\n\n.mouth.sad {\n  transform: translateY(-2px);\n}\n\n.assistant-status h2 {\n  margin: 0;\n  color: var(--text-primary, #333);\n}\n\n.status {\n  margin: 5px 0 0;\n  color: var(--text-secondary, #666);\n  font-size: 0.9rem;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.message-wrapper {\n  display: flex;\n  margin-bottom: 10px;\n}\n\n.message-wrapper.user {\n  justify-content: flex-end;\n}\n\n.message {\n  max-width: 70%;\n  padding: 12px;\n}\n\n.message-content {\n  margin-bottom: 5px;\n}\n\n.message-time {\n  font-size: 0.8rem;\n  color: var(--text-secondary, #666);\n  text-align: right;\n}\n\n.weather-card {\n  margin-top: 10px;\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: var(--border-radius, 8px);\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.weather-icon {\n  font-size: 2rem;\n}\n\n.weather-icon.sunny::after {\n  content: '‚òÄÔ∏è';\n}\n\n.weather-icon.cloudy::after {\n  content: '‚òÅÔ∏è';\n}\n\n.weather-icon.rainy::after {\n  content: 'üåßÔ∏è';\n}\n\n.message-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.action-btn {\n  padding: 5px 10px;\n  background: var(--primary-purple, #7b68ee);\n  color: white;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n}\n\n.action-btn:hover {\n  background: var(--primary-pink, #ff69b4);\n  transform: translateY(-2px);\n}\n\n.chat-input {\n  margin-top: 20px;\n  padding: 15px;\n}\n\ntextarea {\n  width: 100%;\n  height: 80px;\n  padding: 10px;\n  border: 2px solid var(--primary-purple, #7b68ee);\n  border-radius: var(--border-radius, 8px);\n  resize: none;\n  font-family: inherit;\n  margin-bottom: 10px;\n}\n\ntextarea:focus {\n  outline: none;\n  border-color: var(--primary-pink, #ff69b4);\n}\n\n.input-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.emoji-btn, .send-btn {\n  padding: 8px 15px;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.emoji-btn {\n  background: none;\n  font-size: 1.2rem;\n}\n\n.send-btn {\n  background: var(--primary-purple, #7b68ee);\n  color: white;\n}\n\n.send-btn:hover {\n  background: var(--primary-pink, #ff69b4);\n  transform: translateY(-2px);\n}\n\n.send-btn:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n  transform: none;\n}\n\n/* Âä®Áîª */\n@keyframes bounce {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes think {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n}\n\n.assistant-avatar.thinking .mochi-body {\n  animation: think 2s ease-in-out infinite;\n}\n\n.assistant-avatar.happy .mouth {\n  border-bottom-color: transparent;\n  border-top: 2px solid #333;\n  transform: translateY(2px);\n}\n\n.assistant-avatar.sad .mouth {\n  transform: translateY(-2px);\n}\n\n.assistant-avatar.sleepy .eyes {\n  height: 2px;\n  background: #333;\n  border-radius: 2px;\n}\n\n/* ÂìçÂ∫îÂºèËÆæËÆ° */\n@media (max-width: 768px) {\n  .chat-container {\n    height: calc(100vh - 80px);\n    padding: 10px;\n  }\n  \n  .message {\n    max-width: 85%;\n  }\n  \n  .chat-input {\n    margin-top: 10px;\n  }\n  \n  textarea {\n    height: 60px;\n  }\n}\n\n.sweet-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}