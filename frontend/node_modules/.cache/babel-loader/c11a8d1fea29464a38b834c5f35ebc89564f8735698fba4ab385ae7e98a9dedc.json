{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SparkService from '@/services/sparkAI';\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEffects: true\n};\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion\n};\nconst mutations = {\n  ADD_MESSAGE(state, message) {\n    state.messages.push(message);\n  },\n  SET_TYPING(state, isTyping) {\n    state.isTyping = isTyping;\n  },\n  CHANGE_EMOTION(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  SET_WEATHER_INFO(state, info) {\n    state.weatherInfo = info;\n  },\n  TOGGLE_SOUND_EFFECTS(state) {\n    state.soundEffects = !state.soundEffects;\n  },\n  CLEAR_MESSAGES(state) {\n    state.messages = [];\n  }\n};\nconst actions = {\n  async sendMessage({\n    commit,\n    state\n  }, message) {\n    // 添加用户消息\n    commit('ADD_MESSAGE', {\n      id: Date.now(),\n      text: message,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    });\n\n    // 设置正在输入状态\n    commit('SET_TYPING', true);\n\n    // 分析情绪\n    const emotion = analyzeEmotion(message);\n    commit('CHANGE_EMOTION', emotion);\n\n    // 检查是否是询问天气\n    const isWeatherQuery = checkForWeatherQuery(message);\n    if (isWeatherQuery) {\n      const weatherInfo = await getWeatherInfo();\n      commit('SET_WEATHER_INFO', weatherInfo);\n    }\n    try {\n      // 使用AI服务获取回复\n      const response = await SparkService.generateResponse(message, emotion);\n\n      // 添加助手消息\n      commit('ADD_MESSAGE', {\n        id: Date.now() + 1,\n        text: response,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('调用AI服务失败，使用本地回复:', error);\n\n      // 使用本地回复功能\n      const fallbackResponse = generateResponse(message, emotion);\n\n      // 添加助手消息（本地生成的回复）\n      commit('ADD_MESSAGE', {\n        id: Date.now() + 1,\n        text: fallbackResponse,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      // 取消正在输入状态\n      commit('SET_TYPING', false);\n    }\n  },\n  clearChat({\n    commit\n  }) {\n    commit('CLEAR_MESSAGES');\n  }\n};\n\n// 辅助函数：分析情绪\nfunction analyzeEmotion(message) {\n  const lowerMessage = message.toLowerCase();\n  if (/开心|高兴|快乐|棒|好|喜欢|感谢|谢谢|不错|可爱|喜欢/.test(lowerMessage)) {\n    return 'happy';\n  } else if (/难过|悲伤|伤心|失望|痛苦|忧郁|难受|不安|焦虑/.test(lowerMessage)) {\n    return 'sad';\n  } else if (/生气|愤怒|烦|讨厌|恼火|烦躁|烦人|讨厌/.test(lowerMessage)) {\n    return 'angry';\n  } else if (/惊讶|震惊|吃惊|没想到|意外|不可思议/.test(lowerMessage)) {\n    return 'surprised';\n  } else if (/无聊|累|疲惫|厌倦|乏味|困/.test(lowerMessage)) {\n    return 'tired';\n  } else if (/好奇|问题|疑问|怎么|如何|为什么|是什么|请问/.test(lowerMessage)) {\n    return 'curious';\n  }\n  return 'neutral';\n}\n\n// 辅助函数：检查是否是天气查询\nfunction checkForWeatherQuery(message) {\n  const lowerMessage = message.toLowerCase();\n  return /天气|气温|冷|热|下雨|下雪|阴天|晴天|多云|温度|出门|外面/.test(lowerMessage);\n}\n\n// 辅助函数：获取天气信息（模拟）\nasync function getWeatherInfo() {\n  // 模拟天气数据\n  return {\n    temperature: Math.floor(Math.random() * 10) + 15,\n    // 15-25度\n    condition: ['晴天', '多云', '小雨', '阴天'][Math.floor(Math.random() * 4)],\n    humidity: Math.floor(Math.random() * 30) + 50,\n    // 50-80%\n    location: '当前城市'\n  };\n}\n\n// 辅助函数：生成回复（本地）\nfunction generateResponse(message, emotion) {\n  // 基于情绪和消息内容生成简单的回复\n  switch (emotion) {\n    case 'happy':\n      return '我也很开心呢！(*^▽^*) 看到你这么高兴，我也感到很幸福~';\n    case 'sad':\n      return '别难过啦 (ᗒᗩᗕ) 糖球在这里陪着你哦！有什么想说的都可以告诉我~';\n    case 'angry':\n      return '深呼吸，放松一下吧 (>_<) 生气对身体不好哦！要不要听个轻松的故事？';\n    case 'surprised':\n      return 'ヽ(°〇°)ﾉ 哇！真的吗？这确实很令人惊讶呢！';\n    case 'tired':\n      return '看起来你需要休息一下了 (￣o￣) zzZZ 要不要听点轻松的音乐？';\n    case 'curious':\n      return '这是个好问题呢 (・ω・) 让糖球想一想...';\n    default:\n      if (message.length < 5) {\n        return '呀！想聊些什么呢？糖球随时准备听你说话哦！(◕‿◕)';\n      } else if (checkForWeatherQuery(message)) {\n        return '今天天气不错呢！温度适宜，是个出门玩耍的好日子哦！(●ˇ∀ˇ●)';\n      } else {\n        const responses = ['嗯嗯，糖球明白了！(◕‿◕)', '真有趣呢！还想聊些什么吗？(≧▽≦)', '糖球在认真听你说话哦！(・∀・)', '谢谢你告诉我这些！(●´ω｀●)', '原来如此！学到新知识啦！(✿◠‿◠)'];\n        return responses[Math.floor(Math.random() * responses.length)];\n      }\n  }\n}\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["SparkService","state","messages","isTyping","currentEmotion","weatherInfo","soundEffects","getters","mutations","ADD_MESSAGE","message","push","SET_TYPING","CHANGE_EMOTION","emotion","SET_WEATHER_INFO","info","TOGGLE_SOUND_EFFECTS","CLEAR_MESSAGES","actions","sendMessage","commit","id","Date","now","text","sender","timestamp","toISOString","analyzeEmotion","isWeatherQuery","checkForWeatherQuery","getWeatherInfo","response","generateResponse","error","console","fallbackResponse","clearChat","lowerMessage","toLowerCase","test","temperature","Math","floor","random","condition","humidity","location","length","responses","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import SparkService from '@/services/sparkAI'\n\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEffects: true\n}\n\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion\n}\n\nconst mutations = {\n  ADD_MESSAGE(state, message) {\n    state.messages.push(message)\n  },\n  SET_TYPING(state, isTyping) {\n    state.isTyping = isTyping\n  },\n  CHANGE_EMOTION(state, emotion) {\n    state.currentEmotion = emotion\n  },\n  SET_WEATHER_INFO(state, info) {\n    state.weatherInfo = info\n  },\n  TOGGLE_SOUND_EFFECTS(state) {\n    state.soundEffects = !state.soundEffects\n  },\n  CLEAR_MESSAGES(state) {\n    state.messages = []\n  }\n}\n\nconst actions = {\n  async sendMessage({ commit, state }, message) {\n    // 添加用户消息\n    commit('ADD_MESSAGE', {\n      id: Date.now(),\n      text: message,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    })\n    \n    // 设置正在输入状态\n    commit('SET_TYPING', true)\n    \n    // 分析情绪\n    const emotion = analyzeEmotion(message)\n    commit('CHANGE_EMOTION', emotion)\n    \n    // 检查是否是询问天气\n    const isWeatherQuery = checkForWeatherQuery(message)\n    if (isWeatherQuery) {\n      const weatherInfo = await getWeatherInfo()\n      commit('SET_WEATHER_INFO', weatherInfo)\n    }\n    \n    try {\n      // 使用AI服务获取回复\n      const response = await SparkService.generateResponse(message, emotion)\n      \n      // 添加助手消息\n      commit('ADD_MESSAGE', {\n        id: Date.now() + 1,\n        text: response,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      })\n    } catch (error) {\n      console.error('调用AI服务失败，使用本地回复:', error)\n      \n      // 使用本地回复功能\n      const fallbackResponse = generateResponse(message, emotion)\n      \n      // 添加助手消息（本地生成的回复）\n      commit('ADD_MESSAGE', {\n        id: Date.now() + 1,\n        text: fallbackResponse,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      })\n    } finally {\n      // 取消正在输入状态\n      commit('SET_TYPING', false)\n    }\n  },\n  \n  clearChat({ commit }) {\n    commit('CLEAR_MESSAGES')\n  }\n}\n\n// 辅助函数：分析情绪\nfunction analyzeEmotion(message) {\n  const lowerMessage = message.toLowerCase()\n  \n  if (/开心|高兴|快乐|棒|好|喜欢|感谢|谢谢|不错|可爱|喜欢/.test(lowerMessage)) {\n    return 'happy'\n  } else if (/难过|悲伤|伤心|失望|痛苦|忧郁|难受|不安|焦虑/.test(lowerMessage)) {\n    return 'sad'\n  } else if (/生气|愤怒|烦|讨厌|恼火|烦躁|烦人|讨厌/.test(lowerMessage)) {\n    return 'angry'\n  } else if (/惊讶|震惊|吃惊|没想到|意外|不可思议/.test(lowerMessage)) {\n    return 'surprised'\n  } else if (/无聊|累|疲惫|厌倦|乏味|困/.test(lowerMessage)) {\n    return 'tired'\n  } else if (/好奇|问题|疑问|怎么|如何|为什么|是什么|请问/.test(lowerMessage)) {\n    return 'curious'\n  }\n  \n  return 'neutral'\n}\n\n// 辅助函数：检查是否是天气查询\nfunction checkForWeatherQuery(message) {\n  const lowerMessage = message.toLowerCase()\n  return /天气|气温|冷|热|下雨|下雪|阴天|晴天|多云|温度|出门|外面/.test(lowerMessage)\n}\n\n// 辅助函数：获取天气信息（模拟）\nasync function getWeatherInfo() {\n  // 模拟天气数据\n  return {\n    temperature: Math.floor(Math.random() * 10) + 15, // 15-25度\n    condition: ['晴天', '多云', '小雨', '阴天'][Math.floor(Math.random() * 4)],\n    humidity: Math.floor(Math.random() * 30) + 50, // 50-80%\n    location: '当前城市'\n  }\n}\n\n// 辅助函数：生成回复（本地）\nfunction generateResponse(message, emotion) {\n  // 基于情绪和消息内容生成简单的回复\n  switch(emotion) {\n    case 'happy':\n      return '我也很开心呢！(*^▽^*) 看到你这么高兴，我也感到很幸福~'\n    case 'sad':\n      return '别难过啦 (ᗒᗩᗕ) 糖球在这里陪着你哦！有什么想说的都可以告诉我~'\n    case 'angry':\n      return '深呼吸，放松一下吧 (>_<) 生气对身体不好哦！要不要听个轻松的故事？'\n    case 'surprised':\n      return 'ヽ(°〇°)ﾉ 哇！真的吗？这确实很令人惊讶呢！'\n    case 'tired':\n      return '看起来你需要休息一下了 (￣o￣) zzZZ 要不要听点轻松的音乐？'\n    case 'curious':\n      return '这是个好问题呢 (・ω・) 让糖球想一想...'\n    default:\n      if (message.length < 5) {\n        return '呀！想聊些什么呢？糖球随时准备听你说话哦！(◕‿◕)'\n      } else if (checkForWeatherQuery(message)) {\n        return '今天天气不错呢！温度适宜，是个出门玩耍的好日子哦！(●ˇ∀ˇ●)'\n      } else {\n        const responses = [\n          '嗯嗯，糖球明白了！(◕‿◕)',\n          '真有趣呢！还想聊些什么吗？(≧▽≦)',\n          '糖球在认真听你说话哦！(・∀・)',\n          '谢谢你告诉我这些！(●´ω｀●)',\n          '原来如此！学到新知识啦！(✿◠‿◠)'\n        ]\n        return responses[Math.floor(Math.random() * responses.length)]\n      }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}