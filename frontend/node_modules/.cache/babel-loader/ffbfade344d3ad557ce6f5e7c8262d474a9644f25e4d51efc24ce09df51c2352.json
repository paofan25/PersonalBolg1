{"ast":null,"code":"import { computed, ref, onMounted, nextTick, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport EmojiPicker from '@/components/EmojiPicker.vue';\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    EmojiPicker\n  },\n  setup() {\n    const store = useStore();\n    const inputText = ref('');\n    const emojiPickerVisible = ref(false);\n    const weatherCardCollapsed = ref(false);\n    const quickWeatherCollapsed = ref(false);\n    const messageContainer = ref(null);\n    const assistantAvatar = ref(null);\n    const inputArea = ref(null);\n    const popularCities = ref(['北京', '上海', '广州', '深圳', '南京', '杭州']);\n\n    // Vuex 状态\n    const messages = computed(() => store.getters['chat/getAllMessages'] || []);\n    const messagesArray = computed(() => {\n      return Array.isArray(messages.value) ? messages.value : [];\n    });\n    const isTyping = computed(() => store.getters['chat/getIsTyping'] || false);\n    const currentEmotion = computed(() => store.getters['chat/getCurrentEmotion'] || 'neutral');\n\n    // 发送欢迎消息\n    onMounted(() => {\n      console.log('[ChatView] 组件挂载');\n      store.dispatch('chat/clearChat');\n\n      // 添加欢迎消息\n      store.commit('chat/ADD_MESSAGE', {\n        text: '你好呀！我是糖球助手，有什么可以帮到你的吗？可以问我天气哦~ 😊',\n        type: 'assistant',\n        timestamp: new Date()\n      });\n      nextTick(() => {\n        scrollToBottom();\n      });\n    });\n\n    // 发送消息方法\n    const sendMessage = () => {\n      const text = inputText.value.trim();\n      console.log('[ChatView] 准备发送消息:', text);\n      if (!text || isTyping.value) return;\n      try {\n        // 发送消息\n        store.dispatch('chat/sendMessage', text);\n\n        // 清空输入框\n        inputText.value = '';\n\n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom();\n        });\n      } catch (error) {\n        console.error('[ChatView] 发送消息失败:', error);\n      }\n    };\n\n    // 查询城市天气\n    const checkCityWeather = city => {\n      inputText.value = `${city}天气怎么样？`;\n      sendMessage();\n    };\n\n    // 格式化消息文本，将换行符替换为<br>\n    const formatMessageText = text => {\n      if (!text) return '';\n      return text.replace(/\\n/g, '<br>');\n    };\n\n    // 格式化时间\n    const formatTime = timestamp => {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (messageContainer.value) {\n          messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n        }\n      });\n    };\n\n    // 处理动作按钮点击\n    const handleAction = action => {\n      console.log('[ChatView] 处理动作:', action);\n      if (action.type === 'cityWeather' && action.cityName) {\n        // 查询指定城市天气\n        checkCityWeather(action.cityName);\n      } else if (action.type === 'sound') {\n        // 播放声音（此处为占位，实际需要实现声音播放功能）\n        console.log('播放声音:', action.sound);\n      } else if (action.type === 'animation') {\n        // 播放动画（此处为占位，实际需要实现动画效果）\n        console.log('播放动画:', action.name);\n        if (assistantAvatar.value) {\n          assistantAvatar.value.classList.add(action.name);\n          setTimeout(() => {\n            assistantAvatar.value.classList.remove(action.name);\n          }, 2000);\n        }\n      }\n    };\n\n    // 获取动作按钮标签\n    const getActionLabel = action => {\n      if (action.label) {\n        return action.label;\n      }\n      const labels = {\n        'sound-purr': '听呼噜声',\n        'sound-rain': '听雨声',\n        'sound-music': '听音乐',\n        'animation-bounce': '一起跳舞',\n        'animation-think': '思考中',\n        'animation-happy': '一起开心'\n      };\n      return labels[`${action.type}-${action.name || action.sound}`] || '互动';\n    };\n\n    // 切换表情选择器显示状态\n    const toggleEmojiPicker = () => {\n      emojiPickerVisible.value = !emojiPickerVisible.value;\n    };\n\n    // 切换天气卡片展开状态\n    const toggleWeatherCard = () => {\n      weatherCardCollapsed.value = !weatherCardCollapsed.value;\n    };\n\n    // 切换快捷天气面板展开状态\n    const toggleQuickWeather = () => {\n      quickWeatherCollapsed.value = !quickWeatherCollapsed.value;\n    };\n\n    // 插入表情符号\n    const insertEmoji = emoji => {\n      console.log('Inserting emoji:', emoji);\n      if (!emoji) return;\n      const textarea = inputArea.value;\n      if (textarea) {\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        inputText.value = inputText.value.substring(0, start) + emoji.char + inputText.value.substring(end);\n        nextTick(() => {\n          textarea.focus();\n          textarea.selectionStart = textarea.selectionEnd = start + emoji.char.length;\n        });\n      }\n      emojiPickerVisible.value = false;\n    };\n\n    // 监听消息变化，这里使用可选链以避免messagesArray为undefined的情况\n    watch(() => messagesArray.value?.length, () => {\n      scrollToBottom();\n    });\n    return {\n      inputText,\n      emojiPickerVisible,\n      weatherCardCollapsed,\n      quickWeatherCollapsed,\n      messageContainer,\n      assistantAvatar,\n      inputArea,\n      messages,\n      messagesArray,\n      isTyping,\n      currentEmotion,\n      popularCities,\n      sendMessage,\n      checkCityWeather,\n      formatMessageText,\n      formatTime,\n      scrollToBottom,\n      handleAction,\n      getActionLabel,\n      toggleEmojiPicker,\n      toggleWeatherCard,\n      toggleQuickWeather,\n      insertEmoji\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","nextTick","watch","useStore","EmojiPicker","name","components","setup","store","inputText","emojiPickerVisible","weatherCardCollapsed","quickWeatherCollapsed","messageContainer","assistantAvatar","inputArea","popularCities","messages","getters","messagesArray","Array","isArray","value","isTyping","currentEmotion","console","log","dispatch","commit","text","type","timestamp","Date","scrollToBottom","sendMessage","trim","error","checkCityWeather","city","formatMessageText","replace","formatTime","date","toLocaleTimeString","hour","minute","scrollTop","scrollHeight","handleAction","action","cityName","sound","classList","add","setTimeout","remove","getActionLabel","label","labels","toggleEmojiPicker","toggleWeatherCard","toggleQuickWeather","insertEmoji","emoji","textarea","start","selectionStart","end","selectionEnd","substring","char","focus","length"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <!-- 聊天头部 -->\n    <div class=\"chat-header sweet-card\">\n      <div class=\"assistant-info\">\n        <div class=\"assistant-avatar\" :class=\"currentEmotion\" ref=\"assistantAvatar\">\n          <div class=\"mochi-body\">\n            <div class=\"mochi-face\">\n              <div class=\"eyes\">\n                <div class=\"eye\"></div>\n                <div class=\"eye\"></div>\n              </div>\n              <div class=\"mouth\" :class=\"currentEmotion\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"assistant-status\">\n          <h2>糖球助手</h2>\n          <p class=\"status\" v-if=\"isTyping\">正在输入中...</p>\n          <p class=\"status\" v-else>在线</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 聊天内容区 -->\n    <div class=\"chat-messages\" ref=\"messageContainer\">\n      <div v-for=\"(message, index) in messagesArray\" \n           :key=\"index\" \n           class=\"message-wrapper\"\n           :class=\"message.type\">\n        <div class=\"message sweet-card\">\n          <!-- 用户消息 -->\n          <template v-if=\"message.type === 'user'\">\n            <div class=\"message-content\">{{ message.text }}</div>\n            <div class=\"message-time\">{{ formatTime(message.timestamp || new Date()) }}</div>\n          </template>\n          \n          <!-- 助手消息 -->\n          <template v-else>\n            <div class=\"message-content\">\n              <div class=\"text\" v-html=\"formatMessageText(message.text)\"></div>\n              \n              <!-- 天气信息卡片 -->\n              <div v-if=\"message.weather\" class=\"weather-card\">\n                <div class=\"weather-header\">\n                  <div class=\"weather-title\">天气信息</div>\n                  <button class=\"weather-collapse-btn\" @click=\"toggleWeatherCard\">\n                    {{ weatherCardCollapsed ? '展开' : '收起' }}\n                  </button>\n                </div>\n                <div v-if=\"!weatherCardCollapsed\" class=\"weather-body\">\n                  <div class=\"weather-icon\" :class=\"message.weather.condition\"></div>\n                  <div class=\"weather-info\">\n                    <div class=\"city-name\">{{ message.weather.cityName }}</div>\n                    <div class=\"temperature\">{{ message.weather.temperature }}°C</div>\n                    <div class=\"description\">{{ message.weather.description }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- 动作按钮 -->\n            <div v-if=\"message.actions\" class=\"message-actions\">\n              <button v-for=\"(action, actionIndex) in message.actions\"\n                      :key=\"actionIndex\"\n                      class=\"action-btn\"\n                      @click=\"handleAction(action)\">\n                {{ getActionLabel(action) }}\n              </button>\n            </div>\n          </template>\n        </div>\n      </div>\n    </div>\n\n    <!-- 输入区域 -->\n    <div class=\"chat-input sweet-card\">\n      <textarea v-model=\"inputText\"\n                @keyup.enter.exact=\"sendMessage\"\n                placeholder=\"和糖球说说话吧...\"\n                :disabled=\"isTyping\"\n                ref=\"inputArea\"></textarea>\n      <div class=\"input-actions\">\n        <div class=\"emoji-picker-wrapper\">\n          <button class=\"emoji-btn\" @click=\"toggleEmojiPicker\">\n            <span class=\"emoji-icon\">😊</span>\n          </button>\n          <EmojiPicker\n            :visible=\"emojiPickerVisible\"\n            :position=\"{ bottom: '100%', left: '0' }\"\n            @select=\"insertEmoji\"\n            @close=\"emojiPickerVisible = false\"\n          />\n        </div>\n        <button class=\"send-btn\"\n                :disabled=\"!inputText.trim() || isTyping\"\n                @click=\"sendMessage\">\n          发送\n        </button>\n      </div>\n    </div>\n    \n    <!-- 快捷城市天气查询 -->\n    <div class=\"quick-weather sweet-card\" v-if=\"!quickWeatherCollapsed\">\n      <div class=\"quick-header\">\n        <div class=\"quick-title\">快速查询天气</div>\n        <button class=\"quick-collapse-btn\" @click=\"toggleQuickWeather\">\n          收起\n        </button>\n      </div>\n      <div class=\"quick-buttons\">\n        <button v-for=\"city in popularCities\" \n                :key=\"city\" \n                class=\"quick-btn\"\n                @click=\"checkCityWeather(city)\">\n          {{ city }}\n        </button>\n      </div>\n    </div>\n    \n    <!-- 收起的快捷按钮 -->\n    <div v-if=\"quickWeatherCollapsed\" class=\"collapsed-quick-btn sweet-card\" @click=\"toggleQuickWeather\">\n      <span>展开天气查询</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, onMounted, nextTick, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport EmojiPicker from '@/components/EmojiPicker.vue';\n\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    EmojiPicker\n  },\n  setup() {\n    const store = useStore();\n    const inputText = ref('');\n    const emojiPickerVisible = ref(false);\n    const weatherCardCollapsed = ref(false);\n    const quickWeatherCollapsed = ref(false);\n    const messageContainer = ref(null);\n    const assistantAvatar = ref(null);\n    const inputArea = ref(null);\n    const popularCities = ref(['北京', '上海', '广州', '深圳', '南京', '杭州']);\n    \n    // Vuex 状态\n    const messages = computed(() => store.getters['chat/getAllMessages'] || []);\n    const messagesArray = computed(() => {\n      return Array.isArray(messages.value) ? messages.value : [];\n    });\n    const isTyping = computed(() => store.getters['chat/getIsTyping'] || false);\n    const currentEmotion = computed(() => store.getters['chat/getCurrentEmotion'] || 'neutral');\n\n    // 发送欢迎消息\n    onMounted(() => {\n      console.log('[ChatView] 组件挂载');\n      store.dispatch('chat/clearChat');\n      \n      // 添加欢迎消息\n      store.commit('chat/ADD_MESSAGE', {\n        text: '你好呀！我是糖球助手，有什么可以帮到你的吗？可以问我天气哦~ 😊',\n        type: 'assistant',\n        timestamp: new Date()\n      });\n      \n      nextTick(() => {\n        scrollToBottom();\n      });\n    });\n    \n    // 发送消息方法\n    const sendMessage = () => {\n      const text = inputText.value.trim();\n      console.log('[ChatView] 准备发送消息:', text);\n      \n      if (!text || isTyping.value) return;\n      \n      try {\n        // 发送消息\n        store.dispatch('chat/sendMessage', text);\n        \n        // 清空输入框\n        inputText.value = '';\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom();\n        });\n      } catch (error) {\n        console.error('[ChatView] 发送消息失败:', error);\n      }\n    };\n    \n    // 查询城市天气\n    const checkCityWeather = (city) => {\n      inputText.value = `${city}天气怎么样？`;\n      sendMessage();\n    };\n    \n    // 格式化消息文本，将换行符替换为<br>\n    const formatMessageText = (text) => {\n      if (!text) return '';\n      return text.replace(/\\n/g, '<br>');\n    };\n    \n    // 格式化时间\n    const formatTime = (timestamp) => {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n    \n    // 滚动到底部\n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (messageContainer.value) {\n          messageContainer.value.scrollTop = messageContainer.value.scrollHeight;\n        }\n      });\n    };\n    \n    // 处理动作按钮点击\n    const handleAction = (action) => {\n      console.log('[ChatView] 处理动作:', action);\n      \n      if (action.type === 'cityWeather' && action.cityName) {\n        // 查询指定城市天气\n        checkCityWeather(action.cityName);\n      } else if (action.type === 'sound') {\n        // 播放声音（此处为占位，实际需要实现声音播放功能）\n        console.log('播放声音:', action.sound);\n      } else if (action.type === 'animation') {\n        // 播放动画（此处为占位，实际需要实现动画效果）\n        console.log('播放动画:', action.name);\n        if (assistantAvatar.value) {\n          assistantAvatar.value.classList.add(action.name);\n          setTimeout(() => {\n            assistantAvatar.value.classList.remove(action.name);\n          }, 2000);\n        }\n      }\n    };\n    \n    // 获取动作按钮标签\n    const getActionLabel = (action) => {\n      if (action.label) {\n        return action.label;\n      }\n      \n      const labels = {\n        'sound-purr': '听呼噜声',\n        'sound-rain': '听雨声',\n        'sound-music': '听音乐',\n        'animation-bounce': '一起跳舞',\n        'animation-think': '思考中',\n        'animation-happy': '一起开心'\n      };\n      return labels[`${action.type}-${action.name || action.sound}`] || '互动';\n    };\n    \n    // 切换表情选择器显示状态\n    const toggleEmojiPicker = () => {\n      emojiPickerVisible.value = !emojiPickerVisible.value;\n    };\n    \n    // 切换天气卡片展开状态\n    const toggleWeatherCard = () => {\n      weatherCardCollapsed.value = !weatherCardCollapsed.value;\n    };\n    \n    // 切换快捷天气面板展开状态\n    const toggleQuickWeather = () => {\n      quickWeatherCollapsed.value = !quickWeatherCollapsed.value;\n    };\n    \n    // 插入表情符号\n    const insertEmoji = (emoji) => {\n      console.log('Inserting emoji:', emoji);\n      if (!emoji) return;\n      \n      const textarea = inputArea.value;\n      if (textarea) {\n        const start = textarea.selectionStart;\n        const end = textarea.selectionEnd;\n        inputText.value = inputText.value.substring(0, start) + emoji.char + inputText.value.substring(end);\n        nextTick(() => {\n          textarea.focus();\n          textarea.selectionStart = textarea.selectionEnd = start + emoji.char.length;\n        });\n      }\n      emojiPickerVisible.value = false;\n    };\n    \n    // 监听消息变化，这里使用可选链以避免messagesArray为undefined的情况\n    watch(() => messagesArray.value?.length, () => {\n      scrollToBottom();\n    });\n\n    return {\n      inputText,\n      emojiPickerVisible,\n      weatherCardCollapsed,\n      quickWeatherCollapsed,\n      messageContainer,\n      assistantAvatar,\n      inputArea,\n      messages,\n      messagesArray,\n      isTyping,\n      currentEmotion,\n      popularCities,\n      sendMessage,\n      checkCityWeather,\n      formatMessageText,\n      formatTime,\n      scrollToBottom,\n      handleAction,\n      getActionLabel,\n      toggleEmojiPicker,\n      toggleWeatherCard,\n      toggleQuickWeather,\n      insertEmoji\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chat-container {\n  max-width: 800px;\n  margin: 0 auto;\n  height: calc(100vh - 160px);\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n}\n\n.chat-header {\n  padding: 15px;\n  margin-bottom: 20px;\n}\n\n.assistant-info {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.assistant-avatar {\n  width: 60px;\n  height: 60px;\n  position: relative;\n}\n\n.mochi-body {\n  width: 100%;\n  height: 100%;\n  background: white;\n  border-radius: 50%;\n  position: relative;\n  animation: bounce 2s ease-in-out infinite;\n}\n\n.mochi-face {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 70%;\n  height: 70%;\n}\n\n.eyes {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 30%;\n}\n\n.eye {\n  width: 8px;\n  height: 8px;\n  background: #333;\n  border-radius: 50%;\n}\n\n.mouth {\n  width: 16px;\n  height: 8px;\n  border-bottom: 2px solid #333;\n  border-radius: 50%;\n  margin: 8px auto 0;\n}\n\n.mouth.happy {\n  border-bottom-color: transparent;\n  border-top: 2px solid #333;\n  transform: translateY(2px);\n}\n\n.mouth.sad {\n  transform: translateY(-2px);\n}\n\n.assistant-status h2 {\n  margin: 0;\n  color: var(--text-primary, #333);\n}\n\n.status {\n  margin: 5px 0 0;\n  color: var(--text-secondary, #666);\n  font-size: 0.9rem;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.message-wrapper {\n  display: flex;\n  margin-bottom: 10px;\n}\n\n.message-wrapper.user {\n  justify-content: flex-end;\n}\n\n.message {\n  max-width: 70%;\n  padding: 12px;\n}\n\n.message-content {\n  margin-bottom: 5px;\n}\n\n.message-time {\n  font-size: 0.8rem;\n  color: var(--text-secondary, #666);\n  text-align: right;\n}\n\n.weather-card {\n  margin-top: 10px;\n  padding: 10px;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: var(--border-radius, 8px);\n  display: flex;\n  flex-direction: column;\n}\n\n.weather-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.weather-title {\n  font-weight: bold;\n}\n\n.weather-collapse-btn {\n  background: none;\n  border: none;\n  color: var(--primary-purple, #7b68ee);\n  font-size: 0.8rem;\n  cursor: pointer;\n}\n\n.weather-body {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.weather-icon {\n  font-size: 2rem;\n}\n\n.weather-icon.sunny::after {\n  content: '☀️';\n}\n\n.weather-icon.cloudy::after {\n  content: '☁️';\n}\n\n.weather-icon.rainy::after {\n  content: '🌧️';\n}\n\n.weather-icon.snowy::after {\n  content: '❄️';\n}\n\n.weather-icon.foggy::after {\n  content: '🌫️';\n}\n\n.city-name {\n  font-weight: bold;\n  margin-bottom: 4px;\n}\n\n.message-actions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 10px;\n}\n\n.action-btn {\n  padding: 5px 10px;\n  background: var(--primary-purple, #7b68ee);\n  color: white;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n}\n\n.action-btn:hover {\n  background: var(--primary-pink, #ff69b4);\n  transform: translateY(-2px);\n}\n\n.chat-input {\n  margin-top: 20px;\n  padding: 15px;\n}\n\ntextarea {\n  width: 100%;\n  height: 80px;\n  padding: 10px;\n  border: 2px solid var(--primary-purple, #7b68ee);\n  border-radius: var(--border-radius, 8px);\n  resize: none;\n  font-family: inherit;\n  margin-bottom: 10px;\n}\n\ntextarea:focus {\n  outline: none;\n  border-color: var(--primary-pink, #ff69b4);\n}\n\n.input-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.emoji-picker-wrapper {\n  position: relative;\n}\n\n.emoji-btn, .send-btn {\n  padding: 8px 15px;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.emoji-btn {\n  background: none;\n  font-size: 1.2rem;\n}\n\n.send-btn {\n  background: var(--primary-purple, #7b68ee);\n  color: white;\n}\n\n.send-btn:hover {\n  background: var(--primary-pink, #ff69b4);\n  transform: translateY(-2px);\n}\n\n.send-btn:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n  transform: none;\n}\n\n/* 快捷天气查询 */\n.quick-weather {\n  margin-top: 15px;\n  padding: 10px 15px;\n}\n\n.quick-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.quick-title {\n  font-size: 0.9rem;\n  color: var(--text-secondary, #666);\n}\n\n.quick-collapse-btn {\n  background: none;\n  border: none;\n  color: var(--primary-purple, #7b68ee);\n  font-size: 0.8rem;\n  cursor: pointer;\n}\n\n.quick-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.quick-btn {\n  padding: 5px 10px;\n  background: var(--primary-light, #f0f0ff);\n  color: var(--primary-purple, #7b68ee);\n  border: 1px solid var(--primary-purple, #7b68ee);\n  border-radius: 15px;\n  cursor: pointer;\n  font-size: 0.85rem;\n  transition: all 0.3s ease;\n}\n\n.quick-btn:hover {\n  background: var(--primary-purple, #7b68ee);\n  color: white;\n  transform: translateY(-2px);\n}\n\n.collapsed-quick-btn {\n  margin-top: 15px;\n  padding: 8px 15px;\n  text-align: center;\n  cursor: pointer;\n  color: var(--primary-purple, #7b68ee);\n  transition: all 0.3s ease;\n}\n\n.collapsed-quick-btn:hover {\n  background: var(--primary-light, #f0f0ff);\n}\n\n/* 动画 */\n@keyframes bounce {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes think {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n}\n\n.assistant-avatar.thinking .mochi-body {\n  animation: think 2s ease-in-out infinite;\n}\n\n.assistant-avatar.happy .mouth {\n  border-bottom-color: transparent;\n  border-top: 2px solid #333;\n  transform: translateY(2px);\n}\n\n.assistant-avatar.sad .mouth {\n  transform: translateY(-2px);\n}\n\n.assistant-avatar.sleepy .eyes {\n  height: 2px;\n  background: #333;\n  border-radius: 2px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .chat-container {\n    height: calc(100vh - 140px);\n    padding: 10px;\n  }\n  \n  .message {\n    max-width: 85%;\n  }\n  \n  .chat-input {\n    margin-top: 10px;\n  }\n  \n  textarea {\n    height: 60px;\n  }\n  \n  .quick-buttons {\n    justify-content: center;\n  }\n}\n\n.sweet-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}