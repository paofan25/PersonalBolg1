{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '@/assets/images/ai-avatar.png';\nconst _hoisted_1 = {\n  class: \"chat-assistant\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container sweet-card\"\n};\nconst _hoisted_3 = {\n  class: \"chat-header\"\n};\nconst _hoisted_4 = {\n  class: \"assistant-avatar float-animation\"\n};\nconst _hoisted_5 = {\n  class: \"chat-messages\",\n  ref: \"chatMessages\"\n};\nconst _hoisted_6 = {\n  class: \"message-avatar\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"message-bubble\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"assistant-animation\"\n};\nconst _hoisted_10 = [\"innerHTML\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"message-container ai-message typing-indicator\"\n};\nconst _hoisted_12 = {\n  class: \"chat-input-container\"\n};\nconst _hoisted_13 = [\"disabled\"];\nconst _hoisted_14 = {\n  class: \"input-actions\"\n};\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  key: 0,\n  class: \"emoji-picker\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"weather-module\"\n};\nconst _hoisted_19 = {\n  class: \"weather-container sweet-card\"\n};\nconst _hoisted_20 = {\n  class: \"weather-header\"\n};\nconst _hoisted_21 = {\n  class: \"weather-content\"\n};\nconst _hoisted_22 = {\n  key: 0\n};\nconst _hoisted_23 = {\n  key: 1\n};\nconst _hoisted_24 = {\n  key: 2\n};\nconst _hoisted_25 = {\n  key: 3\n};\nconst _hoisted_26 = {\n  class: \"weather-info\"\n};\nconst _hoisted_27 = {\n  class: \"weather-location\"\n};\nconst _hoisted_28 = {\n  class: \"weather-temp\"\n};\nconst _hoisted_29 = {\n  class: \"weather-desc\"\n};\nconst _hoisted_30 = {\n  class: \"effects-layer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"chat-title gradient-text\"\n  }, \"糖球助手\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"mochi-character\", {\n      'talking': $data.isAiTyping\n    }])\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"message-container\", {\n        'user-message': message.role === 'user',\n        'ai-message': message.role === 'assistant'\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: message.role === 'user' ? '@/assets/images/user-avatar.png' : '@/assets/images/ai-avatar.png',\n      alt: message.role === 'user' ? '用户' : '糖球助手'\n    }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [message.role === 'assistant' && message.animation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(message.animation), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n      class: \"message-content\",\n      innerHTML: $options.formatMessage(message.content)\n    }, null, 8 /* PROPS */, _hoisted_10)])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $data.isAiTyping ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"message-avatar\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"糖球助手\"\n  })], -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"message-bubble\"\n  }, [_createElementVNode(\"div\", {\n    class: \"typing-dots\"\n  }, [_createElementVNode(\"span\"), _createElementVNode(\"span\"), _createElementVNode(\"span\")])], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    placeholder: \"有什么想问糖球的呢~ (=^･ω･^)~\",\n    class: \"chat-input\",\n    onKeydown: _cache[1] || (_cache[1] = _withKeys(_withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]), [\"enter\"])),\n    disabled: $data.isAiTyping,\n    ref: \"chatInput\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13), [[_vModelText, $data.userInput]]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    class: \"emoji-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleEmojiPicker && $options.toggleEmojiPicker(...args))\n  }, \" 😊 \"), _createElementVNode(\"button\", {\n    class: \"send-btn sweet-btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    disabled: !$data.userInput.trim() || $data.isAiTyping\n  }, \" 发送 \", 8 /* PROPS */, _hoisted_15)]), _createCommentVNode(\" 表情选择器 \"), $data.showEmojiPicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.emojis, emoji => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: emoji,\n      class: \"emoji-item\",\n      onClick: $event => $options.addEmoji(emoji)\n    }, _toDisplayString(emoji), 9 /* TEXT, PROPS */, _hoisted_17);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 天气查询模块 \"), $data.showWeatherModule ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"天气查询\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[4] || (_cache[4] = $event => $data.showWeatherModule = false)\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"weather-icon\", $data.weatherData.icon])\n  }, [$data.weatherData.icon === 'sunny' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, \"☀️\")) : _createCommentVNode(\"v-if\", true), $data.weatherData.icon === 'cloudy' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_23, \"☁️\")) : _createCommentVNode(\"v-if\", true), $data.weatherData.icon === 'rainy' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, \"🌧️\")) : _createCommentVNode(\"v-if\", true), $data.weatherData.icon === 'snowy' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, \"❄️\")) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, _toDisplayString($data.weatherData.location), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_28, _toDisplayString($data.weatherData.temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_29, _toDisplayString($data.weatherData.description), 1 /* TEXT */)])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 底部特效层 \"), _createElementVNode(\"div\", _hoisted_30, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(10, i => {\n    return _createElementVNode(\"div\", {\n      key: i,\n      class: \"star-effect\",\n      style: _normalizeStyle($options.randomStarStyle())\n    }, null, 4 /* STYLE */);\n  }), 64 /* STABLE_FRAGMENT */))])]), _createCommentVNode(\" 聊天指南 \"), _cache[8] || (_cache[8] = _createStaticVNode(\"<div class=\\\"chat-guide sweet-card\\\" data-v-3fb4e79c><h3 class=\\\"guide-title gradient-text\\\" data-v-3fb4e79c>糖球助手指南</h3><div class=\\\"guide-items\\\" data-v-3fb4e79c><div class=\\\"guide-item\\\" data-v-3fb4e79c><div class=\\\"guide-icon\\\" data-v-3fb4e79c>🌤️</div><div class=\\\"guide-text\\\" data-v-3fb4e79c>问我今天的天气~</div></div><div class=\\\"guide-item\\\" data-v-3fb4e79c><div class=\\\"guide-icon\\\" data-v-3fb4e79c>🎵</div><div class=\\\"guide-text\\\" data-v-3fb4e79c>想听一些舒缓的音乐</div></div><div class=\\\"guide-item\\\" data-v-3fb4e79c><div class=\\\"guide-icon\\\" data-v-3fb4e79c>🍰</div><div class=\\\"guide-text\\\" data-v-3fb4e79c>推荐一些甜点食谱</div></div><div class=\\\"guide-item\\\" data-v-3fb4e79c><div class=\\\"guide-icon\\\" data-v-3fb4e79c>📝</div><div class=\\\"guide-text\\\" data-v-3fb4e79c>帮我写一段可爱的日记</div></div><div class=\\\"guide-item\\\" data-v-3fb4e79c><div class=\\\"guide-icon\\\" data-v-3fb4e79c>🎮</div><div class=\\\"guide-text\\\" data-v-3fb4e79c>陪我玩个小游戏</div></div></div></div>\", 1))]);\n}","map":{"version":3,"names":["_imports_0","class","ref","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_normalizeClass","$data","isAiTyping","_hoisted_5","_Fragment","_renderList","messages","message","index","role","_hoisted_6","src","alt","_hoisted_7","_hoisted_8","animation","_hoisted_9","_toDisplayString","_createCommentVNode","innerHTML","$options","formatMessage","content","_hoisted_10","_hoisted_11","_cache","_hoisted_12","$event","userInput","placeholder","onKeydown","_withKeys","_withModifiers","args","sendMessage","disabled","_hoisted_13","_hoisted_14","onClick","toggleEmojiPicker","trim","_hoisted_15","showEmojiPicker","_hoisted_16","emojis","emoji","addEmoji","_hoisted_17","showWeatherModule","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","weatherData","icon","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","location","_hoisted_28","temperature","_hoisted_29","description","_hoisted_30","i","style","_normalizeStyle","randomStarStyle","_createStaticVNode"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-assistant\">\n    <div class=\"chat-container sweet-card\">\n      <div class=\"chat-header\">\n        <h1 class=\"chat-title gradient-text\">糖球助手</h1>\n        <div class=\"assistant-avatar float-animation\">\n          <div class=\"mochi-character\" :class=\"{ 'talking': isAiTyping }\"></div>\n        </div>\n      </div>\n      \n      <div class=\"chat-messages\" ref=\"chatMessages\">\n        <div \n          v-for=\"(message, index) in messages\" \n          :key=\"index\"\n          class=\"message-container\" \n          :class=\"{ 'user-message': message.role === 'user', 'ai-message': message.role === 'assistant' }\"\n        >\n          <div class=\"message-avatar\">\n            <img \n              :src=\"message.role === 'user' ? '@/assets/images/user-avatar.png' : '@/assets/images/ai-avatar.png'\" \n              :alt=\"message.role === 'user' ? '用户' : '糖球助手'\" \n            />\n          </div>\n          <div class=\"message-bubble\">\n            <div v-if=\"message.role === 'assistant' && message.animation\" class=\"assistant-animation\">\n              {{ message.animation }}\n            </div>\n            <div class=\"message-content\" v-html=\"formatMessage(message.content)\"></div>\n          </div>\n        </div>\n        \n        <div v-if=\"isAiTyping\" class=\"message-container ai-message typing-indicator\">\n          <div class=\"message-avatar\">\n            <img src=\"@/assets/images/ai-avatar.png\" alt=\"糖球助手\" />\n          </div>\n          <div class=\"message-bubble\">\n            <div class=\"typing-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"chat-input-container\">\n        <textarea \n          v-model=\"userInput\" \n          placeholder=\"有什么想问糖球的呢~ (=^･ω･^)~\" \n          class=\"chat-input\"\n          @keydown.enter.prevent=\"sendMessage\"\n          :disabled=\"isAiTyping\"\n          ref=\"chatInput\"\n        ></textarea>\n        <div class=\"input-actions\">\n          <button class=\"emoji-btn\" @click=\"toggleEmojiPicker\">\n            😊\n          </button>\n          <button class=\"send-btn sweet-btn\" @click=\"sendMessage\" :disabled=\"!userInput.trim() || isAiTyping\">\n            发送\n          </button>\n        </div>\n        \n        <!-- 表情选择器 -->\n        <div v-if=\"showEmojiPicker\" class=\"emoji-picker\">\n          <div \n            v-for=\"emoji in emojis\" \n            :key=\"emoji\"\n            class=\"emoji-item\"\n            @click=\"addEmoji(emoji)\"\n          >{{ emoji }}</div>\n        </div>\n      </div>\n      \n      <!-- 天气查询模块 -->\n      <div v-if=\"showWeatherModule\" class=\"weather-module\">\n        <div class=\"weather-container sweet-card\">\n          <div class=\"weather-header\">\n            <h3>天气查询</h3>\n            <button class=\"close-btn\" @click=\"showWeatherModule = false\">×</button>\n          </div>\n          <div class=\"weather-content\">\n            <div class=\"weather-icon\" :class=\"weatherData.icon\">\n              <span v-if=\"weatherData.icon === 'sunny'\">☀️</span>\n              <span v-if=\"weatherData.icon === 'cloudy'\">☁️</span>\n              <span v-if=\"weatherData.icon === 'rainy'\">🌧️</span>\n              <span v-if=\"weatherData.icon === 'snowy'\">❄️</span>\n            </div>\n            <div class=\"weather-info\">\n              <div class=\"weather-location\">{{ weatherData.location }}</div>\n              <div class=\"weather-temp\">{{ weatherData.temperature }}°C</div>\n              <div class=\"weather-desc\">{{ weatherData.description }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 底部特效层 -->\n      <div class=\"effects-layer\">\n        <div v-for=\"i in 10\" :key=\"i\" class=\"star-effect\" :style=\"randomStarStyle()\"></div>\n      </div>\n    </div>\n    \n    <!-- 聊天指南 -->\n    <div class=\"chat-guide sweet-card\">\n      <h3 class=\"guide-title gradient-text\">糖球助手指南</h3>\n      <div class=\"guide-items\">\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🌤️</div>\n          <div class=\"guide-text\">问我今天的天气~</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🎵</div>\n          <div class=\"guide-text\">想听一些舒缓的音乐</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🍰</div>\n          <div class=\"guide-text\">推荐一些甜点食谱</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">📝</div>\n          <div class=\"guide-text\">帮我写一段可爱的日记</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🎮</div>\n          <div class=\"guide-text\">陪我玩个小游戏</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      messages: [\n        {\n          role: 'assistant',\n          content: '哈喽！我是糖球助手，一只会变形的糯米团子~ 今天想聊些什么呢？(✧ω✧)',\n          animation: '(糖球变成一个欢迎的波浪形状)'\n        }\n      ],\n      userInput: '',\n      isAiTyping: false,\n      showEmojiPicker: false,\n      showWeatherModule: false,\n      weatherData: {\n        location: '北京市',\n        temperature: 22,\n        description: '晴朗',\n        icon: 'sunny'\n      },\n      emojis: ['😊', '🥰', '😂', '👍', '❤️', '✨', '🎉', '🍰', '🐱', '⭐', '🌈', '🍦']\n    };\n  },\n  mounted() {\n    // 自动聚焦到输入框\n    this.$refs.chatInput.focus();\n  },\n  methods: {\n    sendMessage() {\n      if (!this.userInput.trim() || this.isAiTyping) return;\n      \n      // 添加用户消息\n      this.messages.push({\n        role: 'user',\n        content: this.userInput\n      });\n      \n      // 清空输入\n      const userMessage = this.userInput;\n      this.userInput = '';\n      \n      // 滚动到底部\n      this.scrollToBottom();\n      \n      // AI正在输入\n      this.isAiTyping = true;\n      \n      // 模拟AI响应延迟\n      setTimeout(() => {\n        this.generateAiResponse(userMessage);\n      }, 1000);\n    },\n    generateAiResponse(userMessage) {\n      // 实际应用中，这里应该调用AI API\n      let aiResponse = '';\n      let animation = '';\n      \n      // 简单的关键词匹配\n      const lowerMessage = userMessage.toLowerCase();\n      \n      if (lowerMessage.includes('天气')) {\n        aiResponse = '当前北京的天气是晴朗，气温22°C，非常适合出门玩耍哦！要看详细天气信息吗？(=^･ω･^)~';\n        animation = '(糖球变成小小的气象站)';\n        this.showWeatherModule = true;\n      } \n      else if (lowerMessage.includes('你好') || lowerMessage.includes('嗨') || lowerMessage.includes('hi')) {\n        aiResponse = '你好呀！今天过得怎么样呢？有什么开心的事情分享吗？(✧ω✧)';\n        animation = '(糖球高兴地跳起来)';\n      }\n      else if (lowerMessage.includes('难过') || lowerMessage.includes('伤心') || lowerMessage.includes('不开心')) {\n        aiResponse = '抱抱你~不要难过啦，要听听云朵猫的呼噜声吗？它一定能让你感觉好一点！🎵';\n        animation = '(糖球变成一个温暖的抱枕)';\n      }\n      else if (lowerMessage.includes('音乐') || lowerMessage.includes('歌')) {\n        aiResponse = '我推荐你听听《童话镇》，这首歌超治愈的！要我放给你听吗？(✧ω✧)';\n        animation = '(糖球变成小音符跳动)';\n      }\n      else if (lowerMessage.includes('游戏')) {\n        aiResponse = '我们可以玩猜谜语游戏！或者你想去星云农场种植魔法棉花糖吗？那里超好玩的~(=^･ω･^)~';\n        animation = '(糖球变成游戏手柄形状)';\n      }\n      else if (lowerMessage.includes('食物') || lowerMessage.includes('吃') || lowerMessage.includes('甜点')) {\n        aiResponse = '我最喜欢草莓奶油蛋糕啦！要不要试试做云朵棉花糖？只需要棉花糖、奶油和一点点魔法粉末！(✧ω✧)';\n        animation = '(糖球变成一块蛋糕)';\n      }\n      else {\n        // 默认回复\n        const defaultResponses = [\n          '呜哇~这个问题好有趣！让我想想...(=^･ω･^)~',\n          '糖球正在思考中...你喜欢粉色还是蓝色呢？我最喜欢粉蓝色渐变啦！(✧ω✧)',\n          '嘻嘻，我们可以一起去云朵上野餐吗？我会带上棉花糖和星星饼干！✨',\n          '你知道吗？云朵猫最喜欢睡在彩虹上面，因为那里特别柔软！(=^･ω･^)~',\n          '要不要听个小秘密？星星兔其实会发光，但只有在它特别开心的时候才会！(✧ω✧)'\n        ];\n        const randomIndex = Math.floor(Math.random() * defaultResponses.length);\n        aiResponse = defaultResponses[randomIndex];\n        \n        const animations = [\n          '(糖球好奇地歪头)',\n          '(糖球变成一个问号形状)',\n          '(糖球开心地旋转)',\n          '(糖球眨眨眼睛)',\n          '(糖球变成一颗星星)'\n        ];\n        animation = animations[randomIndex];\n      }\n      \n      // 添加AI回复\n      this.messages.push({\n        role: 'assistant',\n        content: aiResponse,\n        animation: animation\n      });\n      \n      // AI输入完成\n      this.isAiTyping = false;\n      \n      // 滚动到底部\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    formatMessage(text) {\n      // 使HTML中的换行符生效\n      return text.replace(/\\n/g, '<br>');\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const container = this.$refs.chatMessages;\n        container.scrollTop = container.scrollHeight;\n      });\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.userInput += emoji;\n      this.showEmojiPicker = false;\n      this.$refs.chatInput.focus();\n    },\n    randomStarStyle() {\n      const size = 5 + Math.random() * 15; // 5px到20px大小\n      const top = Math.random() * 100; // 0%到100%顶部位置\n      const left = Math.random() * 100; // 0%到100%左侧位置\n      const duration = 2 + Math.random() * 3; // 2-5秒动画时间\n      const delay = Math.random() * 5; // 0-5秒延迟\n      \n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        top: `${top}%`,\n        left: `${left}%`,\n        animationDuration: `${duration}s`,\n        animationDelay: `${delay}s`\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-assistant {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 20px;\n}\n\n/* 聊天容器 */\n.chat-container {\n  height: 70vh;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 2px solid var(--primary-purple);\n}\n\n.chat-title {\n  font-size: 1.8rem;\n}\n\n.assistant-avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: var(--primary-yellow);\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mochi-character {\n  width: 50px;\n  height: 50px;\n  background-color: white;\n  border-radius: 50%;\n  transition: all 0.5s ease;\n}\n\n.mochi-character.talking {\n  animation: squish 1s infinite alternate;\n}\n\n@keyframes squish {\n  0% { border-radius: 50%; }\n  50% { \n    border-radius: 35% 65% 65% 35% / 35% 35% 65% 65%;\n    transform: rotate(10deg); \n  }\n  100% { \n    border-radius: 65% 35% 35% 65% / 65% 65% 35% 35%;\n    transform: rotate(-10deg);\n  }\n}\n\n.chat-messages {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.message-container {\n  display: flex;\n  gap: 10px;\n  max-width: 80%;\n}\n\n.user-message {\n  align-self: flex-end;\n  flex-direction: row-reverse;\n}\n\n.ai-message {\n  align-self: flex-start;\n}\n\n.message-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.message-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.message-bubble {\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n}\n\n.user-message .message-bubble {\n  background-color: var(--primary-pink);\n  color: var(--text-light);\n  border-bottom-right-radius: 0;\n}\n\n.ai-message .message-bubble {\n  background-color: var(--primary-purple);\n  border-bottom-left-radius: 0;\n}\n\n.message-content {\n  word-break: break-word;\n  line-height: 1.5;\n}\n\n.assistant-animation {\n  font-style: italic;\n  margin-bottom: 8px;\n  opacity: 0.8;\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n}\n\n/* 输入区域 */\n.chat-input-container {\n  padding: 20px;\n  border-top: 2px solid var(--primary-purple);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  position: relative;\n}\n\n.chat-input {\n  width: 100%;\n  min-height: 60px;\n  padding: 15px;\n  border: 2px solid var(--primary-purple);\n  border-radius: var(--border-radius);\n  resize: none;\n  font-family: var(--font-primary);\n}\n\n.chat-input:focus {\n  outline: none;\n  border-color: var(--primary-pink);\n}\n\n.input-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n.emoji-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--primary-purple);\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n\n.send-btn {\n  padding: 10px 20px;\n}\n\n.emoji-picker {\n  position: absolute;\n  bottom: 80px;\n  left: 20px;\n  width: 250px;\n  padding: 10px;\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 10px;\n  z-index: 10;\n}\n\n.emoji-item {\n  width: 100%;\n  aspect-ratio: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  transition: all 0.2s ease;\n}\n\n.emoji-item:hover {\n  background-color: var(--primary-purple);\n  transform: scale(1.1);\n}\n\n/* 输入提示动画 */\n.typing-indicator {\n  width: auto;\n}\n\n.typing-dots {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  height: 20px;\n}\n\n.typing-dots span {\n  width: 8px;\n  height: 8px;\n  background-color: var(--text-secondary);\n  border-radius: 50%;\n  animation: typingAnimation 1.5s infinite ease-in-out;\n}\n\n.typing-dots span:nth-child(1) {\n  animation-delay: 0s;\n}\n\n.typing-dots span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-dots span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typingAnimation {\n  0%, 60%, 100% { transform: translateY(0); }\n  30% { transform: translateY(-10px); }\n}\n\n/* 天气模块 */\n.weather-module {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n}\n\n.weather-container {\n  width: 300px;\n  padding: 20px;\n  background-color: white;\n}\n\n.weather-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.close-btn {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: var(--primary-purple);\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n\n.weather-content {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.weather-icon {\n  width: 80px;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 3rem;\n}\n\n.weather-info {\n  flex: 1;\n}\n\n.weather-location {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.weather-temp {\n  font-size: 1.8rem;\n  margin-bottom: 5px;\n}\n\n.weather-desc {\n  color: var(--text-secondary);\n}\n\n/* 特效层 */\n.effects-layer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  z-index: -1;\n}\n\n.star-effect {\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 50%;\n  opacity: 0;\n  animation: twinkle 5s infinite;\n}\n\n@keyframes twinkle {\n  0%, 100% { opacity: 0; transform: scale(0.5); }\n  50% { opacity: 1; transform: scale(1); }\n}\n\n/* 聊天指南 */\n.chat-guide {\n  padding: 20px;\n  height: fit-content;\n}\n\n.guide-title {\n  font-size: 1.3rem;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.guide-items {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.guide-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: var(--bg-secondary);\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.guide-item:hover {\n  background-color: var(--primary-purple);\n  transform: translateY(-2px);\n}\n\n.guide-icon {\n  font-size: 1.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .chat-assistant {\n    grid-template-columns: 1fr;\n  }\n  \n  .chat-container {\n    height: 80vh;\n  }\n  \n  .message-container {\n    max-width: 90%;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}