{"ast":null,"code":"import { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\nimport EmojiPicker from './EmojiPicker.vue';\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    EmojiPicker\n  },\n  data() {\n    return {\n      userInput: '',\n      isExpanded: false,\n      showEmojiPicker: false\n    };\n  },\n  computed: {\n    ...mapState('chat', ['weatherInfo']),\n    ...mapGetters('chat', ['messages', 'isTyping', 'currentEmotion']),\n    soundEnabled() {\n      return this.$store.state.chat.soundEnabled;\n    }\n  },\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'clearChat', 'checkWeather']),\n    ...mapMutations('chat', ['setTyping', 'addMessage', 'toggleSound']),\n    toggleChat() {\n      this.isExpanded = !this.isExpanded;\n      if (this.isExpanded) {\n        this.$nextTick(() => {\n          this.$refs.chatInput.focus();\n          this.scrollToBottom();\n        });\n      }\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.userInput += emoji;\n      this.showEmojiPicker = false;\n      this.$refs.chatInput.focus();\n    },\n    async handleSendMessage() {\n      if (!this.userInput.trim()) return;\n      const userMessage = this.userInput.trim();\n      this.userInput = '';\n\n      // 添加用户消息到聊天窗口\n      this.addMessage({\n        content: userMessage,\n        sender: 'user'\n      });\n      this.scrollToBottom();\n      this.showEmojiPicker = false;\n\n      // 检查是否有天气相关的查询\n      if (userMessage.includes('天气') || userMessage.includes('weather')) {\n        await this.checkWeather();\n      }\n\n      // 发送消息到store处理\n      await this.sendMessage(userMessage);\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    formatMessage(content) {\n      // 转换URL为可点击链接\n      const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n      return content.replace(urlRegex, url => {\n        return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n      });\n    },\n    scrollToBottom() {\n      if (this.$refs.messagesContainer) {\n        this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n      }\n    },\n    getWeatherEmoji(description) {\n      if (!description) return '🌦️';\n      const weatherMap = {\n        '晴': '☀️',\n        '多云': '⛅',\n        '阴': '☁️',\n        '雨': '🌧️',\n        '雪': '❄️',\n        '雾': '🌫️',\n        '霾': '😷',\n        '风': '🌬️',\n        '雷': '⚡',\n        '阵雨': '🌦️',\n        '雷阵雨': '⛈️'\n      };\n      for (const [key, emoji] of Object.entries(weatherMap)) {\n        if (description.includes(key)) {\n          return emoji;\n        }\n      }\n      return '🌦️'; // 默认天气图标\n    }\n  },\n  watch: {\n    messages() {\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    }\n  },\n  mounted() {\n    // 页面加载时显示欢迎消息\n    if (this.messages.length === 0) {\n      this.addMessage({\n        content: '你好呀！我是梦梦，你的甜梦星球助手！有什么可以帮助你的吗？',\n        sender: 'assistant',\n        emotion: 'happy'\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","mapMutations","EmojiPicker","name","components","data","userInput","isExpanded","showEmojiPicker","computed","soundEnabled","$store","state","chat","methods","toggleChat","$nextTick","$refs","chatInput","focus","scrollToBottom","toggleEmojiPicker","addEmoji","emoji","handleSendMessage","trim","userMessage","addMessage","content","sender","includes","checkWeather","sendMessage","formatMessage","urlRegex","replace","url","messagesContainer","scrollTop","scrollHeight","getWeatherEmoji","description","weatherMap","key","Object","entries","watch","messages","mounted","length","emotion"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\components\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-assistant\" :class=\"{ expanded: isExpanded }\">\n    <div class=\"chat-header\" @click=\"toggleChat\">\n      <div class=\"assistant-avatar\">\n        <div class=\"avatar-container\">\n          <div class=\"avatar-face\" :class=\"currentEmotion\">\n            <div class=\"eyes\">\n              <div class=\"eye\"></div>\n              <div class=\"eye\"></div>\n            </div>\n            <div class=\"mouth\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"assistant-name\">梦梦助手</div>\n    </div>\n\n    <div class=\"chat-window\" v-if=\"isExpanded\">\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div \n          v-for=\"(message, index) in messages\" \n          :key=\"index\" \n          :class=\"['message', message.sender]\"\n        >\n          <div v-if=\"message.sender === 'assistant'\" class=\"message-avatar\">\n            <div class=\"avatar-mini-face\" :class=\"message.emotion || 'happy'\"></div>\n          </div>\n          <div class=\"message-content\" v-html=\"formatMessage(message.content)\"></div>\n          <div v-if=\"message.sender === 'user'\" class=\"message-avatar user-avatar\">\n            <div class=\"user-icon\">👤</div>\n          </div>\n        </div>\n        <div class=\"typing-indicator\" v-if=\"isTyping\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      <div class=\"weather-info\" v-if=\"weatherInfo.temp\">\n        <div class=\"weather-icon\">{{ getWeatherEmoji(weatherInfo.description) }}</div>\n        <div class=\"weather-details\">\n          <div class=\"weather-location\">{{ weatherInfo.city }}</div>\n          <div class=\"weather-temp\">{{ weatherInfo.temp }}°C {{ weatherInfo.description }}</div>\n        </div>\n      </div>\n\n      <div class=\"chat-input\">\n        <input \n          type=\"text\" \n          v-model=\"userInput\" \n          @keyup.enter=\"sendMessage\"\n          placeholder=\"和梦梦聊天吧...\"\n          ref=\"chatInput\"\n        >\n        <div class=\"chat-actions\">\n          <button class=\"emoji-btn\" @click=\"toggleEmojiPicker\">😊</button>\n          <button class=\"send-btn\" @click=\"sendMessage\">发送</button>\n        </div>\n        <emoji-picker \n          :is-visible=\"showEmojiPicker\" \n          @emoji-selected=\"addEmoji\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\nimport EmojiPicker from './EmojiPicker.vue';\n\nexport default {\n  name: 'ChatAssistant',\n  components: {\n    EmojiPicker\n  },\n  data() {\n    return {\n      userInput: '',\n      isExpanded: false,\n      showEmojiPicker: false\n    };\n  },\n  computed: {\n    ...mapState('chat', ['weatherInfo']),\n    ...mapGetters('chat', [\n      'messages',\n      'isTyping',\n      'currentEmotion'\n    ]),\n    soundEnabled() {\n      return this.$store.state.chat.soundEnabled;\n    }\n  },\n  methods: {\n    ...mapActions('chat', [\n      'sendMessage',\n      'clearChat',\n      'checkWeather'\n    ]),\n    ...mapMutations('chat', [\n      'setTyping',\n      'addMessage',\n      'toggleSound'\n    ]),\n    toggleChat() {\n      this.isExpanded = !this.isExpanded;\n      if (this.isExpanded) {\n        this.$nextTick(() => {\n          this.$refs.chatInput.focus();\n          this.scrollToBottom();\n        });\n      }\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.userInput += emoji;\n      this.showEmojiPicker = false;\n      this.$refs.chatInput.focus();\n    },\n    async handleSendMessage() {\n      if (!this.userInput.trim()) return;\n\n      const userMessage = this.userInput.trim();\n      this.userInput = '';\n      \n      // 添加用户消息到聊天窗口\n      this.addMessage({\n        content: userMessage,\n        sender: 'user'\n      });\n      \n      this.scrollToBottom();\n      this.showEmojiPicker = false;\n      \n      // 检查是否有天气相关的查询\n      if (userMessage.includes('天气') || userMessage.includes('weather')) {\n        await this.checkWeather();\n      }\n      \n      // 发送消息到store处理\n      await this.sendMessage(userMessage);\n      \n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    formatMessage(content) {\n      // 转换URL为可点击链接\n      const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n      return content.replace(urlRegex, url => {\n        return `<a href=\"${url}\" target=\"_blank\">${url}</a>`;\n      });\n    },\n    scrollToBottom() {\n      if (this.$refs.messagesContainer) {\n        this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n      }\n    },\n    getWeatherEmoji(description) {\n      if (!description) return '🌦️';\n      \n      const weatherMap = {\n        '晴': '☀️',\n        '多云': '⛅',\n        '阴': '☁️',\n        '雨': '🌧️',\n        '雪': '❄️',\n        '雾': '🌫️',\n        '霾': '😷',\n        '风': '🌬️',\n        '雷': '⚡',\n        '阵雨': '🌦️',\n        '雷阵雨': '⛈️'\n      };\n      \n      for (const [key, emoji] of Object.entries(weatherMap)) {\n        if (description.includes(key)) {\n          return emoji;\n        }\n      }\n      \n      return '🌦️'; // 默认天气图标\n    }\n  },\n  watch: {\n    messages() {\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    }\n  },\n  mounted() {\n    // 页面加载时显示欢迎消息\n    if (this.messages.length === 0) {\n      this.addMessage({\n        content: '你好呀！我是梦梦，你的甜梦星球助手！有什么可以帮助你的吗？',\n        sender: 'assistant',\n        emotion: 'happy'\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-assistant {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 60px;\n  transition: all 0.3s ease;\n  z-index: 1000;\n  border-radius: 25px;\n  box-shadow: 0 5px 25px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  background: #fff;\n}\n\n.chat-assistant.expanded {\n  width: 350px;\n  height: 500px;\n  border-radius: 15px;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: linear-gradient(135deg, #ffd1dc, #fcb1d0);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  height: 60px;\n}\n\n.assistant-avatar {\n  width: 36px;\n  height: 36px;\n  position: relative;\n}\n\n.avatar-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.avatar-face {\n  width: 100%;\n  height: 100%;\n  background-color: #ffefef;\n  border-radius: 50%;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.eyes {\n  position: absolute;\n  top: 35%;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-around;\n  padding: 0 5px;\n}\n\n.eye {\n  width: 7px;\n  height: 7px;\n  background-color: #333;\n  border-radius: 50%;\n}\n\n.mouth {\n  position: absolute;\n  bottom: 25%;\n  left: 25%;\n  right: 25%;\n  height: 4px;\n  background-color: #333;\n  border-radius: 10px;\n}\n\n.avatar-face.happy .mouth {\n  border-radius: 0 0 10px 10px;\n  height: 6px;\n  bottom: 20%;\n}\n\n.avatar-face.sad .mouth {\n  border-radius: 10px 10px 0 0;\n  height: 6px;\n  bottom: 20%;\n}\n\n.avatar-face.surprised .mouth {\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.assistant-name {\n  margin-left: 10px;\n  font-weight: 600;\n  color: #fff;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.chat-window {\n  height: calc(100% - 60px);\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 15px;\n  background-color: #f9f9f9;\n}\n\n.message {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: flex-start;\n  max-width: 85%;\n}\n\n.message.user {\n  margin-left: auto;\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  width: 30px;\n  height: 30px;\n  margin: 0 8px;\n  flex-shrink: 0;\n}\n\n.avatar-mini-face {\n  width: 100%;\n  height: 100%;\n  background-color: #ffefef;\n  border-radius: 50%;\n  position: relative;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.user-avatar {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.user-icon {\n  font-size: 20px;\n}\n\n.message-content {\n  padding: 8px 12px;\n  border-radius: 18px;\n  background-color: #fff;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  line-height: 1.4;\n  font-size: 14px;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.message.assistant .message-content {\n  background-color: #f0f0f0;\n  border-top-left-radius: 4px;\n}\n\n.message.user .message-content {\n  background-color: #fcb1d0;\n  color: #fff;\n  border-top-right-radius: 4px;\n}\n\n.typing-indicator {\n  display: inline-flex;\n  padding: 8px 12px;\n  background-color: #f0f0f0;\n  border-radius: 18px;\n  margin-bottom: 10px;\n}\n\n.typing-indicator span {\n  width: 8px;\n  height: 8px;\n  background-color: #999;\n  border-radius: 50%;\n  margin: 0 2px;\n  display: inline-block;\n  animation: typingAnimation 1s infinite ease-in-out;\n}\n\n.typing-indicator span:nth-child(1) {\n  animation-delay: 0s;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typingAnimation {\n  0%, 60%, 100% {\n    transform: translateY(0);\n  }\n  30% {\n    transform: translateY(-5px);\n  }\n}\n\n.weather-info {\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  background-color: #eaf6ff;\n  border-top: 1px solid #e0e0e0;\n}\n\n.weather-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.weather-details {\n  flex: 1;\n}\n\n.weather-location {\n  font-weight: 600;\n  font-size: 14px;\n}\n\n.weather-temp {\n  font-size: 12px;\n  color: #666;\n}\n\n.chat-input {\n  display: flex;\n  padding: 10px;\n  background-color: #fff;\n  border-top: 1px solid #e0e0e0;\n  position: relative;\n}\n\n.chat-input input {\n  flex: 1;\n  border: 1px solid #e0e0e0;\n  border-radius: 20px;\n  padding: 8px 15px;\n  outline: none;\n  transition: border-color 0.3s;\n}\n\n.chat-input input:focus {\n  border-color: #fcb1d0;\n}\n\n.chat-actions {\n  display: flex;\n  margin-left: 8px;\n}\n\n.chat-actions button {\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  margin-left: 5px;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.emoji-btn {\n  background-color: #f5f5f5;\n  font-size: 20px;\n}\n\n.send-btn {\n  background-color: #fcb1d0;\n  color: white;\n  font-size: 14px;\n}\n\n.emoji-btn:hover {\n  background-color: #e0e0e0;\n}\n\n.send-btn:hover {\n  background-color: #ff9ab7;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}