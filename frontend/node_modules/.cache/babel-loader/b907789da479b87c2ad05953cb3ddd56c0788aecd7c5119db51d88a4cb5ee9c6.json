{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xfyun from '@/services/xfyun';\nimport weather from '@/services/weather';\nimport chat from '@/services/chat';\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true,\n  lastWeatherQuery: null\n};\nconst getters = {\n  getAllMessages: state => state.messages,\n  getIsTyping: state => state.isTyping,\n  getCurrentEmotion: state => state.currentEmotion,\n  getWeatherInfo: state => state.weatherInfo,\n  getSoundEnabled: state => state.soundEnabled,\n  getLastWeatherQuery: state => state.lastWeatherQuery\n};\nconst mutations = {\n  ADD_MESSAGE(state, message) {\n    state.messages.push({\n      id: Date.now(),\n      timestamp: new Date(),\n      ...message\n    });\n  },\n  SET_TYPING(state, status) {\n    state.isTyping = status;\n  },\n  SET_EMOTION(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  SET_WEATHER_INFO(state, info) {\n    state.weatherInfo = info;\n    if (info) {\n      state.lastWeatherQuery = {\n        cityName: info.cityName,\n        timestamp: Date.now()\n      };\n    }\n  },\n  TOGGLE_SOUND(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  CLEAR_MESSAGES(state) {\n    state.messages = [];\n  }\n};\nconst actions = {\n  async sendMessage({\n    commit,\n    state\n  }, text) {\n    // 添加用户消息\n    commit('ADD_MESSAGE', {\n      type: 'user',\n      text\n    });\n\n    // 设置正在输入状态\n    commit('SET_TYPING', true);\n    try {\n      // 分析情绪\n      const emotion = await chat.analyzeEmotion(text);\n      commit('SET_EMOTION', emotion);\n\n      // 生成回复\n      const response = await chat.generateResponse(text, emotion);\n\n      // 如果是天气查询，更新天气信息\n      if (response.type === 'weather' && response.data) {\n        commit('SET_WEATHER_INFO', response.data);\n      }\n\n      // 添加助手回复\n      commit('ADD_MESSAGE', {\n        type: 'assistant',\n        ...response\n      });\n    } catch (error) {\n      console.error('发送消息失败:', error);\n      commit('ADD_MESSAGE', {\n        type: 'error',\n        text: '抱歉，我现在有点累了，待会再聊吧~ 😴'\n      });\n    } finally {\n      commit('SET_TYPING', false);\n    }\n  },\n  async initializeWeather({\n    commit\n  }) {\n    try {\n      console.log('初始化天气信息');\n      const weatherData = await weather.getLocationWeather();\n      if (weatherData) {\n        commit('SET_WEATHER_INFO', weatherData);\n        // 添加欢迎消息和天气信息\n        commit('ADD_MESSAGE', {\n          type: 'assistant',\n          text: `欢迎回来！让我告诉你${weatherData.cityName}的天气情况~`\n        });\n        commit('ADD_MESSAGE', {\n          type: 'weather',\n          text: weather.generateWeatherDescription(weatherData),\n          data: weatherData\n        });\n      }\n    } catch (error) {\n      console.error('初始化天气失败:', error);\n    }\n  },\n  clearChat({\n    commit\n  }) {\n    commit('CLEAR_MESSAGES');\n    commit('SET_WEATHER_INFO', null);\n  }\n};\n\n// 根据用户输入和情绪生成互动动作\nfunction generateActions(text, emotion) {\n  const actions = [];\n\n  // 根据情绪添加安抚动作\n  if (emotion === 'sad' || emotion === 'worried') {\n    actions.push({\n      type: 'sound',\n      sound: 'purr'\n    });\n    actions.push({\n      type: 'animation',\n      name: 'bounce'\n    });\n  }\n\n  // 根据关键词添加特定动作\n  if (text.includes('跳舞')) {\n    actions.push({\n      type: 'animation',\n      name: 'bounce'\n    });\n  }\n  if (text.includes('音乐') || text.includes('听歌')) {\n    actions.push({\n      type: 'sound',\n      sound: 'music'\n    });\n  }\n  if (text.includes('下雨')) {\n    actions.push({\n      type: 'sound',\n      sound: 'rain'\n    });\n  }\n  return actions.length > 0 ? actions : null;\n}\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["xfyun","weather","chat","state","messages","isTyping","currentEmotion","weatherInfo","soundEnabled","lastWeatherQuery","getters","getAllMessages","getIsTyping","getCurrentEmotion","getWeatherInfo","getSoundEnabled","getLastWeatherQuery","mutations","ADD_MESSAGE","message","push","id","Date","now","timestamp","SET_TYPING","status","SET_EMOTION","emotion","SET_WEATHER_INFO","info","cityName","TOGGLE_SOUND","CLEAR_MESSAGES","actions","sendMessage","commit","text","type","analyzeEmotion","response","generateResponse","data","error","console","initializeWeather","log","weatherData","getLocationWeather","generateWeatherDescription","clearChat","generateActions","sound","name","includes","length","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import xfyun from '@/services/xfyun';\r\nimport weather from '@/services/weather';\r\nimport chat from '@/services/chat';\r\n\r\nconst state = {\r\n  messages: [],\r\n  isTyping: false,\r\n  currentEmotion: 'neutral',\r\n  weatherInfo: null,\r\n  soundEnabled: true,\r\n  lastWeatherQuery: null\r\n};\r\n\r\nconst getters = {\r\n  getAllMessages: state => state.messages,\r\n  getIsTyping: state => state.isTyping,\r\n  getCurrentEmotion: state => state.currentEmotion,\r\n  getWeatherInfo: state => state.weatherInfo,\r\n  getSoundEnabled: state => state.soundEnabled,\r\n  getLastWeatherQuery: state => state.lastWeatherQuery\r\n};\r\n\r\nconst mutations = {\r\n  ADD_MESSAGE(state, message) {\r\n    state.messages.push({\r\n      id: Date.now(),\r\n      timestamp: new Date(),\r\n      ...message\r\n    });\r\n  },\r\n  SET_TYPING(state, status) {\r\n    state.isTyping = status;\r\n  },\r\n  SET_EMOTION(state, emotion) {\r\n    state.currentEmotion = emotion;\r\n  },\r\n  SET_WEATHER_INFO(state, info) {\r\n    state.weatherInfo = info;\r\n    if (info) {\r\n      state.lastWeatherQuery = {\r\n        cityName: info.cityName,\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n  },\r\n  TOGGLE_SOUND(state) {\r\n    state.soundEnabled = !state.soundEnabled;\r\n  },\r\n  CLEAR_MESSAGES(state) {\r\n    state.messages = [];\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  async sendMessage({ commit, state }, text) {\r\n    // 添加用户消息\r\n    commit('ADD_MESSAGE', {\r\n      type: 'user',\r\n      text\r\n    });\r\n\r\n    // 设置正在输入状态\r\n    commit('SET_TYPING', true);\r\n\r\n    try {\r\n      // 分析情绪\r\n      const emotion = await chat.analyzeEmotion(text);\r\n      commit('SET_EMOTION', emotion);\r\n\r\n      // 生成回复\r\n      const response = await chat.generateResponse(text, emotion);\r\n\r\n      // 如果是天气查询，更新天气信息\r\n      if (response.type === 'weather' && response.data) {\r\n        commit('SET_WEATHER_INFO', response.data);\r\n      }\r\n\r\n      // 添加助手回复\r\n      commit('ADD_MESSAGE', {\r\n        type: 'assistant',\r\n        ...response\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('发送消息失败:', error);\r\n      commit('ADD_MESSAGE', {\r\n        type: 'error',\r\n        text: '抱歉，我现在有点累了，待会再聊吧~ 😴'\r\n      });\r\n    } finally {\r\n      commit('SET_TYPING', false);\r\n    }\r\n  },\r\n\r\n  async initializeWeather({ commit }) {\r\n    try {\r\n      console.log('初始化天气信息');\r\n      const weatherData = await weather.getLocationWeather();\r\n      if (weatherData) {\r\n        commit('SET_WEATHER_INFO', weatherData);\r\n        // 添加欢迎消息和天气信息\r\n        commit('ADD_MESSAGE', {\r\n          type: 'assistant',\r\n          text: `欢迎回来！让我告诉你${weatherData.cityName}的天气情况~`,\r\n        });\r\n        commit('ADD_MESSAGE', {\r\n          type: 'weather',\r\n          text: weather.generateWeatherDescription(weatherData),\r\n          data: weatherData\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('初始化天气失败:', error);\r\n    }\r\n  },\r\n\r\n  clearChat({ commit }) {\r\n    commit('CLEAR_MESSAGES');\r\n    commit('SET_WEATHER_INFO', null);\r\n  }\r\n};\r\n\r\n// 根据用户输入和情绪生成互动动作\r\nfunction generateActions(text, emotion) {\r\n  const actions = [];\r\n\r\n  // 根据情绪添加安抚动作\r\n  if (emotion === 'sad' || emotion === 'worried') {\r\n    actions.push({ type: 'sound', sound: 'purr' });\r\n    actions.push({ type: 'animation', name: 'bounce' });\r\n  }\r\n\r\n  // 根据关键词添加特定动作\r\n  if (text.includes('跳舞')) {\r\n    actions.push({ type: 'animation', name: 'bounce' });\r\n  }\r\n  if (text.includes('音乐') || text.includes('听歌')) {\r\n    actions.push({ type: 'sound', sound: 'music' });\r\n  }\r\n  if (text.includes('下雨')) {\r\n    actions.push({ type: 'sound', sound: 'rain' });\r\n  }\r\n\r\n  return actions.length > 0 ? actions : null;\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}