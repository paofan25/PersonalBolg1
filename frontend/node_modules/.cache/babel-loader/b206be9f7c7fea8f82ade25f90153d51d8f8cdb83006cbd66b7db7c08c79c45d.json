{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { Message, Lock } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'LoginView',\n  components: {\n    Message,\n    Lock\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const formRef = ref(null);\n    const isLoading = ref(false);\n    const loginForm = ref({\n      email: '',\n      password: ''\n    });\n    const rules = {\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码至少6个字符',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      if (!formRef.value) return;\n      try {\n        await formRef.value.validate();\n        isLoading.value = true;\n        await store.dispatch('auth/login', loginForm.value);\n        ElMessage.success('登录成功');\n        router.push('/');\n      } catch (error) {\n        console.error('登录失败:', error);\n        ElMessage.error(error.message || '登录失败，请重试');\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    return {\n      formRef,\n      loginForm,\n      isLoading,\n      rules,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","Message","Lock","ElMessage","name","components","setup","store","router","formRef","isLoading","loginForm","email","password","rules","required","message","trigger","type","min","handleLogin","value","validate","dispatch","success","push","error","console"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <template #header>\n        <h2 class=\"login-title\">登录</h2>\n      </template>\n      \n      <el-form \n        ref=\"formRef\"\n        :model=\"loginForm\"\n        :rules=\"rules\"\n        label-position=\"top\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input \n            v-model=\"loginForm.email\"\n            placeholder=\"请输入邮箱\"\n          >\n            <template #prefix>\n              <el-icon><Message /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          >\n            <template #prefix>\n              <el-icon><Lock /></el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            native-type=\"submit\"\n            :loading=\"isLoading\"\n            class=\"login-button\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n      \n      <div class=\"login-links\">\n        <router-link to=\"/forgot-password\">忘记密码？</router-link>\n        <router-link to=\"/register\">注册新账号</router-link>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { Message, Lock } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'LoginView',\n  components: {\n    Message,\n    Lock\n  },\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const formRef = ref(null)\n    const isLoading = ref(false)\n    \n    const loginForm = ref({\n      email: '',\n      password: ''\n    })\n    \n    const rules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码至少6个字符', trigger: 'blur' }\n      ]\n    }\n    \n    const handleLogin = async () => {\n      if (!formRef.value) return\n      \n      try {\n        await formRef.value.validate()\n        isLoading.value = true\n        await store.dispatch('auth/login', loginForm.value)\n        ElMessage.success('登录成功')\n        router.push('/')\n      } catch (error) {\n        console.error('登录失败:', error)\n        ElMessage.error(error.message || '登录失败，请重试')\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    return {\n      formRef,\n      loginForm,\n      isLoading,\n      rules,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--background-color);\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  margin: 20px;\n}\n\n.login-title {\n  text-align: center;\n  color: var(--text-color);\n  margin: 0;\n}\n\n.login-button {\n  width: 100%;\n}\n\n.login-links {\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n}\n\n.login-links a {\n  color: var(--primary-color);\n  text-decoration: none;\n}\n\n.login-links a:hover {\n  text-decoration: underline;\n}\n\n:deep(.el-input__prefix) {\n  display: flex;\n  align-items: center;\n}\n</style>"],"mappings":";AA2DA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,OAAO,EAAEC,IAAG,QAAS,yBAAwB;AACtD,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVJ,OAAO;IACPC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIR,QAAQ,CAAC;IACvB,MAAMS,MAAK,GAAIR,SAAS,CAAC;IACzB,MAAMS,OAAM,GAAIX,GAAG,CAAC,IAAI;IACxB,MAAMY,SAAQ,GAAIZ,GAAG,CAAC,KAAK;IAE3B,MAAMa,SAAQ,GAAIb,GAAG,CAAC;MACpBc,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,KAAI,GAAI;MACZF,KAAK,EAAE,CACL;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,IAAI,EAAE,OAAO;QAAEF,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,EACzD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEE,GAAG,EAAE,CAAC;QAAEH,OAAO,EAAE,UAAU;QAAEC,OAAO,EAAE;MAAO;IAEnD;IAEA,MAAMG,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACX,OAAO,CAACY,KAAK,EAAE;MAEpB,IAAI;QACF,MAAMZ,OAAO,CAACY,KAAK,CAACC,QAAQ,CAAC;QAC7BZ,SAAS,CAACW,KAAI,GAAI,IAAG;QACrB,MAAMd,KAAK,CAACgB,QAAQ,CAAC,YAAY,EAAEZ,SAAS,CAACU,KAAK;QAClDlB,SAAS,CAACqB,OAAO,CAAC,MAAM;QACxBhB,MAAM,CAACiB,IAAI,CAAC,GAAG;MACjB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;QAC5BvB,SAAS,CAACuB,KAAK,CAACA,KAAK,CAACV,OAAM,IAAK,UAAU;MAC7C,UAAU;QACRN,SAAS,CAACW,KAAI,GAAI,KAAI;MACxB;IACF;IAEA,OAAO;MACLZ,OAAO;MACPE,SAAS;MACTD,SAAS;MACTI,KAAK;MACLM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}