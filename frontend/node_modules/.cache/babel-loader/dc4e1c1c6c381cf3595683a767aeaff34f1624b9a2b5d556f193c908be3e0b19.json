{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport weatherService from '@/services/weather';\nimport xfyunService from '@/services/xfyun';\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion\n};\nconst mutations = {\n  addMessage(state, message) {\n    state.messages.push(message);\n  },\n  setTyping(state, isTyping) {\n    state.isTyping = isTyping;\n  },\n  setEmotion(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  setWeatherInfo(state, info) {\n    state.weatherInfo = info;\n  },\n  toggleSound(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  clearMessages(state) {\n    state.messages = [];\n  }\n};\nconst actions = {\n  async sendMessage({\n    commit,\n    state\n  }, {\n    text,\n    type = 'user'\n  }) {\n    try {\n      // 添加用户消息\n      commit('addMessage', {\n        text,\n        type\n      });\n      if (type === 'user') {\n        commit('setTyping', true);\n\n        // 分析情绪\n        const emotionResult = await xfyunService.analyzeEmotion(text);\n        commit('setEmotion', emotionResult);\n        console.log('情绪分析结果:', emotionResult);\n\n        // 检查是否是天气查询\n        const weatherPattern = /(查|问|看|怎么样|如何|天气)/;\n        const cityPattern = /(北京|上海|南京|广州|深圳|杭州|成都|武汉|西安|重庆|天津|苏州|南昌|长沙|郑州|济南|青岛|大连|沈阳|哈尔滨|长春|太原|石家庄|呼和浩特|银川|西宁|兰州|乌鲁木齐|拉萨|成都|贵阳|昆明|南宁|海口|福州|厦门|台北|香港|澳门)(?:的)?(?:天气|气温|温度|下雨|多少度|冷|热)?/;\n        let response = '';\n        const cityMatch = text.match(cityPattern);\n        if (weatherPattern.test(text) && cityMatch) {\n          console.log('[聊天] 检测到天气查询，城市:', cityMatch[1]);\n\n          // 根据城市名获取天气\n          const cityInfo = weatherService.parseCityName(cityMatch[1]);\n          if (cityInfo) {\n            console.log('[聊天] 匹配到城市信息:', cityInfo);\n            const weatherInfo = await weatherService.switchCity(cityInfo.id);\n            if (weatherInfo) {\n              response = weatherService.generateWeatherDescription(weatherInfo);\n            } else {\n              response = '抱歉，获取天气信息失败了，请稍后再试~';\n            }\n          } else {\n            response = '抱歉，目前我只能查询南京、上海和北京的天气信息哦~';\n          }\n        } else {\n          // 根据情绪生成回复\n          response = generateResponse(text, emotionResult);\n        }\n\n        // 添加助手回复\n        setTimeout(() => {\n          commit('setTyping', false);\n          commit('addMessage', {\n            text: response,\n            type: 'assistant'\n          });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('发送消息出错:', error);\n      commit('setTyping', false);\n      commit('addMessage', {\n        text: '抱歉，我遇到了一些问题，请稍后再试~',\n        type: 'assistant'\n      });\n    }\n  }\n};\n\n// 根据情绪生成回复\nfunction generateResponse(text, emotion) {\n  const responses = {\n    positive: ['真好啊！我也感觉很开心呢~ 😊', '你的心情真不错，让我也变得愉快起来了！✨', '太棒了！保持这种好心情哦~ 🌟'],\n    negative: ['别担心，事情总会变好的~ 🌈', '我在这里陪着你呢，要加油哦！💪', '让我们一起想想开心的事吧~ 🌺'],\n    neutral: ['嗯嗯，我明白你的意思~ 🎈', '确实是这样呢！💫', '让我们继续聊下去吧~ ⭐']\n  };\n  const defaultResponses = responses[emotion] || responses.neutral;\n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};","map":{"version":3,"names":["weatherService","xfyunService","state","messages","isTyping","currentEmotion","weatherInfo","soundEnabled","getters","mutations","addMessage","message","push","setTyping","setEmotion","emotion","setWeatherInfo","info","toggleSound","clearMessages","actions","sendMessage","commit","text","type","emotionResult","analyzeEmotion","console","log","weatherPattern","cityPattern","response","cityMatch","match","test","cityInfo","parseCityName","switchCity","id","generateWeatherDescription","generateResponse","setTimeout","error","responses","positive","negative","neutral","defaultResponses","Math","floor","random","length","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/chat.js"],"sourcesContent":["import weatherService from '@/services/weather';\nimport xfyunService from '@/services/xfyun';\n\nconst state = {\n  messages: [],\n  isTyping: false,\n  currentEmotion: 'neutral',\n  weatherInfo: null,\n  soundEnabled: true\n};\n\nconst getters = {\n  messages: state => state.messages,\n  isTyping: state => state.isTyping,\n  currentEmotion: state => state.currentEmotion\n};\n\nconst mutations = {\n  addMessage(state, message) {\n    state.messages.push(message);\n  },\n  setTyping(state, isTyping) {\n    state.isTyping = isTyping;\n  },\n  setEmotion(state, emotion) {\n    state.currentEmotion = emotion;\n  },\n  setWeatherInfo(state, info) {\n    state.weatherInfo = info;\n  },\n  toggleSound(state) {\n    state.soundEnabled = !state.soundEnabled;\n  },\n  clearMessages(state) {\n    state.messages = [];\n  }\n};\n\nconst actions = {\n  async sendMessage({ commit, state }, { text, type = 'user' }) {\n    try {\n      // 添加用户消息\n      commit('addMessage', { text, type });\n      \n      if (type === 'user') {\n        commit('setTyping', true);\n        \n        // 分析情绪\n        const emotionResult = await xfyunService.analyzeEmotion(text);\n        commit('setEmotion', emotionResult);\n        console.log('情绪分析结果:', emotionResult);\n\n        // 检查是否是天气查询\n        const weatherPattern = /(查|问|看|怎么样|如何|天气)/;\n        const cityPattern = /(北京|上海|南京|广州|深圳|杭州|成都|武汉|西安|重庆|天津|苏州|南昌|长沙|郑州|济南|青岛|大连|沈阳|哈尔滨|长春|太原|石家庄|呼和浩特|银川|西宁|兰州|乌鲁木齐|拉萨|成都|贵阳|昆明|南宁|海口|福州|厦门|台北|香港|澳门)(?:的)?(?:天气|气温|温度|下雨|多少度|冷|热)?/;\n        \n        let response = '';\n        const cityMatch = text.match(cityPattern);\n        \n        if (weatherPattern.test(text) && cityMatch) {\n          console.log('[聊天] 检测到天气查询，城市:', cityMatch[1]);\n          \n          // 根据城市名获取天气\n          const cityInfo = weatherService.parseCityName(cityMatch[1]);\n          if (cityInfo) {\n            console.log('[聊天] 匹配到城市信息:', cityInfo);\n            const weatherInfo = await weatherService.switchCity(cityInfo.id);\n            if (weatherInfo) {\n              response = weatherService.generateWeatherDescription(weatherInfo);\n            } else {\n              response = '抱歉，获取天气信息失败了，请稍后再试~';\n            }\n          } else {\n            response = '抱歉，目前我只能查询南京、上海和北京的天气信息哦~';\n          }\n        } else {\n          // 根据情绪生成回复\n          response = generateResponse(text, emotionResult);\n        }\n\n        // 添加助手回复\n        setTimeout(() => {\n          commit('setTyping', false);\n          commit('addMessage', { text: response, type: 'assistant' });\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('发送消息出错:', error);\n      commit('setTyping', false);\n      commit('addMessage', {\n        text: '抱歉，我遇到了一些问题，请稍后再试~',\n        type: 'assistant'\n      });\n    }\n  }\n};\n\n// 根据情绪生成回复\nfunction generateResponse(text, emotion) {\n  const responses = {\n    positive: [\n      '真好啊！我也感觉很开心呢~ 😊',\n      '你的心情真不错，让我也变得愉快起来了！✨',\n      '太棒了！保持这种好心情哦~ 🌟'\n    ],\n    negative: [\n      '别担心，事情总会变好的~ 🌈',\n      '我在这里陪着你呢，要加油哦！💪',\n      '让我们一起想想开心的事吧~ 🌺'\n    ],\n    neutral: [\n      '嗯嗯，我明白你的意思~ 🎈',\n      '确实是这样呢！💫',\n      '让我们继续聊下去吧~ ⭐'\n    ]\n  };\n\n  const defaultResponses = responses[emotion] || responses.neutral;\n  return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}