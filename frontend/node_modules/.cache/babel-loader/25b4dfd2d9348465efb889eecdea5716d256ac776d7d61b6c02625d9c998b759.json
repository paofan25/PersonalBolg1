{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { getArticles } from '@/api/article';\nimport { formatDistanceToNow } from 'date-fns';\nimport { zhCN } from 'date-fns/locale';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'ArticleList',\n  setup() {\n    const store = useStore();\n    const articles = ref([]);\n    const total = ref(0);\n    const currentPage = ref(1);\n    const limit = ref(12);\n    const category = ref('');\n    const sortBy = ref('-createdAt');\n    const loading = ref(false);\n    const categories = ['生活', '技术', '随想', '其他'];\n    const isLoggedIn = computed(() => store.getters['auth/isLoggedIn']);\n    const fetchArticles = async () => {\n      try {\n        loading.value = true;\n        const params = {\n          page: currentPage.value,\n          limit: limit.value,\n          sort: sortBy.value\n        };\n        if (category.value) {\n          params.category = category.value;\n        }\n        const response = await getArticles(params);\n        articles.value = response.data.data;\n        total.value = response.data.total;\n      } catch (error) {\n        console.error('获取文章列表失败:', error);\n        ElMessage.error('获取文章列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handlePageChange = page => {\n      currentPage.value = page;\n      fetchArticles();\n    };\n    const handleFilter = () => {\n      currentPage.value = 1;\n      fetchArticles();\n    };\n    const formatDate = date => {\n      return formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n        locale: zhCN\n      });\n    };\n    onMounted(() => {\n      fetchArticles();\n    });\n    return {\n      articles,\n      total,\n      currentPage,\n      limit,\n      category,\n      sortBy,\n      categories,\n      isLoggedIn,\n      loading,\n      handlePageChange,\n      handleFilter,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","getArticles","formatDistanceToNow","zhCN","ElMessage","name","setup","store","articles","total","currentPage","limit","category","sortBy","loading","categories","isLoggedIn","getters","fetchArticles","value","params","page","sort","response","data","error","console","handlePageChange","handleFilter","formatDate","date","Date","addSuffix","locale"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\ArticleList.vue"],"sourcesContent":["<template>\n  <div class=\"article-list\">\n    <div class=\"header\">\n      <h1>文章列表</h1>\n      <router-link to=\"/article/create\" class=\"create-btn\" v-if=\"isLoggedIn\">\n        <el-button type=\"primary\">写文章</el-button>\n      </router-link>\n    </div>\n\n    <div class=\"filters\">\n      <el-select v-model=\"category\" placeholder=\"选择分类\" clearable @change=\"handleFilter\">\n        <el-option\n          v-for=\"item in categories\"\n          :key=\"item\"\n          :label=\"item\"\n          :value=\"item\"\n        />\n      </el-select>\n      \n      <el-select v-model=\"sortBy\" placeholder=\"排序方式\" @change=\"handleFilter\">\n        <el-option label=\"最新发布\" value=\"-createdAt\" />\n        <el-option label=\"最多浏览\" value=\"-viewCount\" />\n        <el-option label=\"最多点赞\" value=\"-likeCount\" />\n        <el-option label=\"最多收藏\" value=\"-favoriteCount\" />\n      </el-select>\n    </div>\n\n    <el-row :gutter=\"20\" class=\"article-grid\">\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" v-for=\"article in articles\" :key=\"article._id\">\n        <el-card class=\"article-card\" :body-style=\"{ padding: '0px' }\">\n          <div class=\"image-wrapper\">\n            <img :src=\"article.coverImage\" class=\"cover-image\">\n            <div class=\"category-tag\">{{ article.category }}</div>\n          </div>\n          \n          <div class=\"card-content\">\n            <router-link :to=\"'/article/' + article._id\" class=\"title\">\n              {{ article.title }}\n            </router-link>\n            \n            <div class=\"author-info\">\n              <el-avatar :size=\"24\" :src=\"article.author.avatar\" />\n              <span class=\"author-name\">{{ article.author.username }}</span>\n              <span class=\"publish-date\">{{ formatDate(article.createdAt) }}</span>\n            </div>\n            \n            <div class=\"article-stats\">\n              <span class=\"stat-item\">\n                <i class=\"el-icon-view\"></i>\n                {{ article.viewCount }}\n              </span>\n              <span class=\"stat-item\">\n                <i class=\"el-icon-star-on\"></i>\n                {{ article.favoriteCount }}\n              </span>\n              <span class=\"stat-item\">\n                <i class=\"el-icon-thumb\"></i>\n                {{ article.likeCount }}\n              </span>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <div class=\"pagination-wrapper\">\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"limit\"\n        v-model:current-page=\"currentPage\"\n        @current-change=\"handlePageChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { getArticles } from '@/api/article'\nimport { formatDistanceToNow } from 'date-fns'\nimport { zhCN } from 'date-fns/locale'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'ArticleList',\n  \n  setup() {\n    const store = useStore()\n    const articles = ref([])\n    const total = ref(0)\n    const currentPage = ref(1)\n    const limit = ref(12)\n    const category = ref('')\n    const sortBy = ref('-createdAt')\n    const loading = ref(false)\n    \n    const categories = ['生活', '技术', '随想', '其他']\n\n    const isLoggedIn = computed(() => store.getters['auth/isLoggedIn'])\n\n    const fetchArticles = async () => {\n      try {\n        loading.value = true\n        const params = {\n          page: currentPage.value,\n          limit: limit.value,\n          sort: sortBy.value\n        }\n        \n        if (category.value) {\n          params.category = category.value\n        }\n\n        const response = await getArticles(params)\n        articles.value = response.data.data\n        total.value = response.data.total\n      } catch (error) {\n        console.error('获取文章列表失败:', error)\n        ElMessage.error('获取文章列表失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchArticles()\n    }\n\n    const handleFilter = () => {\n      currentPage.value = 1\n      fetchArticles()\n    }\n\n    const formatDate = (date) => {\n      return formatDistanceToNow(new Date(date), { \n        addSuffix: true,\n        locale: zhCN \n      })\n    }\n\n    onMounted(() => {\n      fetchArticles()\n    })\n\n    return {\n      articles,\n      total,\n      currentPage,\n      limit,\n      category,\n      sortBy,\n      categories,\n      isLoggedIn,\n      loading,\n      handlePageChange,\n      handleFilter,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.article-list {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 24px;\n  background: linear-gradient(45deg, var(--primary-purple), var(--primary-pink));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.filters {\n  display: flex;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.article-grid {\n  margin-bottom: 30px;\n}\n\n.article-card {\n  margin-bottom: 20px;\n  transition: transform 0.3s ease;\n  cursor: pointer;\n}\n\n.article-card:hover {\n  transform: translateY(-5px);\n}\n\n.image-wrapper {\n  position: relative;\n  height: 200px;\n  overflow: hidden;\n}\n\n.cover-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.category-tag {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.card-content {\n  padding: 15px;\n}\n\n.title {\n  display: block;\n  font-size: 16px;\n  font-weight: bold;\n  color: var(--text-primary);\n  margin-bottom: 10px;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.author-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 10px;\n}\n\n.author-name {\n  font-size: 14px;\n  color: var(--text-regular);\n}\n\n.publish-date {\n  font-size: 12px;\n  color: var(--text-secondary);\n}\n\n.article-stats {\n  display: flex;\n  gap: 15px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  color: var(--text-secondary);\n}\n\n.stat-item i {\n  font-size: 14px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n}\n\n@media (max-width: 768px) {\n  .filters {\n    flex-direction: column;\n  }\n  \n  .image-wrapper {\n    height: 150px;\n  }\n}\n</style>"],"mappings":"AA+EA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,WAAU,QAAS,eAAc;AAC1C,SAASC,mBAAkB,QAAS,UAAS;AAC7C,SAASC,IAAG,QAAS,iBAAgB;AACrC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,aAAa;EAEnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC;IACvB,MAAMQ,QAAO,GAAIX,GAAG,CAAC,EAAE;IACvB,MAAMY,KAAI,GAAIZ,GAAG,CAAC,CAAC;IACnB,MAAMa,WAAU,GAAIb,GAAG,CAAC,CAAC;IACzB,MAAMc,KAAI,GAAId,GAAG,CAAC,EAAE;IACpB,MAAMe,QAAO,GAAIf,GAAG,CAAC,EAAE;IACvB,MAAMgB,MAAK,GAAIhB,GAAG,CAAC,YAAY;IAC/B,MAAMiB,OAAM,GAAIjB,GAAG,CAAC,KAAK;IAEzB,MAAMkB,UAAS,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAE1C,MAAMC,UAAS,GAAIlB,QAAQ,CAAC,MAAMS,KAAK,CAACU,OAAO,CAAC,iBAAiB,CAAC;IAElE,MAAMC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFJ,OAAO,CAACK,KAAI,GAAI,IAAG;QACnB,MAAMC,MAAK,GAAI;UACbC,IAAI,EAAEX,WAAW,CAACS,KAAK;UACvBR,KAAK,EAAEA,KAAK,CAACQ,KAAK;UAClBG,IAAI,EAAET,MAAM,CAACM;QACf;QAEA,IAAIP,QAAQ,CAACO,KAAK,EAAE;UAClBC,MAAM,CAACR,QAAO,GAAIA,QAAQ,CAACO,KAAI;QACjC;QAEA,MAAMI,QAAO,GAAI,MAAMtB,WAAW,CAACmB,MAAM;QACzCZ,QAAQ,CAACW,KAAI,GAAII,QAAQ,CAACC,IAAI,CAACA,IAAG;QAClCf,KAAK,CAACU,KAAI,GAAII,QAAQ,CAACC,IAAI,CAACf,KAAI;MAClC,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChCrB,SAAS,CAACqB,KAAK,CAAC,UAAU;MAC5B,UAAU;QACRX,OAAO,CAACK,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMQ,gBAAe,GAAKN,IAAI,IAAK;MACjCX,WAAW,CAACS,KAAI,GAAIE,IAAG;MACvBH,aAAa,CAAC;IAChB;IAEA,MAAMU,YAAW,GAAIA,CAAA,KAAM;MACzBlB,WAAW,CAACS,KAAI,GAAI;MACpBD,aAAa,CAAC;IAChB;IAEA,MAAMW,UAAS,GAAKC,IAAI,IAAK;MAC3B,OAAO5B,mBAAmB,CAAC,IAAI6B,IAAI,CAACD,IAAI,CAAC,EAAE;QACzCE,SAAS,EAAE,IAAI;QACfC,MAAM,EAAE9B;MACV,CAAC;IACH;IAEAJ,SAAS,CAAC,MAAM;MACdmB,aAAa,CAAC;IAChB,CAAC;IAED,OAAO;MACLV,QAAQ;MACRC,KAAK;MACLC,WAAW;MACXC,KAAK;MACLC,QAAQ;MACRC,MAAM;MACNE,UAAU;MACVC,UAAU;MACVF,OAAO;MACPa,gBAAgB;MAChBC,YAAY;MACZC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}