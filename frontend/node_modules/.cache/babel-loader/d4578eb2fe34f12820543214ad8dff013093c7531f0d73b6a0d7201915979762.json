{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      messages: [{\n        role: 'assistant',\n        content: '哈喽！我是糖球助手，一只会变形的糯米团子~ 今天想聊些什么呢？(✧ω✧)',\n        animation: '(糖球变成一个欢迎的波浪形状)'\n      }],\n      userInput: '',\n      isAiTyping: false,\n      showEmojiPicker: false,\n      showWeatherModule: false,\n      weatherData: {\n        location: '北京市',\n        temperature: 22,\n        description: '晴朗',\n        icon: 'sunny'\n      },\n      emojis: ['😊', '🥰', '😂', '👍', '❤️', '✨', '🎉', '🍰', '🐱', '⭐', '🌈', '🍦']\n    };\n  },\n  mounted() {\n    // 自动聚焦到输入框\n    this.$refs.chatInput.focus();\n  },\n  methods: {\n    sendMessage() {\n      if (!this.userInput.trim() || this.isAiTyping) return;\n\n      // 添加用户消息\n      this.messages.push({\n        role: 'user',\n        content: this.userInput\n      });\n\n      // 清空输入\n      const userMessage = this.userInput;\n      this.userInput = '';\n\n      // 滚动到底部\n      this.scrollToBottom();\n\n      // AI正在输入\n      this.isAiTyping = true;\n\n      // 模拟AI响应延迟\n      setTimeout(() => {\n        this.generateAiResponse(userMessage);\n      }, 1000);\n    },\n    generateAiResponse(userMessage) {\n      // 实际应用中，这里应该调用AI API\n      let aiResponse = '';\n      let animation = '';\n\n      // 简单的关键词匹配\n      const lowerMessage = userMessage.toLowerCase();\n      if (lowerMessage.includes('天气')) {\n        aiResponse = '当前北京的天气是晴朗，气温22°C，非常适合出门玩耍哦！要看详细天气信息吗？(=^･ω･^)~';\n        animation = '(糖球变成小小的气象站)';\n        this.showWeatherModule = true;\n      } else if (lowerMessage.includes('你好') || lowerMessage.includes('嗨') || lowerMessage.includes('hi')) {\n        aiResponse = '你好呀！今天过得怎么样呢？有什么开心的事情分享吗？(✧ω✧)';\n        animation = '(糖球高兴地跳起来)';\n      } else if (lowerMessage.includes('难过') || lowerMessage.includes('伤心') || lowerMessage.includes('不开心')) {\n        aiResponse = '抱抱你~不要难过啦，要听听云朵猫的呼噜声吗？它一定能让你感觉好一点！🎵';\n        animation = '(糖球变成一个温暖的抱枕)';\n      } else if (lowerMessage.includes('音乐') || lowerMessage.includes('歌')) {\n        aiResponse = '我推荐你听听《童话镇》，这首歌超治愈的！要我放给你听吗？(✧ω✧)';\n        animation = '(糖球变成小音符跳动)';\n      } else if (lowerMessage.includes('游戏')) {\n        aiResponse = '我们可以玩猜谜语游戏！或者你想去星云农场种植魔法棉花糖吗？那里超好玩的~(=^･ω･^)~';\n        animation = '(糖球变成游戏手柄形状)';\n      } else if (lowerMessage.includes('食物') || lowerMessage.includes('吃') || lowerMessage.includes('甜点')) {\n        aiResponse = '我最喜欢草莓奶油蛋糕啦！要不要试试做云朵棉花糖？只需要棉花糖、奶油和一点点魔法粉末！(✧ω✧)';\n        animation = '(糖球变成一块蛋糕)';\n      } else {\n        // 默认回复\n        const defaultResponses = ['呜哇~这个问题好有趣！让我想想...(=^･ω･^)~', '糖球正在思考中...你喜欢粉色还是蓝色呢？我最喜欢粉蓝色渐变啦！(✧ω✧)', '嘻嘻，我们可以一起去云朵上野餐吗？我会带上棉花糖和星星饼干！✨', '你知道吗？云朵猫最喜欢睡在彩虹上面，因为那里特别柔软！(=^･ω･^)~', '要不要听个小秘密？星星兔其实会发光，但只有在它特别开心的时候才会！(✧ω✧)'];\n        const randomIndex = Math.floor(Math.random() * defaultResponses.length);\n        aiResponse = defaultResponses[randomIndex];\n        const animations = ['(糖球好奇地歪头)', '(糖球变成一个问号形状)', '(糖球开心地旋转)', '(糖球眨眨眼睛)', '(糖球变成一颗星星)'];\n        animation = animations[randomIndex];\n      }\n\n      // 添加AI回复\n      this.messages.push({\n        role: 'assistant',\n        content: aiResponse,\n        animation: animation\n      });\n\n      // AI输入完成\n      this.isAiTyping = false;\n\n      // 滚动到底部\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    formatMessage(text) {\n      // 使HTML中的换行符生效\n      return text.replace(/\\n/g, '<br>');\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const container = this.$refs.chatMessages;\n        container.scrollTop = container.scrollHeight;\n      });\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.userInput += emoji;\n      this.showEmojiPicker = false;\n      this.$refs.chatInput.focus();\n    },\n    randomStarStyle() {\n      const size = 5 + Math.random() * 15; // 5px到20px大小\n      const top = Math.random() * 100; // 0%到100%顶部位置\n      const left = Math.random() * 100; // 0%到100%左侧位置\n      const duration = 2 + Math.random() * 3; // 2-5秒动画时间\n      const delay = Math.random() * 5; // 0-5秒延迟\n\n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        top: `${top}%`,\n        left: `${left}%`,\n        animationDuration: `${duration}s`,\n        animationDelay: `${delay}s`\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","messages","role","content","animation","userInput","isAiTyping","showEmojiPicker","showWeatherModule","weatherData","location","temperature","description","icon","emojis","mounted","$refs","chatInput","focus","methods","sendMessage","trim","push","userMessage","scrollToBottom","setTimeout","generateAiResponse","aiResponse","lowerMessage","toLowerCase","includes","defaultResponses","randomIndex","Math","floor","random","length","animations","$nextTick","formatMessage","text","replace","container","chatMessages","scrollTop","scrollHeight","toggleEmojiPicker","addEmoji","emoji","randomStarStyle","size","top","left","duration","delay","width","height","animationDuration","animationDelay"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-assistant\">\n    <div class=\"chat-container sweet-card\">\n      <div class=\"chat-header\">\n        <h1 class=\"chat-title gradient-text\">糖球助手</h1>\n        <div class=\"assistant-avatar float-animation\">\n          <div class=\"mochi-character\" :class=\"{ 'talking': isAiTyping }\"></div>\n        </div>\n      </div>\n      \n      <div class=\"chat-messages\" ref=\"chatMessages\">\n        <div \n          v-for=\"(message, index) in messages\" \n          :key=\"index\"\n          class=\"message-container\" \n          :class=\"{ 'user-message': message.role === 'user', 'ai-message': message.role === 'assistant' }\"\n        >\n          <div class=\"message-avatar\">\n            <img \n              :src=\"message.role === 'user' ? '@/assets/images/user-avatar.png' : '@/assets/images/ai-avatar.png'\" \n              :alt=\"message.role === 'user' ? '用户' : '糖球助手'\" \n            />\n          </div>\n          <div class=\"message-bubble\">\n            <div v-if=\"message.role === 'assistant' && message.animation\" class=\"assistant-animation\">\n              {{ message.animation }}\n            </div>\n            <div class=\"message-content\" v-html=\"formatMessage(message.content)\"></div>\n          </div>\n        </div>\n        \n        <div v-if=\"isAiTyping\" class=\"message-container ai-message typing-indicator\">\n          <div class=\"message-avatar\">\n            <img src=\"@/assets/images/ai-avatar.png\" alt=\"糖球助手\" />\n          </div>\n          <div class=\"message-bubble\">\n            <div class=\"typing-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"chat-input-container\">\n        <textarea \n          v-model=\"userInput\" \n          placeholder=\"有什么想问糖球的呢~ (=^･ω･^)~\" \n          class=\"chat-input\"\n          @keydown.enter.prevent=\"sendMessage\"\n          :disabled=\"isAiTyping\"\n          ref=\"chatInput\"\n        ></textarea>\n        <div class=\"input-actions\">\n          <button class=\"emoji-btn\" @click=\"toggleEmojiPicker\">\n            😊\n          </button>\n          <button class=\"send-btn sweet-btn\" @click=\"sendMessage\" :disabled=\"!userInput.trim() || isAiTyping\">\n            发送\n          </button>\n        </div>\n        \n        <!-- 表情选择器 -->\n        <div v-if=\"showEmojiPicker\" class=\"emoji-picker\">\n          <div \n            v-for=\"emoji in emojis\" \n            :key=\"emoji\"\n            class=\"emoji-item\"\n            @click=\"addEmoji(emoji)\"\n          >{{ emoji }}</div>\n        </div>\n      </div>\n      \n      <!-- 天气查询模块 -->\n      <div v-if=\"showWeatherModule\" class=\"weather-module\">\n        <div class=\"weather-container sweet-card\">\n          <div class=\"weather-header\">\n            <h3>天气查询</h3>\n            <button class=\"close-btn\" @click=\"showWeatherModule = false\">×</button>\n          </div>\n          <div class=\"weather-content\">\n            <div class=\"weather-icon\" :class=\"weatherData.icon\">\n              <span v-if=\"weatherData.icon === 'sunny'\">☀️</span>\n              <span v-if=\"weatherData.icon === 'cloudy'\">☁️</span>\n              <span v-if=\"weatherData.icon === 'rainy'\">🌧️</span>\n              <span v-if=\"weatherData.icon === 'snowy'\">❄️</span>\n            </div>\n            <div class=\"weather-info\">\n              <div class=\"weather-location\">{{ weatherData.location }}</div>\n              <div class=\"weather-temp\">{{ weatherData.temperature }}°C</div>\n              <div class=\"weather-desc\">{{ weatherData.description }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 底部特效层 -->\n      <div class=\"effects-layer\">\n        <div v-for=\"i in 10\" :key=\"i\" class=\"star-effect\" :style=\"randomStarStyle()\"></div>\n      </div>\n    </div>\n    \n    <!-- 聊天指南 -->\n    <div class=\"chat-guide sweet-card\">\n      <h3 class=\"guide-title gradient-text\">糖球助手指南</h3>\n      <div class=\"guide-items\">\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🌤️</div>\n          <div class=\"guide-text\">问我今天的天气~</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🎵</div>\n          <div class=\"guide-text\">想听一些舒缓的音乐</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🍰</div>\n          <div class=\"guide-text\">推荐一些甜点食谱</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">📝</div>\n          <div class=\"guide-text\">帮我写一段可爱的日记</div>\n        </div>\n        <div class=\"guide-item\">\n          <div class=\"guide-icon\">🎮</div>\n          <div class=\"guide-text\">陪我玩个小游戏</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      messages: [\n        {\n          role: 'assistant',\n          content: '哈喽！我是糖球助手，一只会变形的糯米团子~ 今天想聊些什么呢？(✧ω✧)',\n          animation: '(糖球变成一个欢迎的波浪形状)'\n        }\n      ],\n      userInput: '',\n      isAiTyping: false,\n      showEmojiPicker: false,\n      showWeatherModule: false,\n      weatherData: {\n        location: '北京市',\n        temperature: 22,\n        description: '晴朗',\n        icon: 'sunny'\n      },\n      emojis: ['😊', '🥰', '😂', '👍', '❤️', '✨', '🎉', '🍰', '🐱', '⭐', '🌈', '🍦']\n    };\n  },\n  mounted() {\n    // 自动聚焦到输入框\n    this.$refs.chatInput.focus();\n  },\n  methods: {\n    sendMessage() {\n      if (!this.userInput.trim() || this.isAiTyping) return;\n      \n      // 添加用户消息\n      this.messages.push({\n        role: 'user',\n        content: this.userInput\n      });\n      \n      // 清空输入\n      const userMessage = this.userInput;\n      this.userInput = '';\n      \n      // 滚动到底部\n      this.scrollToBottom();\n      \n      // AI正在输入\n      this.isAiTyping = true;\n      \n      // 模拟AI响应延迟\n      setTimeout(() => {\n        this.generateAiResponse(userMessage);\n      }, 1000);\n    },\n    generateAiResponse(userMessage) {\n      // 实际应用中，这里应该调用AI API\n      let aiResponse = '';\n      let animation = '';\n      \n      // 简单的关键词匹配\n      const lowerMessage = userMessage.toLowerCase();\n      \n      if (lowerMessage.includes('天气')) {\n        aiResponse = '当前北京的天气是晴朗，气温22°C，非常适合出门玩耍哦！要看详细天气信息吗？(=^･ω･^)~';\n        animation = '(糖球变成小小的气象站)';\n        this.showWeatherModule = true;\n      } \n      else if (lowerMessage.includes('你好') || lowerMessage.includes('嗨') || lowerMessage.includes('hi')) {\n        aiResponse = '你好呀！今天过得怎么样呢？有什么开心的事情分享吗？(✧ω✧)';\n        animation = '(糖球高兴地跳起来)';\n      }\n      else if (lowerMessage.includes('难过') || lowerMessage.includes('伤心') || lowerMessage.includes('不开心')) {\n        aiResponse = '抱抱你~不要难过啦，要听听云朵猫的呼噜声吗？它一定能让你感觉好一点！🎵';\n        animation = '(糖球变成一个温暖的抱枕)';\n      }\n      else if (lowerMessage.includes('音乐') || lowerMessage.includes('歌')) {\n        aiResponse = '我推荐你听听《童话镇》，这首歌超治愈的！要我放给你听吗？(✧ω✧)';\n        animation = '(糖球变成小音符跳动)';\n      }\n      else if (lowerMessage.includes('游戏')) {\n        aiResponse = '我们可以玩猜谜语游戏！或者你想去星云农场种植魔法棉花糖吗？那里超好玩的~(=^･ω･^)~';\n        animation = '(糖球变成游戏手柄形状)';\n      }\n      else if (lowerMessage.includes('食物') || lowerMessage.includes('吃') || lowerMessage.includes('甜点')) {\n        aiResponse = '我最喜欢草莓奶油蛋糕啦！要不要试试做云朵棉花糖？只需要棉花糖、奶油和一点点魔法粉末！(✧ω✧)';\n        animation = '(糖球变成一块蛋糕)';\n      }\n      else {\n        // 默认回复\n        const defaultResponses = [\n          '呜哇~这个问题好有趣！让我想想...(=^･ω･^)~',\n          '糖球正在思考中...你喜欢粉色还是蓝色呢？我最喜欢粉蓝色渐变啦！(✧ω✧)',\n          '嘻嘻，我们可以一起去云朵上野餐吗？我会带上棉花糖和星星饼干！✨',\n          '你知道吗？云朵猫最喜欢睡在彩虹上面，因为那里特别柔软！(=^･ω･^)~',\n          '要不要听个小秘密？星星兔其实会发光，但只有在它特别开心的时候才会！(✧ω✧)'\n        ];\n        const randomIndex = Math.floor(Math.random() * defaultResponses.length);\n        aiResponse = defaultResponses[randomIndex];\n        \n        const animations = [\n          '(糖球好奇地歪头)',\n          '(糖球变成一个问号形状)',\n          '(糖球开心地旋转)',\n          '(糖球眨眨眼睛)',\n          '(糖球变成一颗星星)'\n        ];\n        animation = animations[randomIndex];\n      }\n      \n      // 添加AI回复\n      this.messages.push({\n        role: 'assistant',\n        content: aiResponse,\n        animation: animation\n      });\n      \n      // AI输入完成\n      this.isAiTyping = false;\n      \n      // 滚动到底部\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    formatMessage(text) {\n      // 使HTML中的换行符生效\n      return text.replace(/\\n/g, '<br>');\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const container = this.$refs.chatMessages;\n        container.scrollTop = container.scrollHeight;\n      });\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    addEmoji(emoji) {\n      this.userInput += emoji;\n      this.showEmojiPicker = false;\n      this.$refs.chatInput.focus();\n    },\n    randomStarStyle() {\n      const size = 5 + Math.random() * 15; // 5px到20px大小\n      const top = Math.random() * 100; // 0%到100%顶部位置\n      const left = Math.random() * 100; // 0%到100%左侧位置\n      const duration = 2 + Math.random() * 3; // 2-5秒动画时间\n      const delay = Math.random() * 5; // 0-5秒延迟\n      \n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        top: `${top}%`,\n        left: `${left}%`,\n        animationDuration: `${duration}s`,\n        animationDelay: `${delay}s`\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-assistant {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  gap: 20px;\n}\n\n/* 聊天容器 */\n.chat-container {\n  height: 70vh;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 2px solid var(--primary-purple);\n}\n\n.chat-title {\n  font-size: 1.8rem;\n}\n\n.assistant-avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: var(--primary-yellow);\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mochi-character {\n  width: 50px;\n  height: 50px;\n  background-color: white;\n  border-radius: 50%;\n  transition: all 0.5s ease;\n}\n\n.mochi-character.talking {\n  animation: squish 1s infinite alternate;\n}\n\n@keyframes squish {\n  0% { border-radius: 50%; }\n  50% { \n    border-radius: 35% 65% 65% 35% / 35% 35% 65% 65%;\n    transform: rotate(10deg); \n  }\n  100% { \n    border-radius: 65% 35% 35% 65% / 65% 65% 35% 35%;\n    transform: rotate(-10deg);\n  }\n}\n\n.chat-messages {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.message-container {\n  display: flex;\n  gap: 10px;\n  max-width: 80%;\n}\n\n.user-message {\n  align-self: flex-end;\n  flex-direction: row-reverse;\n}\n\n.ai-message {\n  align-self: flex-start;\n}\n\n.message-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.message-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.message-bubble {\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n}\n\n.user-message .message-bubble {\n  background-color: var(--primary-pink);\n  color: var(--text-light);\n  border-bottom-right-radius: 0;\n}\n\n.ai-message .message-bubble {\n  background-color: var(--primary-purple);\n  border-bottom-left-radius: 0;\n}\n\n.message-content {\n  word-break: break-word;\n  line-height: 1.5;\n}\n\n.assistant-animation {\n  font-style: italic;\n  margin-bottom: 8px;\n  opacity: 0.8;\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n}\n\n/* 输入区域 */\n.chat-input-container {\n  padding: 20px;\n  border-top: 2px solid var(--primary-purple);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  position: relative;\n}\n\n.chat-input {\n  width: 100%;\n  min-height: 60px;\n  padding: 15px;\n  border: 2px solid var(--primary-purple);\n  border-radius: var(--border-radius);\n  resize: none;\n  font-family: var(--font-primary);\n}\n\n.chat-input:focus {\n  outline: none;\n  border-color: var(--primary-pink);\n}\n\n.input-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n.emoji-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--primary-purple);\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n\n.send-btn {\n  padding: 10px 20px;\n}\n\n.emoji-picker {\n  position: absolute;\n  bottom: 80px;\n  left: 20px;\n  width: 250px;\n  padding: 10px;\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 10px;\n  z-index: 10;\n}\n\n.emoji-item {\n  width: 100%;\n  aspect-ratio: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  transition: all 0.2s ease;\n}\n\n.emoji-item:hover {\n  background-color: var(--primary-purple);\n  transform: scale(1.1);\n}\n\n/* 输入提示动画 */\n.typing-indicator {\n  width: auto;\n}\n\n.typing-dots {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  height: 20px;\n}\n\n.typing-dots span {\n  width: 8px;\n  height: 8px;\n  background-color: var(--text-secondary);\n  border-radius: 50%;\n  animation: typingAnimation 1.5s infinite ease-in-out;\n}\n\n.typing-dots span:nth-child(1) {\n  animation-delay: 0s;\n}\n\n.typing-dots span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-dots span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes typingAnimation {\n  0%, 60%, 100% { transform: translateY(0); }\n  30% { transform: translateY(-10px); }\n}\n\n/* 天气模块 */\n.weather-module {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n}\n\n.weather-container {\n  width: 300px;\n  padding: 20px;\n  background-color: white;\n}\n\n.weather-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.close-btn {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: var(--primary-purple);\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n\n.weather-content {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.weather-icon {\n  width: 80px;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 3rem;\n}\n\n.weather-info {\n  flex: 1;\n}\n\n.weather-location {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.weather-temp {\n  font-size: 1.8rem;\n  margin-bottom: 5px;\n}\n\n.weather-desc {\n  color: var(--text-secondary);\n}\n\n/* 特效层 */\n.effects-layer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  z-index: -1;\n}\n\n.star-effect {\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 50%;\n  opacity: 0;\n  animation: twinkle 5s infinite;\n}\n\n@keyframes twinkle {\n  0%, 100% { opacity: 0; transform: scale(0.5); }\n  50% { opacity: 1; transform: scale(1); }\n}\n\n/* 聊天指南 */\n.chat-guide {\n  padding: 20px;\n  height: fit-content;\n}\n\n.guide-title {\n  font-size: 1.3rem;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.guide-items {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.guide-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: var(--bg-secondary);\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.guide-item:hover {\n  background-color: var(--primary-purple);\n  transform: translateY(-2px);\n}\n\n.guide-icon {\n  font-size: 1.5rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .chat-assistant {\n    grid-template-columns: 1fr;\n  }\n  \n  .chat-container {\n    height: 80vh;\n  }\n  \n  .message-container {\n    max-width: 90%;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}