{"ast":null,"code":"class WeatherService {\n  constructor() {\n    // 检查环境变量\n    if (typeof import.meta.env === 'undefined') {\n      console.error('环境变量未正确加载');\n    }\n\n    // 使用环境变量或默认值\n    this.apiKey = import.meta.env?.VITE_APP_WEATHER_KEY || '20ad4f9133c94ac69f48192ef755f473';\n    this.baseUrl = 'https://api.qweather.com/v7';\n    console.log('WeatherService initialized with:', {\n      apiKey: this.apiKey?.substring(0, 10) + '...',\n      baseUrl: this.baseUrl\n    });\n  }\n\n  // 获取当前天气\n  async getNowWeather(location = '101010100') {\n    try {\n      // 先获取城市信息\n      const geoUrl = `https://geoapi.qweather.com/v2/city/lookup?location=auto_ip&key=${this.apiKey}`;\n      console.log('Fetching location info:', geoUrl);\n      const geoResponse = await fetch(geoUrl);\n      const geoData = await geoResponse.json();\n      if (geoData.code !== '200') {\n        console.error('获取位置信息失败:', geoData);\n        return this.getDefaultWeather();\n      }\n\n      // 使用获取到的城市ID\n      const cityId = geoData.location?.[0]?.id || '101010100';\n      const url = `${this.baseUrl}/weather/now?location=${cityId}&key=${this.apiKey}`;\n      console.log('Fetching weather info:', url);\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log('Weather API response:', data);\n      if (data.code === '200') {\n        return {\n          temperature: data.now.temp,\n          condition: this.getWeatherCondition(data.now.icon),\n          description: data.now.text,\n          cityName: geoData.location?.[0]?.name || '未知城市'\n        };\n      } else {\n        console.error('获取天气失败:', data);\n        return this.getDefaultWeather();\n      }\n    } catch (error) {\n      console.error('获取天气出错:', error);\n      return this.getDefaultWeather();\n    }\n  }\n\n  // 生成天气描述\n  generateWeatherDescription(weather) {\n    const {\n      temperature,\n      condition,\n      description,\n      cityName\n    } = weather;\n    let suggestion = '';\n\n    // 根据温度给出建议\n    if (temperature < 10) {\n      suggestion = '天气有点冷，要注意保暖哦~ 🧥';\n    } else if (temperature > 30) {\n      suggestion = '天气有点热，记得防晒补水哦~ 🌞';\n    } else {\n      suggestion = '天气很舒适，适合出门活动呢~ 🌈';\n    }\n\n    // 根据天气状况添加特定建议\n    if (condition === 'rainy') {\n      suggestion += ' 记得带伞！☔';\n    } else if (condition === 'sunny') {\n      suggestion += ' 防晒要做好！🧴';\n    }\n    return `${cityName}现在气温${temperature}°C，${description}。${suggestion}`;\n  }\n\n  // 获取天气状况\n  getWeatherCondition(icon) {\n    const conditions = {\n      sunny: ['100', '101', '102', '103'],\n      cloudy: ['104', '150', '151', '152', '153'],\n      rainy: ['300', '301', '302', '303', '304', '305', '306', '307', '308', '309', '310', '311', '312', '313', '314', '315', '316', '317', '318', '399'],\n      snowy: ['400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '499'],\n      foggy: ['500', '501', '502', '503', '504', '507', '508', '509', '510', '511', '512', '513', '514', '515']\n    };\n    for (const [condition, icons] of Object.entries(conditions)) {\n      if (icons.includes(icon)) {\n        return condition;\n      }\n    }\n    return 'cloudy'; // 默认返回多云\n  }\n\n  // 获取默认天气数据\n  getDefaultWeather() {\n    return {\n      temperature: 25,\n      condition: 'cloudy',\n      description: '多云',\n      cityName: '未知城市'\n    };\n  }\n}\nexport default new WeatherService();","map":{"version":3,"names":["WeatherService","constructor","import","meta","env","console","error","apiKey","VITE_APP_WEATHER_KEY","baseUrl","log","substring","getNowWeather","location","geoUrl","geoResponse","fetch","geoData","json","code","getDefaultWeather","cityId","id","url","response","data","temperature","now","temp","condition","getWeatherCondition","icon","description","text","cityName","name","generateWeatherDescription","weather","suggestion","conditions","sunny","cloudy","rainy","snowy","foggy","icons","Object","entries","includes"],"sources":["E:/code/PersonalBolg1/frontend/src/services/weather.js"],"sourcesContent":["class WeatherService {\n  constructor() {\n    // 检查环境变量\n    if (typeof import.meta.env === 'undefined') {\n      console.error('环境变量未正确加载');\n    }\n\n    // 使用环境变量或默认值\n    this.apiKey = import.meta.env?.VITE_APP_WEATHER_KEY || '20ad4f9133c94ac69f48192ef755f473';\n    this.baseUrl = 'https://api.qweather.com/v7';\n\n    console.log('WeatherService initialized with:', {\n      apiKey: this.apiKey?.substring(0, 10) + '...',\n      baseUrl: this.baseUrl\n    });\n  }\n\n  // 获取当前天气\n  async getNowWeather(location = '101010100') {\n    try {\n      // 先获取城市信息\n      const geoUrl = `https://geoapi.qweather.com/v2/city/lookup?location=auto_ip&key=${this.apiKey}`;\n      console.log('Fetching location info:', geoUrl);\n      \n      const geoResponse = await fetch(geoUrl);\n      const geoData = await geoResponse.json();\n      \n      if (geoData.code !== '200') {\n        console.error('获取位置信息失败:', geoData);\n        return this.getDefaultWeather();\n      }\n\n      // 使用获取到的城市ID\n      const cityId = geoData.location?.[0]?.id || '101010100';\n      const url = `${this.baseUrl}/weather/now?location=${cityId}&key=${this.apiKey}`;\n      console.log('Fetching weather info:', url);\n      \n      const response = await fetch(url);\n      const data = await response.json();\n\n      console.log('Weather API response:', data);\n\n      if (data.code === '200') {\n        return {\n          temperature: data.now.temp,\n          condition: this.getWeatherCondition(data.now.icon),\n          description: data.now.text,\n          cityName: geoData.location?.[0]?.name || '未知城市'\n        };\n      } else {\n        console.error('获取天气失败:', data);\n        return this.getDefaultWeather();\n      }\n    } catch (error) {\n      console.error('获取天气出错:', error);\n      return this.getDefaultWeather();\n    }\n  }\n\n  // 生成天气描述\n  generateWeatherDescription(weather) {\n    const { temperature, condition, description, cityName } = weather;\n    let suggestion = '';\n\n    // 根据温度给出建议\n    if (temperature < 10) {\n      suggestion = '天气有点冷，要注意保暖哦~ 🧥';\n    } else if (temperature > 30) {\n      suggestion = '天气有点热，记得防晒补水哦~ 🌞';\n    } else {\n      suggestion = '天气很舒适，适合出门活动呢~ 🌈';\n    }\n\n    // 根据天气状况添加特定建议\n    if (condition === 'rainy') {\n      suggestion += ' 记得带伞！☔';\n    } else if (condition === 'sunny') {\n      suggestion += ' 防晒要做好！🧴';\n    }\n\n    return `${cityName}现在气温${temperature}°C，${description}。${suggestion}`;\n  }\n\n  // 获取天气状况\n  getWeatherCondition(icon) {\n    const conditions = {\n      sunny: ['100', '101', '102', '103'],\n      cloudy: ['104', '150', '151', '152', '153'],\n      rainy: ['300', '301', '302', '303', '304', '305', '306', '307', '308', '309', '310', '311', '312', '313', '314', '315', '316', '317', '318', '399'],\n      snowy: ['400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '499'],\n      foggy: ['500', '501', '502', '503', '504', '507', '508', '509', '510', '511', '512', '513', '514', '515']\n    };\n\n    for (const [condition, icons] of Object.entries(conditions)) {\n      if (icons.includes(icon)) {\n        return condition;\n      }\n    }\n    return 'cloudy'; // 默认返回多云\n  }\n\n  // 获取默认天气数据\n  getDefaultWeather() {\n    return {\n      temperature: 25,\n      condition: 'cloudy',\n      description: '多云',\n      cityName: '未知城市'\n    };\n  }\n}\n\nexport default new WeatherService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}