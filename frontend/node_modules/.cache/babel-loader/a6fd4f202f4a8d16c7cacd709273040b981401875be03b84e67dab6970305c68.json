{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport weatherService from './weather';\nimport xfyunService from './xfyun';\nclass ChatService {\n  constructor() {\n    this.messages = [];\n  }\n\n  // 分析用户输入的情绪\n  async analyzeEmotion(text) {\n    try {\n      console.log('开始分析情绪:', text);\n\n      // 使用讯飞API进行情绪分析\n      const prompt = `请分析以下文本的情绪，只返回一个词：\"happy\"、\"sad\"、\"worried\"、\"excited\"或\"neutral\"，不要返回其他内容。\\n文本：${text}`;\n      const response = await xfyunService.chat([{\n        role: 'user',\n        content: prompt\n      }]);\n      console.log('情绪分析结果:', response);\n      const emotion = response.trim().toLowerCase();\n\n      // 确保返回的是有效的情绪类型\n      const validEmotions = ['happy', 'sad', 'worried', 'excited', 'neutral'];\n      return validEmotions.includes(emotion) ? emotion : 'neutral';\n    } catch (error) {\n      console.error('情绪分析失败:', error);\n      return 'neutral';\n    }\n  }\n\n  // 生成回复\n  async generateResponse(text, emotion) {\n    try {\n      console.log('开始生成回复:', {\n        text,\n        emotion\n      });\n\n      // 检查是否是天气相关询问\n      if (this.isWeatherQuery(text)) {\n        const weather = await weatherService.getNowWeather();\n        if (weather) {\n          return {\n            text: weatherService.generateWeatherDescription(weather),\n            weather,\n            actions: []\n          };\n        }\n      }\n\n      // 根据情绪选择适当的表情符号前缀\n      const emotionEmojis = {\n        'happy': '😊💕',\n        'sad': '😔💙',\n        'worried': '😟💭',\n        'excited': '😃✨',\n        'neutral': '😌☀️',\n        'positive': '😊💕',\n        'negative': '😔💙'\n      };\n      const emojiPrefix = emotionEmojis[emotion] || '😊';\n\n      // 使用讯飞API生成回复\n      const prompt = `你是一个可爱的AI助手\"糖球\"，性格温柔活泼。请根据以下要求回复：\n1. 使用可爱、治愈的语气\n2. 每句话结尾加上可爱的颜文字，如(◕‿◕✿) (＾▽＾) (≧◡≦) (｡◕‿◕｡) 等\n3. 回复长度控制在100字以内\n4. 当前用户情绪：${emotion}，请相应调整回复语气\n5. 在回复中使用emoji表情，如😊 💕 ✨ 🌈 🎀 🌸 等\n6. 回复内容要亲切、有趣、贴近生活\n\n用户说：${text}`;\n      console.log('发送到讯飞的提示词:', prompt);\n      const messages = [{\n        role: 'system',\n        content: '你是一个可爱的AI助手\"糖球\"，性格温柔活泼，会使用丰富的表情符号和emoji，语气温暖亲切。'\n      }, {\n        role: 'user',\n        content: prompt\n      }];\n      const response = await xfyunService.chat(messages);\n      console.log('讯飞返回的回复:', response);\n\n      // 根据情绪添加互动动作\n      const actions = this.generateActions(emotion);\n      return {\n        text: response,\n        actions\n      };\n    } catch (error) {\n      console.error('生成回复失败:', error);\n      // 使用本地回复作为备选\n      return this.generateLocalResponse(text, emotion);\n    }\n  }\n\n  // 生成本地回复作为备选\n  generateLocalResponse(text, emotion) {\n    console.log('使用本地回复备选');\n\n    // 可爱的表情符号集合\n    const kaomojis = ['(◕‿◕✿)', '(＾▽＾)', '(≧◡≦)', '(｡◕‿◕｡)', '(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧', '(づ｡◕‿‿◕｡)づ', '(ノ^_^)ノ', '(●ˇ∀ˇ●)', '(*^▽^*)', '(✿◠‿◠)'];\n    const emojis = ['😊', '💕', '✨', '🌈', '🎀', '🌸', '🍭', '🎵', '🌟', '💫', '💝'];\n\n    // 随机选择表情和emoji\n    const randomKaomoji = kaomojis[Math.floor(Math.random() * kaomojis.length)];\n    const randomEmoji1 = emojis[Math.floor(Math.random() * emojis.length)];\n    const randomEmoji2 = emojis[Math.floor(Math.random() * emojis.length)];\n\n    // 根据情绪生成回复\n    let response;\n    if (text.includes('你好') || text.includes('嗨') || text.includes('hi') || text.includes('hello')) {\n      response = `${randomEmoji1} 你好呀！我是糖球助手，很高兴见到你！有什么我能帮到你的吗？${randomKaomoji}`;\n    } else if (text.includes('天气')) {\n      response = `${randomEmoji1} 想知道天气呀？稍等我查一下哦~可以告诉我你想查询哪个城市的天气吗？${randomKaomoji}`;\n    } else if (emotion === 'happy' || emotion === 'positive') {\n      response = `${randomEmoji1} 看到你这么开心，我也好高兴呀！希望你的好心情能一直持续下去哦！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'sad' || emotion === 'negative') {\n      response = `${randomEmoji1} 别难过啦~有什么事情可以和我分享，我会一直陪着你的！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'worried') {\n      response = `${randomEmoji1} 不要担心太多啦，深呼吸，放轻松，一切都会好起来的！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'excited') {\n      response = `${randomEmoji1} 哇！你看起来超兴奋的！发生了什么好事情吗？和我分享一下吧！${randomEmoji2} ${randomKaomoji}`;\n    } else {\n      response = `${randomEmoji1} 嗯嗯，我懂你的意思啦！还有什么想聊的吗？我们可以聊任何你感兴趣的话题哦！${randomEmoji2} ${randomKaomoji}`;\n    }\n    return {\n      text: response,\n      actions: this.generateActions(emotion)\n    };\n  }\n\n  // 检查是否是天气相关询问\n  isWeatherQuery(text) {\n    const weatherKeywords = ['天气', '下雨', '温度', '冷', '热', '气温', '预报'];\n    if (weatherKeywords.some(keyword => text.includes(keyword))) {\n      // 直接调用天气服务获取天气信息\n      return weatherService.getNowWeather();\n    }\n    return null;\n  }\n\n  // 根据情绪生成互动动作\n  generateActions(emotion) {\n    const actions = [];\n    switch (emotion) {\n      case 'happy':\n        actions.push({\n          type: 'animation',\n          name: 'bounce'\n        }, {\n          type: 'sound',\n          sound: 'purr'\n        });\n        break;\n      case 'sad':\n        actions.push({\n          type: 'sound',\n          sound: 'rain'\n        }, {\n          type: 'animation',\n          name: 'float'\n        });\n        break;\n      case 'worried':\n        actions.push({\n          type: 'animation',\n          name: 'wave'\n        }, {\n          type: 'sound',\n          sound: 'music'\n        });\n        break;\n      case 'excited':\n        actions.push({\n          type: 'animation',\n          name: 'spin'\n        }, {\n          type: 'sound',\n          sound: 'purr'\n        });\n        break;\n      case 'neutral':\n        actions.push({\n          type: 'animation',\n          name: 'float'\n        });\n        break;\n    }\n    return actions;\n  }\n}\nexport default new ChatService();","map":{"version":3,"names":["weatherService","xfyunService","ChatService","constructor","messages","analyzeEmotion","text","console","log","prompt","response","chat","role","content","emotion","trim","toLowerCase","validEmotions","includes","error","generateResponse","isWeatherQuery","weather","getNowWeather","generateWeatherDescription","actions","emotionEmojis","emojiPrefix","generateActions","generateLocalResponse","kaomojis","emojis","randomKaomoji","Math","floor","random","length","randomEmoji1","randomEmoji2","weatherKeywords","some","keyword","push","type","name","sound"],"sources":["E:/code/PersonalBolg1/frontend/src/services/chat.js"],"sourcesContent":["import weatherService from './weather';\nimport xfyunService from './xfyun';\n\nclass ChatService {\n  constructor() {\n    this.messages = [];\n  }\n\n  // 分析用户输入的情绪\n  async analyzeEmotion(text) {\n    try {\n      console.log('开始分析情绪:', text);\n      \n      // 使用讯飞API进行情绪分析\n      const prompt = `请分析以下文本的情绪，只返回一个词：\"happy\"、\"sad\"、\"worried\"、\"excited\"或\"neutral\"，不要返回其他内容。\\n文本：${text}`;\n      const response = await xfyunService.chat([{ role: 'user', content: prompt }]);\n      console.log('情绪分析结果:', response);\n      \n      const emotion = response.trim().toLowerCase();\n      \n      // 确保返回的是有效的情绪类型\n      const validEmotions = ['happy', 'sad', 'worried', 'excited', 'neutral'];\n      return validEmotions.includes(emotion) ? emotion : 'neutral';\n    } catch (error) {\n      console.error('情绪分析失败:', error);\n      return 'neutral';\n    }\n  }\n\n  // 生成回复\n  async generateResponse(text, emotion) {\n    try {\n      console.log('开始生成回复:', { text, emotion });\n      \n      // 检查是否是天气相关询问\n      if (this.isWeatherQuery(text)) {\n        const weather = await weatherService.getNowWeather();\n        if (weather) {\n          return {\n            text: weatherService.generateWeatherDescription(weather),\n            weather,\n            actions: []\n          };\n        }\n      }\n\n      // 根据情绪选择适当的表情符号前缀\n      const emotionEmojis = {\n        'happy': '😊💕',\n        'sad': '😔💙',\n        'worried': '😟💭',\n        'excited': '😃✨',\n        'neutral': '😌☀️',\n        'positive': '😊💕',\n        'negative': '😔💙'\n      };\n      \n      const emojiPrefix = emotionEmojis[emotion] || '😊';\n      \n      // 使用讯飞API生成回复\n      const prompt = `你是一个可爱的AI助手\"糖球\"，性格温柔活泼。请根据以下要求回复：\n1. 使用可爱、治愈的语气\n2. 每句话结尾加上可爱的颜文字，如(◕‿◕✿) (＾▽＾) (≧◡≦) (｡◕‿◕｡) 等\n3. 回复长度控制在100字以内\n4. 当前用户情绪：${emotion}，请相应调整回复语气\n5. 在回复中使用emoji表情，如😊 💕 ✨ 🌈 🎀 🌸 等\n6. 回复内容要亲切、有趣、贴近生活\n\n用户说：${text}`;\n\n      console.log('发送到讯飞的提示词:', prompt);\n      \n      const messages = [\n        { role: 'system', content: '你是一个可爱的AI助手\"糖球\"，性格温柔活泼，会使用丰富的表情符号和emoji，语气温暖亲切。' },\n        { role: 'user', content: prompt }\n      ];\n      \n      const response = await xfyunService.chat(messages);\n      console.log('讯飞返回的回复:', response);\n\n      // 根据情绪添加互动动作\n      const actions = this.generateActions(emotion);\n\n      return {\n        text: response,\n        actions\n      };\n    } catch (error) {\n      console.error('生成回复失败:', error);\n      // 使用本地回复作为备选\n      return this.generateLocalResponse(text, emotion);\n    }\n  }\n  \n  // 生成本地回复作为备选\n  generateLocalResponse(text, emotion) {\n    console.log('使用本地回复备选');\n    \n    // 可爱的表情符号集合\n    const kaomojis = ['(◕‿◕✿)', '(＾▽＾)', '(≧◡≦)', '(｡◕‿◕｡)', '(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧', '(づ｡◕‿‿◕｡)づ', '(ノ^_^)ノ', '(●ˇ∀ˇ●)', '(*^▽^*)', '(✿◠‿◠)'];\n    const emojis = ['😊', '💕', '✨', '🌈', '🎀', '🌸', '🍭', '🎵', '🌟', '💫', '💝'];\n    \n    // 随机选择表情和emoji\n    const randomKaomoji = kaomojis[Math.floor(Math.random() * kaomojis.length)];\n    const randomEmoji1 = emojis[Math.floor(Math.random() * emojis.length)];\n    const randomEmoji2 = emojis[Math.floor(Math.random() * emojis.length)];\n    \n    // 根据情绪生成回复\n    let response;\n    if (text.includes('你好') || text.includes('嗨') || text.includes('hi') || text.includes('hello')) {\n      response = `${randomEmoji1} 你好呀！我是糖球助手，很高兴见到你！有什么我能帮到你的吗？${randomKaomoji}`;\n    } else if (text.includes('天气')) {\n      response = `${randomEmoji1} 想知道天气呀？稍等我查一下哦~可以告诉我你想查询哪个城市的天气吗？${randomKaomoji}`;\n    } else if (emotion === 'happy' || emotion === 'positive') {\n      response = `${randomEmoji1} 看到你这么开心，我也好高兴呀！希望你的好心情能一直持续下去哦！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'sad' || emotion === 'negative') {\n      response = `${randomEmoji1} 别难过啦~有什么事情可以和我分享，我会一直陪着你的！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'worried') {\n      response = `${randomEmoji1} 不要担心太多啦，深呼吸，放轻松，一切都会好起来的！${randomEmoji2} ${randomKaomoji}`;\n    } else if (emotion === 'excited') {\n      response = `${randomEmoji1} 哇！你看起来超兴奋的！发生了什么好事情吗？和我分享一下吧！${randomEmoji2} ${randomKaomoji}`;\n    } else {\n      response = `${randomEmoji1} 嗯嗯，我懂你的意思啦！还有什么想聊的吗？我们可以聊任何你感兴趣的话题哦！${randomEmoji2} ${randomKaomoji}`;\n    }\n    \n    return {\n      text: response,\n      actions: this.generateActions(emotion)\n    };\n  }\n\n  // 检查是否是天气相关询问\n  isWeatherQuery(text) {\n    const weatherKeywords = ['天气', '下雨', '温度', '冷', '热', '气温', '预报'];\n    \n    if (weatherKeywords.some(keyword => text.includes(keyword))) {\n      // 直接调用天气服务获取天气信息\n      return weatherService.getNowWeather();\n    }\n    \n    return null;\n  }\n\n  // 根据情绪生成互动动作\n  generateActions(emotion) {\n    const actions = [];\n\n    switch (emotion) {\n      case 'happy':\n        actions.push(\n          { type: 'animation', name: 'bounce' },\n          { type: 'sound', sound: 'purr' }\n        );\n        break;\n      case 'sad':\n        actions.push(\n          { type: 'sound', sound: 'rain' },\n          { type: 'animation', name: 'float' }\n        );\n        break;\n      case 'worried':\n        actions.push(\n          { type: 'animation', name: 'wave' },\n          { type: 'sound', sound: 'music' }\n        );\n        break;\n      case 'excited':\n        actions.push(\n          { type: 'animation', name: 'spin' },\n          { type: 'sound', sound: 'purr' }\n        );\n        break;\n      case 'neutral':\n        actions.push(\n          { type: 'animation', name: 'float' }\n        );\n        break;\n    }\n\n    return actions;\n  }\n}\n\nexport default new ChatService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}