{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-assistant-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-header\"\n};\nconst _hoisted_3 = {\n  class: \"assistant-info\"\n};\nconst _hoisted_4 = {\n  class: \"avatar\"\n};\nconst _hoisted_5 = {\n  class: \"status\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"weather-box\"\n};\nconst _hoisted_7 = {\n  class: \"weather-icon\"\n};\nconst _hoisted_8 = {\n  class: \"weather-text\"\n};\nconst _hoisted_9 = {\n  class: \"messages-container\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"welcome-message\"\n};\nconst _hoisted_11 = {\n  class: \"suggestion-chips\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"message-avatar\"\n};\nconst _hoisted_13 = {\n  class: \"message-content\"\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  class: \"timestamp\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"message-avatar user\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"typing-indicator\"\n};\nconst _hoisted_18 = {\n  class: \"input-container\"\n};\nconst _hoisted_19 = [\"disabled\"];\nconst _hoisted_20 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"avatar-face\", _ctx.currentEmotion])\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"eyes\"\n  }, [_createElementVNode(\"div\", {\n    class: \"eye left\"\n  }), _createElementVNode(\"div\", {\n    class: \"eye right\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"mouth\", _ctx.currentEmotion])\n  }, null, 2 /* CLASS */)], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"糖球助手\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($options.getEmotionText()), 1 /* TEXT */)])]), _ctx.weatherInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($options.getWeatherEmoji()), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.weatherInfo.city), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(_ctx.weatherInfo.temp) + \"°C \" + _toDisplayString(_ctx.weatherInfo.condition), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_ctx.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"欢迎来到甜梦星球！\", -1 /* HOISTED */)), _cache[11] || (_cache[11] = _createElementVNode(\"p\", null, \"我是你的糖球助手，有什么我能帮你的吗？\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.sendSuggestion('介绍一下甜梦星球'))\n  }, \"介绍一下甜梦星球\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.sendSuggestion('今天天气怎么样'))\n  }, \"天气怎么样\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.sendSuggestion('有什么游戏可以玩'))\n  }, \"有什么游戏可以玩\")])])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.isUser ? 'user-message' : 'assistant-message'])\n    }, [!message.isUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"mini-sugar-ball\", message.emotion || _ctx.currentEmotion])\n    }, null, 2 /* CLASS */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"p\", {\n      innerHTML: $options.formatMessage(message.text)\n    }, null, 8 /* PROPS */, _hoisted_14), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.formatTime(message.timestamp)), 1 /* TEXT */)]), message.isUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [...(_cache[12] || (_cache[12] = [_createElementVNode(\"div\", {\n      class: \"user-icon\"\n    }, \"👤\", -1 /* HOISTED */)]))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), _ctx.isTyping ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _cache[13] || (_cache[13] = [_createElementVNode(\"span\", null, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_18, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userInput = $event),\n    onKeyup: _cache[4] || (_cache[4] = _withKeys((...args) => _ctx.sendMessage && _ctx.sendMessage(...args), [\"enter\"])),\n    placeholder: \"和糖球聊聊吧...\",\n    disabled: _ctx.isTyping\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_19), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.sendMessage && _ctx.sendMessage(...args)),\n    disabled: !$data.userInput.trim() || _ctx.isTyping\n  }, \" 发送 \", 8 /* PROPS */, _hoisted_20), _createElementVNode(\"button\", {\n    class: _normalizeClass([\"sound-toggle\", {\n      active: _ctx.soundEnabled\n    }]),\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.toggleSound && $options.toggleSound(...args))\n  }, _toDisplayString(_ctx.soundEnabled ? '🔊' : '🔇'), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    class: \"clear-chat\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.clearChat && $options.clearChat(...args))\n  }, \" 🗑️ \")])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_normalizeClass","_ctx","currentEmotion","_hoisted_5","_toDisplayString","$options","getEmotionText","weatherInfo","_hoisted_6","_hoisted_7","getWeatherEmoji","_hoisted_8","city","temp","condition","_createCommentVNode","_hoisted_9","messages","length","_hoisted_10","_hoisted_11","onClick","_cache","$event","sendSuggestion","_Fragment","_renderList","message","index","isUser","_hoisted_12","emotion","_hoisted_13","innerHTML","formatMessage","text","_hoisted_14","_hoisted_15","formatTime","timestamp","_hoisted_16","isTyping","_hoisted_17","_hoisted_18","type","$data","userInput","onKeyup","_withKeys","args","sendMessage","placeholder","disabled","_hoisted_19","trim","_hoisted_20","active","soundEnabled","toggleSound","clearChat"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\components\\ChatAssistant.vue"],"sourcesContent":["<template>\n  <div class=\"chat-assistant-container\">\n    <div class=\"chat-header\">\n      <div class=\"assistant-info\">\n        <div class=\"avatar\">\n          <div class=\"avatar-face\" :class=\"currentEmotion\">\n            <div class=\"eyes\">\n              <div class=\"eye left\"></div>\n              <div class=\"eye right\"></div>\n            </div>\n            <div class=\"mouth\" :class=\"currentEmotion\"></div>\n          </div>\n        </div>\n        <div class=\"status\">\n          <h3>糖球助手</h3>\n          <p>{{ getEmotionText() }}</p>\n        </div>\n      </div>\n      <div class=\"weather-box\" v-if=\"weatherInfo\">\n        <div class=\"weather-icon\">{{ getWeatherEmoji() }}</div>\n        <div class=\"weather-text\">\n          <p>{{ weatherInfo.city }}</p>\n          <p>{{ weatherInfo.temp }}°C {{ weatherInfo.condition }}</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"messages-container\" ref=\"messagesContainer\">\n      <div v-if=\"messages.length === 0\" class=\"welcome-message\">\n        <h3>欢迎来到甜梦星球！</h3>\n        <p>我是你的糖球助手，有什么我能帮你的吗？</p>\n        <div class=\"suggestion-chips\">\n          <button @click=\"sendSuggestion('介绍一下甜梦星球')\">介绍一下甜梦星球</button>\n          <button @click=\"sendSuggestion('今天天气怎么样')\">天气怎么样</button>\n          <button @click=\"sendSuggestion('有什么游戏可以玩')\">有什么游戏可以玩</button>\n        </div>\n      </div>\n      \n      <div \n        v-for=\"(message, index) in messages\" \n        :key=\"index\" \n        :class=\"['message', message.isUser ? 'user-message' : 'assistant-message']\"\n      >\n        <div class=\"message-avatar\" v-if=\"!message.isUser\">\n          <div class=\"mini-sugar-ball\" :class=\"message.emotion || currentEmotion\"></div>\n        </div>\n        <div class=\"message-content\">\n          <p v-html=\"formatMessage(message.text)\"></p>\n          <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\n        </div>\n        <div class=\"message-avatar user\" v-if=\"message.isUser\">\n          <div class=\"user-icon\">👤</div>\n        </div>\n      </div>\n      \n      <div class=\"typing-indicator\" v-if=\"isTyping\">\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n    \n    <div class=\"input-container\">\n      <input \n        type=\"text\" \n        v-model=\"userInput\" \n        @keyup.enter=\"sendMessage\" \n        placeholder=\"和糖球聊聊吧...\" \n        :disabled=\"isTyping\"\n      />\n      <button @click=\"sendMessage\" :disabled=\"!userInput.trim() || isTyping\">\n        发送\n      </button>\n      <button class=\"sound-toggle\" @click=\"toggleSound\" :class=\"{active: soundEnabled}\">\n        {{ soundEnabled ? '🔊' : '🔇' }}\n      </button>\n      <button class=\"clear-chat\" @click=\"clearChat\">\n        🗑️\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\n\nexport default {\n  name: 'ChatAssistant',\n  data() {\n    return {\n      userInput: '',\n      messageAudio: null,\n      typingAudio: null\n    };\n  },\n  computed: {\n    ...mapState('chat', ['isTyping', 'weatherInfo', 'soundEnabled']),\n    ...mapGetters('chat', ['messages', 'currentEmotion'])\n  },\n  methods: {\n    ...mapActions('chat', ['sendMessage', 'clearMessages']),\n    ...mapMutations('chat', ['toggleSoundEffects']),\n    \n    formatMessage(text) {\n      // 替换表情符号\n      return text\n        .replace(/\\(=\\^･ω･\\^\\)=/g, '<span class=\"emoji\">\\\\(=^･ω･^)=/</span>')\n        .replace(/\\(✧ω✧\\)/g, '<span class=\"emoji\">(✧ω✧)</span>')\n        .replace(/~\\(=\\^･ω･\\^\\)~/g, '<span class=\"emoji\">~(=^･ω･^)~</span>');\n    },\n    \n    getEmotionText() {\n      const emotions = {\n        happy: '开心 😊',\n        sad: '难过 😢',\n        angry: '生气 😠',\n        surprised: '惊讶 😲',\n        confused: '困惑 🤔',\n        tired: '疲倦 😴',\n        excited: '兴奋 😃',\n        neutral: '平静 😌'\n      };\n      return emotions[this.currentEmotion] || '平静 😌';\n    },\n    \n    getWeatherEmoji() {\n      if (!this.weatherInfo) return '🌈';\n      \n      const condition = this.weatherInfo.condition.toLowerCase();\n      \n      if (condition.includes('晴')) return '☀️';\n      if (condition.includes('云') || condition.includes('阴')) return '☁️';\n      if (condition.includes('雨')) return '🌧️';\n      if (condition.includes('雪')) return '❄️';\n      if (condition.includes('雷') || condition.includes('电')) return '⛈️';\n      if (condition.includes('雾')) return '🌫️';\n      \n      return '🌈';\n    },\n    \n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    },\n    \n    handleSendMessage() {\n      if (!this.userInput.trim() || this.isTyping) return;\n      \n      this.sendMessage(this.userInput);\n      this.playSound('message');\n      this.userInput = '';\n      \n      if (this.isTyping) {\n        this.playSound('typing');\n      }\n    },\n    \n    sendSuggestion(text) {\n      this.userInput = text;\n      this.handleSendMessage();\n    },\n    \n    playSound(type) {\n      if (!this.soundEnabled) return;\n      \n      // 在真实环境中，这里应该播放音频\n      console.log(`Playing ${type} sound`);\n    },\n    \n    toggleSound() {\n      this.toggleSoundEffects();\n    },\n    \n    clearChat() {\n      if (confirm('确定要清除所有聊天记录吗？')) {\n        this.clearMessages();\n      }\n    },\n    \n    scrollToBottom() {\n      this.$nextTick(() => {\n        if (this.$refs.messagesContainer) {\n          this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n        }\n      });\n    }\n  },\n  watch: {\n    messages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    },\n    isTyping(newVal) {\n      if (newVal && this.soundEnabled) {\n        this.playSound('typing');\n      }\n    }\n  },\n  mounted() {\n    this.scrollToBottom();\n  },\n  beforeUnmount() {\n    // 清理资源\n    if (this.messageAudio) {\n      this.messageAudio = null;\n    }\n    if (this.typingAudio) {\n      this.typingAudio = null;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-assistant-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 120px);\n  max-width: 1000px;\n  margin: 0 auto;\n  background-color: #fff9fc;\n  border-radius: 20px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%);\n  color: #fff;\n}\n\n.assistant-info {\n  display: flex;\n  align-items: center;\n}\n\n.avatar {\n  width: 60px;\n  height: 60px;\n  margin-right: 15px;\n  position: relative;\n}\n\n.avatar-face {\n  width: 100%;\n  height: 100%;\n  background-color: #ffcaf2;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.avatar-face.happy {\n  background-color: #ffcaf2;\n}\n\n.avatar-face.sad {\n  background-color: #c4b0ff;\n}\n\n.avatar-face.angry {\n  background-color: #ffb7b7;\n}\n\n.avatar-face.confused {\n  background-color: #b8e4ff;\n}\n\n.eyes {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.eye {\n  width: 10px;\n  height: 10px;\n  background-color: #333;\n  border-radius: 50%;\n  margin: 0 5px;\n}\n\n.mouth {\n  width: 20px;\n  height: 10px;\n  border-radius: 0 0 10px 10px;\n  background-color: #333;\n  transition: all 0.3s ease;\n}\n\n.mouth.happy {\n  border-radius: 0 0 10px 10px;\n}\n\n.mouth.sad {\n  border-radius: 10px 10px 0 0;\n  transform: translateY(5px);\n}\n\n.mouth.angry {\n  border-radius: 0;\n  transform: scaleY(0.5);\n}\n\n.mouth.confused {\n  width: 10px;\n  border-radius: 50%;\n}\n\n.status h3 {\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n\n.status p {\n  margin: 5px 0 0;\n  font-size: 0.9rem;\n  opacity: 0.8;\n}\n\n.weather-box {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 8px 15px;\n  border-radius: 30px;\n}\n\n.weather-icon {\n  font-size: 2rem;\n  margin-right: 10px;\n}\n\n.weather-text p {\n  margin: 0;\n  font-size: 0.9rem;\n  line-height: 1.2;\n}\n\n.messages-container {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background-color: #fff9fc;\n}\n\n.welcome-message {\n  text-align: center;\n  padding: 40px 20px;\n  background-color: rgba(255, 255, 255, 0.7);\n  border-radius: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n}\n\n.welcome-message h3 {\n  color: #c4b0ff;\n  margin-top: 0;\n}\n\n.suggestion-chips {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.suggestion-chips button {\n  background-color: #c4b0ff;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 20px;\n  color: white;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.suggestion-chips button:hover {\n  background-color: #ffcaf2;\n  transform: translateY(-2px);\n}\n\n.message {\n  display: flex;\n  margin-bottom: 20px;\n  align-items: flex-start;\n}\n\n.user-message {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.mini-sugar-ball {\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: #ffcaf2;\n  position: relative;\n}\n\n.mini-sugar-ball:after {\n  content: '';\n  position: absolute;\n  top: 10px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  width: 15px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #333;\n}\n\n.mini-sugar-ball.happy {\n  background-color: #ffcaf2;\n}\n\n.mini-sugar-ball.sad {\n  background-color: #c4b0ff;\n}\n\n.mini-sugar-ball.angry {\n  background-color: #ffb7b7;\n}\n\n.user-icon {\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background-color: #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n}\n\n.message-content {\n  max-width: 70%;\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n  margin: 0 10px;\n}\n\n.user-message .message-content {\n  background-color: #c4b0ff;\n  color: white;\n  border-bottom-right-radius: 5px;\n}\n\n.assistant-message .message-content {\n  background-color: white;\n  color: #333;\n  border-bottom-left-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.message-content p {\n  margin: 0;\n  line-height: 1.4;\n}\n\n.timestamp {\n  font-size: 0.7rem;\n  opacity: 0.7;\n  position: absolute;\n  bottom: -18px;\n  right: 5px;\n}\n\n.user-message .timestamp {\n  left: 5px;\n}\n\n.typing-indicator {\n  padding: 12px 15px;\n  background-color: white;\n  border-radius: 18px;\n  width: 60px;\n  display: flex;\n  justify-content: center;\n  margin-left: 50px;\n  border-bottom-left-radius: 5px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.typing-indicator span {\n  width: 8px;\n  height: 8px;\n  margin: 0 2px;\n  background-color: #c4b0ff;\n  border-radius: 50%;\n  display: inline-block;\n  animation: bounce 1.3s infinite ease-in-out;\n}\n\n.typing-indicator span:nth-child(1) {\n  animation-delay: 0s;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.15s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.3s;\n}\n\n@keyframes bounce {\n  0%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-8px);\n  }\n}\n\n.input-container {\n  display: flex;\n  padding: 15px;\n  background-color: white;\n  border-top: 1px solid #f0f0f0;\n}\n\n.input-container input {\n  flex: 1;\n  padding: 12px 20px;\n  border: 2px solid #f0f0f0;\n  border-radius: 25px;\n  font-size: 1rem;\n  transition: all 0.3s;\n}\n\n.input-container input:focus {\n  outline: none;\n  border-color: #c4b0ff;\n}\n\n.input-container button {\n  margin-left: 10px;\n  padding: 10px 20px;\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%);\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: all 0.3s;\n}\n\n.input-container button:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.input-container button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.sound-toggle, .clear-chat {\n  width: 40px;\n  height: 40px;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem !important;\n  background: #f5f5f5 !important;\n  color: #666 !important;\n}\n\n.sound-toggle.active {\n  background: linear-gradient(135deg, #ffcaf2 0%, #c4b0ff 100%) !important;\n  color: white !important;\n}\n\n.emoji {\n  color: #c4b0ff;\n  font-weight: 500;\n}\n\n@media (max-width: 768px) {\n  .chat-assistant-container {\n    height: calc(100vh - 80px);\n    border-radius: 0;\n  }\n  \n  .message-content {\n    max-width: 80%;\n  }\n  \n  .weather-text {\n    display: none;\n  }\n}\n\n@media (max-width: 480px) {\n  .chat-header {\n    padding: 10px;\n  }\n  \n  .avatar {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .status h3 {\n    font-size: 1rem;\n  }\n  \n  .input-container {\n    padding: 10px;\n  }\n  \n  .input-container input {\n    padding: 10px 15px;\n  }\n  \n  .sound-toggle, .clear-chat {\n    width: 36px;\n    height: 36px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}