{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"emoji-picker-header\"\n};\nconst _hoisted_2 = {\n  class: \"emoji-groups\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"emoji-content\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"emoji-picker\",\n    style: _normalizeStyle($setup.computedPosition),\n    ref: \"emojiPicker\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"emoji-picker-title\"\n  }, \"表情\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"emoji-picker-close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.close && $setup.close(...args))\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.groups, (group, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      class: _normalizeClass([\"emoji-group-btn\", {\n        active: $setup.activeGroup === index\n      }]),\n      onClick: $event => $setup.activeGroup = index\n    }, _toDisplayString(group.icon), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.currentEmojis, (emoji, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"emoji-item\",\n      onClick: $event => $setup.selectEmoji(emoji)\n    }, _toDisplayString(emoji.char), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$props","visible","_createElementBlock","key","style","_normalizeStyle","$setup","computedPosition","ref","_createElementVNode","_hoisted_1","onClick","_cache","args","close","_hoisted_2","_Fragment","_renderList","groups","group","index","_normalizeClass","active","activeGroup","$event","icon","_hoisted_3","_hoisted_4","currentEmojis","emoji","selectEmoji","char","_hoisted_5","_createCommentVNode"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\components\\EmojiPicker.vue"],"sourcesContent":["<template>\n  <div \n    v-if=\"visible\" \n    class=\"emoji-picker\" \n    :style=\"computedPosition\"\n    ref=\"emojiPicker\"\n  >\n    <div class=\"emoji-picker-header\">\n      <div class=\"emoji-picker-title\">表情</div>\n      <button class=\"emoji-picker-close\" @click=\"close\">×</button>\n    </div>\n    <div class=\"emoji-groups\">\n      <button \n        v-for=\"(group, index) in groups\" \n        :key=\"index\"\n        class=\"emoji-group-btn\"\n        :class=\"{ active: activeGroup === index }\"\n        @click=\"activeGroup = index\"\n      >\n        {{ group.icon }}\n      </button>\n    </div>\n    <div class=\"emoji-content\">\n      <div \n        v-for=\"(emoji, index) in currentEmojis\" \n        :key=\"index\" \n        class=\"emoji-item\"\n        @click=\"selectEmoji(emoji)\"\n      >\n        {{ emoji.char }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue';\n\nexport default {\n  name: 'EmojiPicker',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: Object,\n      default: () => ({ top: '100%', left: '0' })\n    }\n  },\n  emits: ['select', 'close'],\n  setup(props, { emit }) {\n    const emojiPicker = ref(null);\n    const activeGroup = ref(0);\n    \n    // 表情分组\n    const groups = [\n      { \n        icon: '😊',\n        emojis: [\n          { char: '😊', name: 'smile' },\n          { char: '😂', name: 'joy' },\n          { char: '🥰', name: 'in_love' },\n          { char: '😍', name: 'heart_eyes' },\n          { char: '🤗', name: 'hug' },\n          { char: '🙂', name: 'slightly_smile' }\n        ]\n      },\n      {\n        icon: '👍',\n        emojis: [\n          { char: '👍', name: 'thumbs_up' },\n          { char: '👏', name: 'clap' },\n          { char: '🙏', name: 'pray' },\n          { char: '👋', name: 'wave' },\n          { char: '✌️', name: 'victory' },\n          { char: '👌', name: 'ok' }\n        ]\n      },\n      {\n        icon: '🎉',\n        emojis: [\n          { char: '🎉', name: 'party' },\n          { char: '🎁', name: 'gift' },\n          { char: '🎂', name: 'cake' },\n          { char: '🎊', name: 'confetti' },\n          { char: '🍰', name: 'shortcake' },\n          { char: '🍭', name: 'lollipop' }\n        ]\n      },\n      {\n        icon: '🌈',\n        emojis: [\n          { char: '🌈', name: 'rainbow' },\n          { char: '🌞', name: 'sun' },\n          { char: '🌙', name: 'moon' },\n          { char: '⭐', name: 'star' },\n          { char: '🌟', name: 'glowing_star' },\n          { char: '✨', name: 'sparkles' }\n        ]\n      }\n    ];\n    \n    // 当前分组的表情\n    const currentEmojis = computed(() => {\n      return groups[activeGroup.value].emojis;\n    });\n    \n    // 处理位置计算\n    const computedPosition = computed(() => {\n      return {\n        top: props.position.top || '100%',\n        left: props.position.left || '0',\n        right: props.position.right || 'auto',\n        bottom: props.position.bottom || 'auto'\n      };\n    });\n    \n    // 选择表情\n    const selectEmoji = (emoji) => {\n      emit('select', emoji);\n    };\n    \n    // 关闭选择器\n    const close = () => {\n      emit('close');\n    };\n    \n    // 点击外部关闭选择器\n    const handleClickOutside = (event) => {\n      if (emojiPicker.value && !emojiPicker.value.contains(event.target)) {\n        emit('close');\n      }\n    };\n    \n    onMounted(() => {\n      document.addEventListener('click', handleClickOutside);\n    });\n    \n    onBeforeUnmount(() => {\n      document.removeEventListener('click', handleClickOutside);\n    });\n    \n    // 当显示状态变化时重置分组\n    watch(() => props.visible, (newVisible) => {\n      if (newVisible) {\n        activeGroup.value = 0;\n      }\n    });\n    \n    return {\n      emojiPicker,\n      activeGroup,\n      groups,\n      currentEmojis,\n      computedPosition,\n      selectEmoji,\n      close\n    };\n  }\n};\n</script>\n\n<style scoped>\n.emoji-picker {\n  position: absolute;\n  width: 250px;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  overflow: hidden;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n}\n\n.emoji-picker-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 12px;\n  border-bottom: 1px solid #eee;\n}\n\n.emoji-picker-title {\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n}\n\n.emoji-picker-close {\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n  color: #999;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n}\n\n.emoji-picker-close:hover {\n  background: #f0f0f0;\n  color: #666;\n}\n\n.emoji-groups {\n  display: flex;\n  border-bottom: 1px solid #eee;\n  padding: 8px;\n}\n\n.emoji-group-btn {\n  background: none;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n  margin-right: 4px;\n}\n\n.emoji-group-btn.active {\n  background: #f0f0f0;\n}\n\n.emoji-content {\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  gap: 5px;\n  padding: 10px;\n  height: 150px;\n  overflow-y: auto;\n}\n\n.emoji-item {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 4px;\n}\n\n.emoji-item:hover {\n  background: #f0f0f0;\n}\n</style>"],"mappings":";;EAOSA,KAAK,EAAC;AAAqB;;EAI3BA,KAAK,EAAC;AAAc;mBAX7B;;EAsBSA,KAAK,EAAC;AAAe;mBAtB9B;;SAEUC,MAAA,CAAAC,OAAO,I,cADfC,mBAAA,CA+BM;IAhCRC,GAAA;IAGIJ,KAAK,EAAC,cAAc;IACnBK,KAAK,EAJVC,eAAA,CAIYC,MAAA,CAAAC,gBAAgB;IACxBC,GAAG,EAAC;MAEJC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAwC;IAAnCV,KAAK,EAAC;EAAoB,GAAC,IAAE,sBAClCU,mBAAA,CAA4D;IAApDV,KAAK,EAAC,oBAAoB;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,MAAA,CAAAQ,KAAA,IAAAR,MAAA,CAAAQ,KAAA,IAAAD,IAAA,CAAK;KAAE,GAAC,E,GAErDJ,mBAAA,CAUM,OAVNM,UAUM,I,kBATJb,mBAAA,CAQSc,SAAA,QApBfC,WAAA,CAaiCX,MAAA,CAAAY,MAAM,EAbvC,CAagBC,KAAK,EAAEC,KAAK;yBADtBlB,mBAAA,CAQS;MANNC,GAAG,EAAEiB,KAAK;MACXrB,KAAK,EAfbsB,eAAA,EAec,iBAAiB;QAAAC,MAAA,EACLhB,MAAA,CAAAiB,WAAW,KAAKH;MAAK;MACtCT,OAAK,EAAAa,MAAA,IAAElB,MAAA,CAAAiB,WAAW,GAAGH;wBAEnBD,KAAK,CAACM,IAAI,gCAnBrBC,UAAA;oCAsBIjB,mBAAA,CASM,OATNkB,UASM,I,kBARJzB,mBAAA,CAOMc,SAAA,QA9BZC,WAAA,CAwBiCX,MAAA,CAAAsB,aAAa,EAxB9C,CAwBgBC,KAAK,EAAET,KAAK;yBADtBlB,mBAAA,CAOM;MALHC,GAAG,EAAEiB,KAAK;MACXrB,KAAK,EAAC,YAAY;MACjBY,OAAK,EAAAa,MAAA,IAAElB,MAAA,CAAAwB,WAAW,CAACD,KAAK;wBAEtBA,KAAK,CAACE,IAAI,wBA7BrBC,UAAA;uDAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}