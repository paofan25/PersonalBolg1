{"ast":null,"code":"import { getToken, setToken, removeToken } from '@/utils/auth';\nimport { login, logout, getInfo, register, updateProfile } from '@/api/user';\n\n// 初始状态\nconst state = {\n  token: getToken(),\n  user: null,\n  loading: false,\n  error: null\n};\n\n// getters\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user,\n  isLoading: state => state.loading,\n  authError: state => state.error\n};\n\n// mutations\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER(state, user) {\n    state.user = user;\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  },\n  RESET_STATE(state) {\n    state.token = '';\n    state.user = null;\n    state.error = null;\n    removeToken();\n  }\n};\n\n// actions\nconst actions = {\n  // 用户登录\n  async login({\n    commit\n  }, {\n    email,\n    password,\n    remember\n  }) {\n    try {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      const {\n        data\n      } = await login({\n        email: email.trim(),\n        password\n      });\n      if (remember) {\n        setToken(data.token);\n      }\n      commit('SET_TOKEN', data.token);\n\n      // 获取用户信息\n      const userInfo = await getInfo(data.token);\n      commit('SET_USER', userInfo.data);\n      return data;\n    } catch (error) {\n      commit('SET_ERROR', error.message || '登录失败');\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 用户注册\n  async register({\n    commit\n  }, {\n    username,\n    email,\n    password\n  }) {\n    try {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      const {\n        data\n      } = await register({\n        username,\n        email,\n        password\n      });\n      commit('SET_TOKEN', data.token);\n      setToken(data.token);\n\n      // 获取用户信息\n      const userInfo = await getInfo(data.token);\n      commit('SET_USER', userInfo.data);\n      return data;\n    } catch (error) {\n      commit('SET_ERROR', error.message || '注册失败');\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 获取用户信息\n  async getInfo({\n    commit,\n    state\n  }) {\n    try {\n      const {\n        data\n      } = await getInfo(state.token);\n      commit('SET_USER', data);\n      return data;\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      throw error;\n    }\n  },\n  // 更新用户资料\n  async updateProfile({\n    commit\n  }, profileData) {\n    try {\n      commit('SET_LOADING', true);\n      const {\n        data\n      } = await updateProfile(profileData);\n      commit('SET_USER', data);\n      return data;\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      throw error;\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  // 用户登出\n  async logout({\n    commit\n  }) {\n    try {\n      await logout();\n      removeToken();\n      commit('RESET_STATE');\n    } catch (error) {\n      console.error('登出失败:', error);\n      // 即使请求失败，也清除本地状态\n      removeToken();\n      commit('RESET_STATE');\n      throw error;\n    }\n  },\n  // 重置 Token\n  resetToken({\n    commit\n  }) {\n    removeToken();\n    commit('RESET_STATE');\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["getToken","setToken","removeToken","login","logout","getInfo","register","updateProfile","state","token","user","loading","error","getters","isLoggedIn","currentUser","isLoading","authError","mutations","SET_TOKEN","SET_USER","SET_LOADING","SET_ERROR","RESET_STATE","actions","commit","email","password","remember","data","trim","userInfo","message","username","profileData","console","resetToken","namespaced"],"sources":["E:/code/PersonalBolg1/frontend/src/store/modules/auth.js"],"sourcesContent":["import { getToken, setToken, removeToken } from '@/utils/auth'\nimport { login, logout, getInfo, register, updateProfile } from '@/api/user'\n\n// 初始状态\nconst state = {\n  token: getToken(),\n  user: null,\n  loading: false,\n  error: null\n}\n\n// getters\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user,\n  isLoading: state => state.loading,\n  authError: state => state.error\n}\n\n// mutations\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER(state, user) {\n    state.user = user\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_ERROR(state, error) {\n    state.error = error\n  },\n  RESET_STATE(state) {\n    state.token = ''\n    state.user = null\n    state.error = null\n    removeToken()\n  }\n}\n\n// actions\nconst actions = {\n  // 用户登录\n  async login({ commit }, { email, password, remember }) {\n    try {\n      commit('SET_LOADING', true)\n      commit('SET_ERROR', null)\n      \n      const { data } = await login({ email: email.trim(), password })\n      \n      if (remember) {\n        setToken(data.token)\n      }\n      \n      commit('SET_TOKEN', data.token)\n      \n      // 获取用户信息\n      const userInfo = await getInfo(data.token)\n      commit('SET_USER', userInfo.data)\n      \n      return data\n    } catch (error) {\n      commit('SET_ERROR', error.message || '登录失败')\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 用户注册\n  async register({ commit }, { username, email, password }) {\n    try {\n      commit('SET_LOADING', true)\n      commit('SET_ERROR', null)\n      \n      const { data } = await register({ username, email, password })\n      \n      commit('SET_TOKEN', data.token)\n      setToken(data.token)\n      \n      // 获取用户信息\n      const userInfo = await getInfo(data.token)\n      commit('SET_USER', userInfo.data)\n      \n      return data\n    } catch (error) {\n      commit('SET_ERROR', error.message || '注册失败')\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 获取用户信息\n  async getInfo({ commit, state }) {\n    try {\n      const { data } = await getInfo(state.token)\n      commit('SET_USER', data)\n      return data\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      throw error\n    }\n  },\n\n  // 更新用户资料\n  async updateProfile({ commit }, profileData) {\n    try {\n      commit('SET_LOADING', true)\n      const { data } = await updateProfile(profileData)\n      commit('SET_USER', data)\n      return data\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  // 用户登出\n  async logout({ commit }) {\n    try {\n      await logout()\n      removeToken()\n      commit('RESET_STATE')\n    } catch (error) {\n      console.error('登出失败:', error)\n      // 即使请求失败，也清除本地状态\n      removeToken()\n      commit('RESET_STATE')\n      throw error\n    }\n  },\n\n  // 重置 Token\n  resetToken({ commit }) {\n    removeToken()\n    commit('RESET_STATE')\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}