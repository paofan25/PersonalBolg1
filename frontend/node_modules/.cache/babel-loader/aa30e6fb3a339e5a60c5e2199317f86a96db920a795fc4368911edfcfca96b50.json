{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '@/assets/images/games/star-coin.png';\nconst _hoisted_1 = {\n  class: \"memory-game\"\n};\nconst _hoisted_2 = {\n  class: \"game-header sweet-card\"\n};\nconst _hoisted_3 = {\n  class: \"game-stats\"\n};\nconst _hoisted_4 = {\n  class: \"moves\"\n};\nconst _hoisted_5 = {\n  class: \"time\"\n};\nconst _hoisted_6 = {\n  class: \"score\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"card-inner\"\n};\nconst _hoisted_9 = {\n  class: \"card-back\"\n};\nconst _hoisted_10 = [\"src\", \"alt\"];\nconst _hoisted_11 = {\n  class: \"card-name\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"victory-modal\"\n};\nconst _hoisted_13 = {\n  class: \"modal-content sweet-card\"\n};\nconst _hoisted_14 = {\n  class: \"stats\"\n};\nconst _hoisted_15 = {\n  class: \"rewards\"\n};\nconst _hoisted_16 = {\n  class: \"reward-items\"\n};\nconst _hoisted_17 = {\n  class: \"reward-item\"\n};\nconst _hoisted_18 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"gradient-text\"\n  }, \"甜品记忆配对\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, \"步数: \" + _toDisplayString($data.moves), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, \"时间: \" + _toDisplayString($options.formatTime($data.time)), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, \"得分: \" + _toDisplayString($data.score), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    class: \"restart-btn sweet-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.restartGame && $options.restartGame(...args))\n  }, \" 重新开始 \")]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"game-board\", {\n      disabled: !$data.canFlip\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cards, (card, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"card\", {\n        flipped: card.isFlipped,\n        matched: card.isMatched\n      }]),\n      onClick: $event => $options.flipCard(index)\n    }, [_createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n      class: \"card-front\"\n    }, [_createElementVNode(\"div\", {\n      class: \"card-pattern\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n      src: card.image,\n      alt: card.name\n    }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(card.name), 1 /* TEXT */)])])], 10 /* CLASS, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */), _createCommentVNode(\" 胜利弹窗 \"), $data.showVictory ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"gradient-text\"\n  }, \"恭喜通关！\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, \"用时: \" + _toDisplayString($options.formatTime($data.time)), 1 /* TEXT */), _createElementVNode(\"p\", null, \"步数: \" + _toDisplayString($data.moves), 1 /* TEXT */), _createElementVNode(\"p\", null, \"得分: \" + _toDisplayString($data.score), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"获得奖励:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_cache[5] || (_cache[5] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"星星币\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, \"+\" + _toDisplayString($data.score), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    class: \"sweet-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.restartGame && $options.restartGame(...args))\n  }, \"再玩一次\"), _createElementVNode(\"button\", {\n    class: \"sweet-btn primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.backToGames && $options.backToGames(...args))\n  }, \"返回游戏列表\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","moves","_hoisted_5","$options","formatTime","time","_hoisted_6","score","onClick","_cache","args","restartGame","_normalizeClass","disabled","canFlip","_Fragment","_renderList","cards","card","index","flipped","isFlipped","matched","isMatched","$event","flipCard","_hoisted_8","_hoisted_9","src","image","alt","name","_hoisted_10","_hoisted_11","_hoisted_7","_createCommentVNode","showVictory","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","backToGames"],"sources":["E:\\code\\PersonalBolg1\\frontend\\src\\views\\games\\MemoryGame.vue"],"sourcesContent":["<template>\n  <div class=\"memory-game\">\n    <div class=\"game-header sweet-card\">\n      <h2 class=\"gradient-text\">甜品记忆配对</h2>\n      <div class=\"game-stats\">\n        <span class=\"moves\">步数: {{ moves }}</span>\n        <span class=\"time\">时间: {{ formatTime(time) }}</span>\n        <span class=\"score\">得分: {{ score }}</span>\n      </div>\n      <button class=\"restart-btn sweet-btn\" @click=\"restartGame\">\n        重新开始\n      </button>\n    </div>\n\n    <div class=\"game-board\" :class=\"{ disabled: !canFlip }\">\n      <div v-for=\"(card, index) in cards\" \n           :key=\"index\"\n           class=\"card\"\n           :class=\"{ flipped: card.isFlipped, matched: card.isMatched }\"\n           @click=\"flipCard(index)\">\n        <div class=\"card-inner\">\n          <div class=\"card-front\">\n            <div class=\"card-pattern\"></div>\n          </div>\n          <div class=\"card-back\">\n            <img :src=\"card.image\" :alt=\"card.name\" />\n            <span class=\"card-name\">{{ card.name }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 胜利弹窗 -->\n    <div class=\"victory-modal\" v-if=\"showVictory\">\n      <div class=\"modal-content sweet-card\">\n        <h3 class=\"gradient-text\">恭喜通关！</h3>\n        <div class=\"stats\">\n          <p>用时: {{ formatTime(time) }}</p>\n          <p>步数: {{ moves }}</p>\n          <p>得分: {{ score }}</p>\n        </div>\n        <div class=\"rewards\">\n          <p>获得奖励:</p>\n          <div class=\"reward-items\">\n            <div class=\"reward-item\">\n              <img src=\"@/assets/images/games/star-coin.png\" alt=\"星星币\" />\n              <span>+{{ score }}</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"buttons\">\n          <button class=\"sweet-btn\" @click=\"restartGame\">再玩一次</button>\n          <button class=\"sweet-btn primary\" @click=\"backToGames\">返回游戏列表</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst DESSERTS = [\n  { name: '草莓蛋糕', image: require('@/assets/images/games/desserts/cake.png') },\n  { name: '马卡龙', image: require('@/assets/images/games/desserts/macaron.png') },\n  { name: '甜甜圈', image: require('@/assets/images/games/desserts/donut.png') },\n  { name: '冰淇淋', image: require('@/assets/images/games/desserts/icecream.png') },\n  { name: '布丁', image: require('@/assets/images/games/desserts/pudding.png') },\n  { name: '奶茶', image: require('@/assets/images/games/desserts/bubbletea.png') }\n];\n\nexport default {\n  name: 'MemoryGame',\n  data() {\n    return {\n      cards: [],\n      flippedCards: [],\n      canFlip: true,\n      moves: 0,\n      time: 0,\n      score: 0,\n      timer: null,\n      showVictory: false,\n      matchedPairs: 0\n    };\n  },\n  created() {\n    this.initGame();\n  },\n  beforeUnmount() {\n    this.stopTimer();\n  },\n  methods: {\n    initGame() {\n      // 创建配对卡片\n      this.cards = [...DESSERTS, ...DESSERTS]\n        .map((dessert, index) => ({\n          ...dessert,\n          id: index,\n          isFlipped: false,\n          isMatched: false\n        }))\n        .sort(() => Math.random() - 0.5);\n\n      this.flippedCards = [];\n      this.moves = 0;\n      this.time = 0;\n      this.score = 0;\n      this.showVictory = false;\n      this.matchedPairs = 0;\n      this.canFlip = true;\n      \n      this.startTimer();\n    },\n    startTimer() {\n      this.stopTimer();\n      this.timer = setInterval(() => {\n        this.time++;\n      }, 1000);\n    },\n    stopTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    },\n    formatTime(seconds) {\n      const mins = Math.floor(seconds / 60);\n      const secs = seconds % 60;\n      return `${mins}:${secs.toString().padStart(2, '0')}`;\n    },\n    async flipCard(index) {\n      if (!this.canFlip || this.cards[index].isFlipped || this.cards[index].isMatched) {\n        return;\n      }\n\n      this.cards[index].isFlipped = true;\n      this.flippedCards.push(index);\n\n      if (this.flippedCards.length === 2) {\n        this.moves++;\n        this.canFlip = false;\n        \n        const [firstIndex, secondIndex] = this.flippedCards;\n        const firstCard = this.cards[firstIndex];\n        const secondCard = this.cards[secondIndex];\n\n        if (firstCard.name === secondCard.name) {\n          // 匹配成功\n          await this.handleMatch(firstIndex, secondIndex);\n        } else {\n          // 匹配失败\n          await this.handleMismatch(firstIndex, secondIndex);\n        }\n\n        this.flippedCards = [];\n        this.canFlip = true;\n      }\n    },\n    async handleMatch(firstIndex, secondIndex) {\n      // 播放成功音效\n      const audio = new Audio(require('@/assets/audio/match.mp3'));\n      audio.play();\n\n      // 添加匹配动画\n      this.cards[firstIndex].isMatched = true;\n      this.cards[secondIndex].isMatched = true;\n      \n      // 更新分数\n      this.score += 100;\n      this.matchedPairs++;\n\n      // 检查游戏是否结束\n      if (this.matchedPairs === DESSERTS.length) {\n        this.handleVictory();\n      }\n\n      // 等待动画完成\n      await new Promise(resolve => setTimeout(resolve, 500));\n    },\n    async handleMismatch(firstIndex, secondIndex) {\n      // 播放失败音效\n      const audio = new Audio(require('@/assets/audio/mismatch.mp3'));\n      audio.play();\n\n      // 等待一段时间后翻回\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      this.cards[firstIndex].isFlipped = false;\n      this.cards[secondIndex].isFlipped = false;\n    },\n    handleVictory() {\n      this.stopTimer();\n      this.showVictory = true;\n      \n      // 计算最终得分\n      const timeBonus = Math.max(0, 3000 - this.time * 10);\n      const movesBonus = Math.max(0, 2000 - this.moves * 20);\n      this.score += timeBonus + movesBonus;\n\n      // 保存分数到用户数据\n      // TODO: 调用 store action 保存分数\n    },\n    restartGame() {\n      this.showVictory = false;\n      this.initGame();\n    },\n    backToGames() {\n      this.$router.push('/games');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.memory-game {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.game-header {\n  text-align: center;\n  margin-bottom: 20px;\n  padding: 20px;\n}\n\n.game-stats {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 15px 0;\n}\n\n.game-board {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 15px;\n  perspective: 1000px;\n}\n\n.game-board.disabled {\n  pointer-events: none;\n}\n\n.card {\n  aspect-ratio: 3/4;\n  cursor: pointer;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 0.5s;\n}\n\n.card.flipped {\n  transform: rotateY(180deg);\n}\n\n.card.matched {\n  animation: matched 0.5s ease-out;\n}\n\n@keyframes matched {\n  0%, 100% { transform: rotateY(180deg) scale(1); }\n  50% { transform: rotateY(180deg) scale(1.1); }\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d;\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border-radius: var(--border-radius);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-front {\n  background: linear-gradient(135deg, var(--primary-pink), var(--primary-purple));\n}\n\n.card-pattern {\n  width: 60%;\n  height: 60%;\n  background-image: url('@/assets/images/games/card-pattern.png');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.2;\n}\n\n.card-back {\n  transform: rotateY(180deg);\n  padding: 10px;\n}\n\n.card-back img {\n  width: 80%;\n  height: auto;\n  margin-bottom: 10px;\n}\n\n.card-name {\n  font-size: 0.9rem;\n  color: var(--text-primary);\n  text-align: center;\n}\n\n/* 胜利弹窗 */\n.victory-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  width: 90%;\n  max-width: 400px;\n  padding: 30px;\n  text-align: center;\n}\n\n.stats {\n  margin: 20px 0;\n}\n\n.rewards {\n  margin: 20px 0;\n}\n\n.reward-items {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n}\n\n.reward-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.reward-item img {\n  width: 30px;\n  height: 30px;\n}\n\n.buttons {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .game-board {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media (max-width: 480px) {\n  .game-board {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .game-stats {\n    flex-direction: column;\n    gap: 10px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}